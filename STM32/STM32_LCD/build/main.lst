ARM GAS  /tmp/cchSu8av.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SystemClock_Config,"ax",%progbits
  19              		.align	2
  20              		.global	SystemClock_Config
  21              		.thumb
  22              		.thumb_func
  24              	SystemClock_Config:
  25              	.LFB64:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.c ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.c ****   * inserted by the user or by software development tools
  11:Core/Src/main.c ****   * are owned by their respective copyright owners.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.c ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.c ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.c ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.c ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.c ****   *      without specific prior written permission.
  25:Core/Src/main.c ****   *
  26:Core/Src/main.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Core/Src/main.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/cchSu8av.s 			page 2


  33:Core/Src/main.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.c ****   *
  37:Core/Src/main.c ****   ******************************************************************************
  38:Core/Src/main.c ****   */
  39:Core/Src/main.c **** /* USER CODE END Header */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  42:Core/Src/main.c **** #include "main.h"
  43:Core/Src/main.c **** #include "usart.h"
  44:Core/Src/main.c **** #include "gpio.h"
  45:Core/Src/main.c **** #include "fsmc.h"
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  49:Core/Src/main.c **** #include <stdio.h>
  50:Core/Src/main.c **** /* USER CODE END Includes */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PTD */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN PD */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PD */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN PM */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PM */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE BEGIN PV */
  70:Core/Src/main.c **** static uint16_t cnt = 0;
  71:Core/Src/main.c **** static uint8_t buf[LCD_STR_LEN_MAX] = {0};
  72:Core/Src/main.c **** /* USER CODE END PV */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  75:Core/Src/main.c **** void SystemClock_Config(void);
  76:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* USER CODE END PFP */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  81:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE END 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /**
  86:Core/Src/main.c ****   * @brief  The application entry point.
  87:Core/Src/main.c ****   * @retval int
  88:Core/Src/main.c ****   */
  89:Core/Src/main.c **** int main(void)
ARM GAS  /tmp/cchSu8av.s 			page 3


  90:Core/Src/main.c **** {
  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Core/Src/main.c ****   HAL_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Configure the system clock */
 105:Core/Src/main.c ****   SystemClock_Config();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Initialize all configured peripherals */
 112:Core/Src/main.c ****   MX_GPIO_Init();
 113:Core/Src/main.c ****   MX_FSMC_Init();
 114:Core/Src/main.c ****   MX_USART1_UART_Init();
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 116:Core/Src/main.c ****   LCD_Init();
 117:Core/Src/main.c ****   /* USER CODE END 2 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Infinite loop */
 120:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 121:Core/Src/main.c ****   while (1)
 122:Core/Src/main.c ****   {
 123:Core/Src/main.c ****     /* USER CODE END WHILE */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 126:Core/Src/main.c ****     HAL_Delay(1000);
 127:Core/Src/main.c ****     snprintf((char *)buf, LCD_STR_LEN_MAX, "I am counting 2 %d", cnt++);
 128:Core/Src/main.c ****     tftprintf(buf);
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c ****   /* USER CODE END 3 */
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /**
 134:Core/Src/main.c ****   * @brief System Clock Configuration
 135:Core/Src/main.c ****   * @retval None
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c **** void SystemClock_Config(void)
 138:Core/Src/main.c **** {
  27              		.loc 1 138 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 64
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
ARM GAS  /tmp/cchSu8av.s 			page 4


  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 91B0     		sub	sp, sp, #68
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 80
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  40              		.loc 1 139 0
  41 0004 0024     		movs	r4, #0
  42 0006 0894     		str	r4, [sp, #32]
  43 0008 0994     		str	r4, [sp, #36]
  44 000a 0B94     		str	r4, [sp, #44]
  45 000c 0C94     		str	r4, [sp, #48]
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  46              		.loc 1 140 0
  47 000e 0194     		str	r4, [sp, #4]
  48 0010 0294     		str	r4, [sp, #8]
  49 0012 0394     		str	r4, [sp, #12]
  50 0014 0494     		str	r4, [sp, #16]
  51 0016 0594     		str	r4, [sp, #20]
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /**Initializes the CPU, AHB and APB busses clocks 
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  52              		.loc 1 144 0
  53 0018 0122     		movs	r2, #1
  54 001a 0692     		str	r2, [sp, #24]
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  55              		.loc 1 145 0
  56 001c 4FF48033 		mov	r3, #65536
  57 0020 0793     		str	r3, [sp, #28]
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  58              		.loc 1 147 0
  59 0022 0A92     		str	r2, [sp, #40]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  60              		.loc 1 148 0
  61 0024 0225     		movs	r5, #2
  62 0026 0D95     		str	r5, [sp, #52]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  63              		.loc 1 149 0
  64 0028 0E93     		str	r3, [sp, #56]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  65              		.loc 1 150 0
  66 002a 4FF4E013 		mov	r3, #1835008
  67 002e 0F93     		str	r3, [sp, #60]
 151:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  68              		.loc 1 151 0
  69 0030 06A8     		add	r0, sp, #24
  70 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
  71              	.LVL0:
 152:Core/Src/main.c ****   {
 153:Core/Src/main.c ****     Error_Handler();
 154:Core/Src/main.c ****   }
 155:Core/Src/main.c ****   /**Initializes the CPU, AHB and APB busses clocks 
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  72              		.loc 1 157 0
ARM GAS  /tmp/cchSu8av.s 			page 5


  73 0036 0F23     		movs	r3, #15
  74 0038 0193     		str	r3, [sp, #4]
 158:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  75              		.loc 1 159 0
  76 003a 0295     		str	r5, [sp, #8]
 160:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  77              		.loc 1 160 0
  78 003c 0394     		str	r4, [sp, #12]
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  79              		.loc 1 161 0
  80 003e 4FF48063 		mov	r3, #1024
  81 0042 0493     		str	r3, [sp, #16]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  82              		.loc 1 162 0
  83 0044 0594     		str	r4, [sp, #20]
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  84              		.loc 1 164 0
  85 0046 01A8     		add	r0, sp, #4
  86 0048 2946     		mov	r1, r5
  87 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
  88              	.LVL1:
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c **** }
  89              		.loc 1 168 0
  90 004e 11B0     		add	sp, sp, #68
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 12
  93              		@ sp needed
  94 0050 30BD     		pop	{r4, r5, pc}
  95              		.cfi_endproc
  96              	.LFE64:
  98 0052 00BF     		.section	.text.main,"ax",%progbits
  99              		.align	2
 100              		.global	main
 101              		.thumb
 102              		.thumb_func
 104              	main:
 105              	.LFB63:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 106              		.loc 1 90 0
 107              		.cfi_startproc
 108              		@ Volatile: function does not return.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111 0000 08B5     		push	{r3, lr}
 112              	.LCFI3:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 3, -8
 115              		.cfi_offset 14, -4
  98:Core/Src/main.c **** 
 116              		.loc 1 98 0
 117 0002 FFF7FEFF 		bl	HAL_Init
 118              	.LVL2:
ARM GAS  /tmp/cchSu8av.s 			page 6


 105:Core/Src/main.c **** 
 119              		.loc 1 105 0
 120 0006 FFF7FEFF 		bl	SystemClock_Config
 121              	.LVL3:
 112:Core/Src/main.c ****   MX_FSMC_Init();
 122              		.loc 1 112 0
 123 000a FFF7FEFF 		bl	MX_GPIO_Init
 124              	.LVL4:
 113:Core/Src/main.c ****   MX_USART1_UART_Init();
 125              		.loc 1 113 0
 126 000e FFF7FEFF 		bl	MX_FSMC_Init
 127              	.LVL5:
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 128              		.loc 1 114 0
 129 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 130              	.LVL6:
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 131              		.loc 1 116 0
 132 0016 FFF7FEFF 		bl	LCD_Init
 133              	.LVL7:
 134              	.L4:
 126:Core/Src/main.c ****     snprintf((char *)buf, LCD_STR_LEN_MAX, "I am counting 2 %d", cnt++);
 135              		.loc 1 126 0 discriminator 1
 136 001a 4FF47A70 		mov	r0, #1000
 137 001e FFF7FEFF 		bl	HAL_Delay
 138              	.LVL8:
 127:Core/Src/main.c ****     tftprintf(buf);
 139              		.loc 1 127 0 discriminator 1
 140 0022 074A     		ldr	r2, .L6
 141 0024 1388     		ldrh	r3, [r2]
 142 0026 591C     		adds	r1, r3, #1
 143 0028 1180     		strh	r1, [r2]	@ movhi
 144 002a 064C     		ldr	r4, .L6+4
 145 002c 2046     		mov	r0, r4
 146 002e 3421     		movs	r1, #52
 147 0030 054A     		ldr	r2, .L6+8
 148 0032 FFF7FEFF 		bl	snprintf
 149              	.LVL9:
 128:Core/Src/main.c ****   }
 150              		.loc 1 128 0 discriminator 1
 151 0036 2046     		mov	r0, r4
 152 0038 FFF7FEFF 		bl	tftprintf
 153              	.LVL10:
 129:Core/Src/main.c ****   /* USER CODE END 3 */
 154              		.loc 1 129 0 discriminator 1
 155 003c EDE7     		b	.L4
 156              	.L7:
 157 003e 00BF     		.align	2
 158              	.L6:
 159 0040 00000000 		.word	.LANCHOR0
 160 0044 00000000 		.word	.LANCHOR1
 161 0048 00000000 		.word	.LC0
 162              		.cfi_endproc
 163              	.LFE63:
 165              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 166              		.align	2
 167              		.global	HAL_TIM_PeriodElapsedCallback
ARM GAS  /tmp/cchSu8av.s 			page 7


 168              		.thumb
 169              		.thumb_func
 171              	HAL_TIM_PeriodElapsedCallback:
 172              	.LFB65:
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /* USER CODE END 4 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 176:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 177:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 178:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 179:Core/Src/main.c ****   * @param  htim : TIM handle
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 183:Core/Src/main.c **** {
 173              		.loc 1 183 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              	.LVL11:
 178 0000 08B5     		push	{r3, lr}
 179              	.LCFI4:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 3, -8
 182              		.cfi_offset 14, -4
 184:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 187:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 183              		.loc 1 187 0
 184 0002 0268     		ldr	r2, [r0]
 185 0004 024B     		ldr	r3, .L11
 186 0006 9A42     		cmp	r2, r3
 187 0008 01D1     		bne	.L8
 188:Core/Src/main.c ****     HAL_IncTick();
 188              		.loc 1 188 0
 189 000a FFF7FEFF 		bl	HAL_IncTick
 190              	.LVL12:
 191              	.L8:
 192 000e 08BD     		pop	{r3, pc}
 193              	.L12:
 194              		.align	2
 195              	.L11:
 196 0010 002C0140 		.word	1073818624
 197              		.cfi_endproc
 198              	.LFE65:
 200              		.section	.text.Error_Handler,"ax",%progbits
 201              		.align	2
 202              		.global	Error_Handler
 203              		.thumb
 204              		.thumb_func
 206              	Error_Handler:
 207              	.LFB66:
ARM GAS  /tmp/cchSu8av.s 			page 8


 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 193:Core/Src/main.c **** }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 197:Core/Src/main.c ****   * @retval None
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c **** void Error_Handler(void)
 200:Core/Src/main.c **** {
 208              		.loc 1 200 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 0000 7047     		bx	lr
 214              		.cfi_endproc
 215              	.LFE66:
 217 0002 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 218              		.align	2
 219              	.LC0:
 220 0000 4920616D 		.ascii	"I am counting 2 %d\000"
 220      20636F75 
 220      6E74696E 
 220      67203220 
 220      256400
 221              		.section	.bss.buf,"aw",%nobits
 222              		.align	2
 223              		.set	.LANCHOR1,. + 0
 226              	buf:
 227 0000 00000000 		.space	52
 227      00000000 
 227      00000000 
 227      00000000 
 227      00000000 
 228              		.section	.bss.cnt,"aw",%nobits
 229              		.align	1
 230              		.set	.LANCHOR0,. + 0
 233              	cnt:
 234 0000 0000     		.space	2
 235              		.text
 236              	.Letext0:
 237              		.file 2 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_types.h"
 238              		.file 3 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 239              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 240              		.file 5 "/opt/gcc-arm-none-eabi-4_9-2015q3/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 241              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 242              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 243              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 244              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 245              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 246              		.file 11 "Core/Inc/gpio.h"
 247              		.file 12 "Core/Inc/fsmc.h"
 248              		.file 13 "Core/Inc/usart.h"
 249              		.file 14 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/stdio.h"
ARM GAS  /tmp/cchSu8av.s 			page 9


 250              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 251              		.file 16 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/cchSu8av.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cchSu8av.s:19     .text.SystemClock_Config:00000000 $t
     /tmp/cchSu8av.s:24     .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cchSu8av.s:99     .text.main:00000000 $t
     /tmp/cchSu8av.s:104    .text.main:00000000 main
     /tmp/cchSu8av.s:159    .text.main:00000040 $d
     /tmp/cchSu8av.s:166    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/cchSu8av.s:171    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cchSu8av.s:196    .text.HAL_TIM_PeriodElapsedCallback:00000010 $d
     /tmp/cchSu8av.s:201    .text.Error_Handler:00000000 $t
     /tmp/cchSu8av.s:206    .text.Error_Handler:00000000 Error_Handler
     /tmp/cchSu8av.s:218    .rodata.str1.4:00000000 $d
     /tmp/cchSu8av.s:222    .bss.buf:00000000 $d
     /tmp/cchSu8av.s:226    .bss.buf:00000000 buf
     /tmp/cchSu8av.s:229    .bss.cnt:00000000 $d
     /tmp/cchSu8av.s:233    .bss.cnt:00000000 cnt
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_FSMC_Init
MX_USART1_UART_Init
LCD_Init
HAL_Delay
snprintf
tftprintf
HAL_IncTick
