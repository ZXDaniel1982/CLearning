ARM GAS  /tmp/ccef5bRe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	2
  20              		.global	NMI_Handler
  21              		.thumb
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB63:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   *
   8:Core/Src/stm32f1xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   9:Core/Src/stm32f1xx_it.c ****   *
  10:Core/Src/stm32f1xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Core/Src/stm32f1xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Core/Src/stm32f1xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Core/Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Core/Src/stm32f1xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Core/Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Core/Src/stm32f1xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Core/Src/stm32f1xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Core/Src/stm32f1xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Core/Src/stm32f1xx_it.c ****   *      without specific prior written permission.
  20:Core/Src/stm32f1xx_it.c ****   *
  21:Core/Src/stm32f1xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Core/Src/stm32f1xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Core/Src/stm32f1xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Core/Src/stm32f1xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Core/Src/stm32f1xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Core/Src/stm32f1xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Core/Src/stm32f1xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Core/Src/stm32f1xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Core/Src/stm32f1xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Core/Src/stm32f1xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Core/Src/stm32f1xx_it.c ****   *
  32:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccef5bRe.s 			page 2


  33:Core/Src/stm32f1xx_it.c ****   */
  34:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  35:Core/Src/stm32f1xx_it.c **** 
  36:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Core/Src/stm32f1xx_it.c **** #include "main.h"
  38:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  39:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  45:Core/Src/stm32f1xx_it.c **** 
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  49:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  50:Core/Src/stm32f1xx_it.c ****  
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  54:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  59:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  60:Core/Src/stm32f1xx_it.c **** 
  61:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  62:Core/Src/stm32f1xx_it.c **** 
  63:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/stm32f1xx_it.c **** 
  66:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  67:Core/Src/stm32f1xx_it.c **** 
  68:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/stm32f1xx_it.c **** 
  71:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  72:Core/Src/stm32f1xx_it.c **** 
  73:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  74:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim1;
  75:Core/Src/stm32f1xx_it.c **** 
  76:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  77:Core/Src/stm32f1xx_it.c **** 
  78:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  79:Core/Src/stm32f1xx_it.c **** 
  80:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  81:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  82:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  83:Core/Src/stm32f1xx_it.c **** /**
  84:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  85:Core/Src/stm32f1xx_it.c ****   */
  86:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  87:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 87 0
  28              		.cfi_startproc
ARM GAS  /tmp/ccef5bRe.s 			page 3


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE63:
  36 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  37              		.align	2
  38              		.global	HardFault_Handler
  39              		.thumb
  40              		.thumb_func
  42              	HardFault_Handler:
  43              	.LFB64:
  88:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  89:Core/Src/stm32f1xx_it.c **** 
  90:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  92:Core/Src/stm32f1xx_it.c **** 
  93:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  94:Core/Src/stm32f1xx_it.c **** }
  95:Core/Src/stm32f1xx_it.c **** 
  96:Core/Src/stm32f1xx_it.c **** /**
  97:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  98:Core/Src/stm32f1xx_it.c ****   */
  99:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
 100:Core/Src/stm32f1xx_it.c **** {
  44              		.loc 1 100 0
  45              		.cfi_startproc
  46              		@ Volatile: function does not return.
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50              	.L3:
 101:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 102:Core/Src/stm32f1xx_it.c **** 
 103:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 104:Core/Src/stm32f1xx_it.c ****   while (1)
 105:Core/Src/stm32f1xx_it.c ****   {
 106:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 107:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 108:Core/Src/stm32f1xx_it.c ****   }
  51              		.loc 1 108 0 discriminator 1
  52 0000 FEE7     		b	.L3
  53              		.cfi_endproc
  54              	.LFE64:
  56 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  57              		.align	2
  58              		.global	MemManage_Handler
  59              		.thumb
  60              		.thumb_func
  62              	MemManage_Handler:
  63              	.LFB65:
 109:Core/Src/stm32f1xx_it.c **** }
 110:Core/Src/stm32f1xx_it.c **** 
 111:Core/Src/stm32f1xx_it.c **** /**
 112:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 113:Core/Src/stm32f1xx_it.c ****   */
ARM GAS  /tmp/ccef5bRe.s 			page 4


 114:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 115:Core/Src/stm32f1xx_it.c **** {
  64              		.loc 1 115 0
  65              		.cfi_startproc
  66              		@ Volatile: function does not return.
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70              	.L5:
 116:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 117:Core/Src/stm32f1xx_it.c **** 
 118:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 119:Core/Src/stm32f1xx_it.c ****   while (1)
 120:Core/Src/stm32f1xx_it.c ****   {
 121:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 122:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 123:Core/Src/stm32f1xx_it.c ****   }
  71              		.loc 1 123 0 discriminator 1
  72 0000 FEE7     		b	.L5
  73              		.cfi_endproc
  74              	.LFE65:
  76 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  77              		.align	2
  78              		.global	BusFault_Handler
  79              		.thumb
  80              		.thumb_func
  82              	BusFault_Handler:
  83              	.LFB66:
 124:Core/Src/stm32f1xx_it.c **** }
 125:Core/Src/stm32f1xx_it.c **** 
 126:Core/Src/stm32f1xx_it.c **** /**
 127:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 128:Core/Src/stm32f1xx_it.c ****   */
 129:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 130:Core/Src/stm32f1xx_it.c **** {
  84              		.loc 1 130 0
  85              		.cfi_startproc
  86              		@ Volatile: function does not return.
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.L7:
 131:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 132:Core/Src/stm32f1xx_it.c **** 
 133:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 134:Core/Src/stm32f1xx_it.c ****   while (1)
 135:Core/Src/stm32f1xx_it.c ****   {
 136:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 137:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 138:Core/Src/stm32f1xx_it.c ****   }
  91              		.loc 1 138 0 discriminator 1
  92 0000 FEE7     		b	.L7
  93              		.cfi_endproc
  94              	.LFE66:
  96 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  97              		.align	2
  98              		.global	UsageFault_Handler
ARM GAS  /tmp/ccef5bRe.s 			page 5


  99              		.thumb
 100              		.thumb_func
 102              	UsageFault_Handler:
 103              	.LFB67:
 139:Core/Src/stm32f1xx_it.c **** }
 140:Core/Src/stm32f1xx_it.c **** 
 141:Core/Src/stm32f1xx_it.c **** /**
 142:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 143:Core/Src/stm32f1xx_it.c ****   */
 144:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 145:Core/Src/stm32f1xx_it.c **** {
 104              		.loc 1 145 0
 105              		.cfi_startproc
 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.L9:
 146:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 147:Core/Src/stm32f1xx_it.c **** 
 148:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 149:Core/Src/stm32f1xx_it.c ****   while (1)
 150:Core/Src/stm32f1xx_it.c ****   {
 151:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 152:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 153:Core/Src/stm32f1xx_it.c ****   }
 111              		.loc 1 153 0 discriminator 1
 112 0000 FEE7     		b	.L9
 113              		.cfi_endproc
 114              	.LFE67:
 116 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 117              		.align	2
 118              		.global	SVC_Handler
 119              		.thumb
 120              		.thumb_func
 122              	SVC_Handler:
 123              	.LFB68:
 154:Core/Src/stm32f1xx_it.c **** }
 155:Core/Src/stm32f1xx_it.c **** 
 156:Core/Src/stm32f1xx_it.c **** /**
 157:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 158:Core/Src/stm32f1xx_it.c ****   */
 159:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 160:Core/Src/stm32f1xx_it.c **** {
 124              		.loc 1 160 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE68:
 133 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 134              		.align	2
 135              		.global	DebugMon_Handler
 136              		.thumb
 137              		.thumb_func
ARM GAS  /tmp/ccef5bRe.s 			page 6


 139              	DebugMon_Handler:
 140              	.LFB69:
 161:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 162:Core/Src/stm32f1xx_it.c **** 
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 164:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 165:Core/Src/stm32f1xx_it.c **** 
 166:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 167:Core/Src/stm32f1xx_it.c **** }
 168:Core/Src/stm32f1xx_it.c **** 
 169:Core/Src/stm32f1xx_it.c **** /**
 170:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 171:Core/Src/stm32f1xx_it.c ****   */
 172:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 173:Core/Src/stm32f1xx_it.c **** {
 141              		.loc 1 173 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 7047     		bx	lr
 147              		.cfi_endproc
 148              	.LFE69:
 150 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 151              		.align	2
 152              		.global	PendSV_Handler
 153              		.thumb
 154              		.thumb_func
 156              	PendSV_Handler:
 157              	.LFB70:
 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 175:Core/Src/stm32f1xx_it.c **** 
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 177:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 178:Core/Src/stm32f1xx_it.c **** 
 179:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 180:Core/Src/stm32f1xx_it.c **** }
 181:Core/Src/stm32f1xx_it.c **** 
 182:Core/Src/stm32f1xx_it.c **** /**
 183:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 184:Core/Src/stm32f1xx_it.c ****   */
 185:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 186:Core/Src/stm32f1xx_it.c **** {
 158              		.loc 1 186 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163 0000 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE70:
 167 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 168              		.align	2
 169              		.global	SysTick_Handler
 170              		.thumb
 171              		.thumb_func
 173              	SysTick_Handler:
ARM GAS  /tmp/ccef5bRe.s 			page 7


 174              	.LFB71:
 187:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 188:Core/Src/stm32f1xx_it.c **** 
 189:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 191:Core/Src/stm32f1xx_it.c **** 
 192:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 193:Core/Src/stm32f1xx_it.c **** }
 194:Core/Src/stm32f1xx_it.c **** 
 195:Core/Src/stm32f1xx_it.c **** /**
 196:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 197:Core/Src/stm32f1xx_it.c ****   */
 198:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 199:Core/Src/stm32f1xx_it.c **** {
 175              		.loc 1 199 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0000 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE71:
 184 0002 00BF     		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 185              		.align	2
 186              		.global	TIM1_UP_IRQHandler
 187              		.thumb
 188              		.thumb_func
 190              	TIM1_UP_IRQHandler:
 191              	.LFB72:
 200:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 201:Core/Src/stm32f1xx_it.c **** 
 202:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 203:Core/Src/stm32f1xx_it.c ****   
 204:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 205:Core/Src/stm32f1xx_it.c **** 
 206:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 207:Core/Src/stm32f1xx_it.c **** }
 208:Core/Src/stm32f1xx_it.c **** 
 209:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 210:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 211:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 212:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 213:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 214:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 215:Core/Src/stm32f1xx_it.c **** 
 216:Core/Src/stm32f1xx_it.c **** /**
 217:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 218:Core/Src/stm32f1xx_it.c ****   */
 219:Core/Src/stm32f1xx_it.c **** void TIM1_UP_IRQHandler(void)
 220:Core/Src/stm32f1xx_it.c **** {
 192              		.loc 1 220 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		.loc 1 220 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI0:
ARM GAS  /tmp/ccef5bRe.s 			page 8


 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 221:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 222:Core/Src/stm32f1xx_it.c **** 
 223:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 224:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 202              		.loc 1 224 0
 203 0002 0248     		ldr	r0, .L16
 204 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 205              	.LVL0:
 206 0008 08BD     		pop	{r3, pc}
 207              	.L17:
 208 000a 00BF     		.align	2
 209              	.L16:
 210 000c 00000000 		.word	htim1
 211              		.cfi_endproc
 212              	.LFE72:
 214              		.text
 215              	.Letext0:
 216              		.file 2 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_types.h"
 217              		.file 3 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 218              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 219              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 220              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 221              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 222              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccef5bRe.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
     /tmp/ccef5bRe.s:19     .text.NMI_Handler:00000000 $t
     /tmp/ccef5bRe.s:24     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccef5bRe.s:37     .text.HardFault_Handler:00000000 $t
     /tmp/ccef5bRe.s:42     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccef5bRe.s:57     .text.MemManage_Handler:00000000 $t
     /tmp/ccef5bRe.s:62     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/ccef5bRe.s:77     .text.BusFault_Handler:00000000 $t
     /tmp/ccef5bRe.s:82     .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/ccef5bRe.s:97     .text.UsageFault_Handler:00000000 $t
     /tmp/ccef5bRe.s:102    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/ccef5bRe.s:117    .text.SVC_Handler:00000000 $t
     /tmp/ccef5bRe.s:122    .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccef5bRe.s:134    .text.DebugMon_Handler:00000000 $t
     /tmp/ccef5bRe.s:139    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/ccef5bRe.s:151    .text.PendSV_Handler:00000000 $t
     /tmp/ccef5bRe.s:156    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccef5bRe.s:168    .text.SysTick_Handler:00000000 $t
     /tmp/ccef5bRe.s:173    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccef5bRe.s:185    .text.TIM1_UP_IRQHandler:00000000 $t
     /tmp/ccef5bRe.s:190    .text.TIM1_UP_IRQHandler:00000000 TIM1_UP_IRQHandler
     /tmp/ccef5bRe.s:210    .text.TIM1_UP_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim1
