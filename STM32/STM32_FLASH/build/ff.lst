ARM GAS  /tmp/cclwbenu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ff.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.mem_cpy,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	mem_cpy:
  24              	.LFB63:
  25              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - FAT file system module  R0.11                 (C)ChaN, 2015
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is a free software that opened under license policy of
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / following conditions.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2015, ChaN, all right reserved.
   8:Middlewares/Third_Party/FatFs/src/ff.c **** /
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  11:Middlewares/Third_Party/FatFs/src/ff.c **** /
  12:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  13:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 26,'06 R0.00  Prototype.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /
  19:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 29,'06 R0.01  First stable version.
  20:Middlewares/Third_Party/FatFs/src/ff.c **** /
  21:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 01,'06 R0.02  Added FAT12 support.
  22:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Removed unbuffered mode.
  23:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a problem on small (<32M) partition.
  24:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 10,'06 R0.02a Added a configuration option (_FS_MINIMUM).
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /
  26:Middlewares/Third_Party/FatFs/src/ff.c **** / Sep 22,'06 R0.03  Added f_rename().
  27:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed option _FS_MINIMUM to _FS_MINIMIZE.
  28:Middlewares/Third_Party/FatFs/src/ff.c **** / Dec 11,'06 R0.03a Improved cluster scan algorithm to write files fast.
  29:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkdir() creates incorrect directory on FAT32.
  30:Middlewares/Third_Party/FatFs/src/ff.c **** /
  31:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 04,'07 R0.04  Supported multiple drive system.
  32:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed some interfaces for multiple drive system.
  33:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed f_mountdrv() to f_mount().
ARM GAS  /tmp/cclwbenu.s 			page 2


  34:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_mkfs().
  35:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'07 R0.04a Supported multiple partitions on a physical drive.
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a capability of extending file size to f_lseek().
  37:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added minimization level 3.
  38:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed an endian sensitive code in f_mkfs().
  39:Middlewares/Third_Party/FatFs/src/ff.c **** / May 05,'07 R0.04b Added a configuration option _USE_NTFLAG.
  40:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added FSINFO support.
  41:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed DBCS name can result FR_INVALID_NAME.
  42:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed short seek (<= csize) collapses the file object.
  43:Middlewares/Third_Party/FatFs/src/ff.c **** /
  44:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 25,'07 R0.05  Changed arguments of f_read(), f_write() and f_mkfs().
  45:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkfs() on FAT32 creates incorrect FSINFO.
  46:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkdir() on FAT32 creates incorrect directory.
  47:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 03,'08 R0.05a Added f_truncate() and f_utime().
  48:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed off by one error at FAT sub-type determination.
  49:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed btr in f_read() can be mistruncated.
  50:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed cached sector is not flushed when create and close without write.
  51:Middlewares/Third_Party/FatFs/src/ff.c **** /
  52:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'08 R0.06  Added fputc(), fputs(), fprintf() and fgets().
  53:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved performance of f_lseek() on moving to the same or following cluster.
  54:Middlewares/Third_Party/FatFs/src/ff.c **** /
  55:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'09 R0.07  Merged Tiny-FatFs as a configuration option. (_FS_TINY)
  56:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added long file name feature.
  57:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added multiple code page feature.
  58:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added re-entrancy for multitask operation.
  59:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added auto cluster size selection to f_mkfs().
  60:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added rewind option to f_readdir().
  61:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed result code of critical errors.
  62:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Renamed string functions to avoid name collision.
  63:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 14,'09 R0.07a Separated out OS dependent code on reentrant cfg.
  64:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added multiple sector size feature.
  65:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 21,'09 R0.07c Fixed f_unlink() can return FR_OK on error.
  66:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed wrong cache control in f_lseek().
  67:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added relative path feature.
  68:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_chdir() and f_chdrive().
  69:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added proper case conversion to extended character.
  70:Middlewares/Third_Party/FatFs/src/ff.c **** / Nov 03,'09 R0.07e Separated out configuration options from ff.h to ffconf.h.
  71:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_unlink() fails to remove a sub-directory on _FS_RPATH.
  72:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed name matching error on the 13 character boundary.
  73:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a configuration option, _LFN_UNICODE.
  74:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed f_readdir() to return the SFN with always upper case on non-LFN cfg.
  75:Middlewares/Third_Party/FatFs/src/ff.c **** /
  76:Middlewares/Third_Party/FatFs/src/ff.c **** / May 15,'10 R0.08  Added a memory configuration option. (_USE_LFN = 3)
  77:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added file lock feature. (_FS_SHARE)
  78:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added fast seek feature. (_USE_FASTSEEK)
  79:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed some types on the API, XCHAR->TCHAR.
  80:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed .fname in the FILINFO structure on Unicode cfg.
  81:Middlewares/Third_Party/FatFs/src/ff.c **** /                   String functions support UTF-8 encoding files on Unicode cfg.
  82:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 16,'10 R0.08a Added f_getcwd().
  83:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added sector erase feature. (_USE_ERASE)
  84:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Moved file lock semaphore table from fs object to the bss.
  85:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a wrong directory entry is created on non-LFN cfg when the given name con
  86:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkfs() creates wrong FAT32 volume.
  87:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 15,'11 R0.08b Fast seek feature is also applied to f_read() and f_write().
  88:Middlewares/Third_Party/FatFs/src/ff.c **** /                   f_lseek() reports required table size on creating CLMP.
  89:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Extended format syntax of f_printf().
  90:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Ignores duplicated directory separators in given path name.
ARM GAS  /tmp/cclwbenu.s 			page 3


  91:Middlewares/Third_Party/FatFs/src/ff.c **** /
  92:Middlewares/Third_Party/FatFs/src/ff.c **** / Sep 06,'11 R0.09  f_mkfs() supports multiple partition to complete the multiple partition feature
  93:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_fdisk().
  94:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 27,'12 R0.09a Changed f_open() and f_opendir() reject null object pointer to avoid crash.
  95:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed option name _FS_SHARE to _FS_LOCK.
  96:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed assertion failure due to OS/2 EA on FAT12/16 volume.
  97:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 24,'13 R0.09b Added f_setlabel() and f_getlabel().
  98:Middlewares/Third_Party/FatFs/src/ff.c **** /
  99:Middlewares/Third_Party/FatFs/src/ff.c **** / Oct 02,'13 R0.10  Added selection of character encoding on the file. (_STRF_ENCODE)
 100:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_closedir().
 101:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added forced full FAT scan for f_getfree(). (_FS_NOFSINFO)
 102:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added forced mount feature with changes of f_mount().
 103:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved behavior of volume auto detection.
 104:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved write throughput of f_puts() and f_printf().
 105:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed argument of f_chdrive(), f_mkfs(), disk_read() and disk_write().
 106:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_write() can be truncated when the file size is close to 4GB.
 107:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_open(), f_mkdir() and f_setlabel() can return incorrect error code.
 108:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 15,'14 R0.10a Added arbitrary strings as drive number in the path name. (_STR_VOLUME_ID)
 109:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a configuration option of minimum sector size. (_MIN_SS)
 110:Middlewares/Third_Party/FatFs/src/ff.c **** /                   2nd argument of f_rename() can have a drive number and it will be ignored.
 111:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mount() with forced mount fails when drive number is >= 1.
 112:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_close() invalidates the file object without volume lock.
 113:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_closedir() returns but the volume lock is left acquired.
 114:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed creation of an entry with LFN fails on too many SFN collisions.
 115:Middlewares/Third_Party/FatFs/src/ff.c **** / May 19,'14 R0.10b Fixed a hard error in the disk I/O layer can collapse the directory entry.
 116:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed LFN entry is not deleted on delete/rename an object with lossy converted 
 117:Middlewares/Third_Party/FatFs/src/ff.c **** / Nov  9,'14 R0.10c Added a configuration option for the platforms without RTC. (_FS_NORTC)
 118:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed volume label created by Mac OS X cannot be retrieved with f_getlabel(). (
 119:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a potential problem of FAT access that can appear on disk error.
 120:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed null pointer dereference on attempting to delete the root direcotry. (app
 121:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 02,'15 R0.11  Added f_findfirst() and f_findnext(). (_USE_FIND)
 122:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_unlink() does not remove cluster chain of the file. (appeared at R0.10c
 123:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed _FS_NORTC option does not work properly. (appeared at R0.10c)
 124:Middlewares/Third_Party/FatFs/src/ff.c **** /---------------------------------------------------------------------------*/
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 
 126:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
 127:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of disk I/O functions */
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 130:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 131:Middlewares/Third_Party/FatFs/src/ff.c **** 
 132:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 134:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 
 136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 32020	/* Revision ID */
 137:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
 138:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** 
 141:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 143:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 144:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 146:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 147:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
ARM GAS  /tmp/cclwbenu.s 			page 4


 148:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 149:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 150:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 152:Middlewares/Third_Party/FatFs/src/ff.c **** 
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 
 156:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 157:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 158:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 159:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 160:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 161:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 
 167:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp feature */
 168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 169:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 170:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 171:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 172:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 
 178:Middlewares/Third_Party/FatFs/src/ff.c **** /* File access control feature */
 179:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 180:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 181:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 182:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 183:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 184:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, directory (0:root) */
 186:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD idx;		/* Object ID 3, directory index */
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 188:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 189:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 
 193:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS extend character conversion table */
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
 198:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
 199:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
 200:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
 201:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
 202:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
 203:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
 204:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 5


 205:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
 209:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
 210:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
 211:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 213:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
 214:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 215:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 216:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
 220:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
 221:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 
 223:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
 224:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 225:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 226:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
 227:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
 230:Middlewares/Third_Party/FatFs/src/ff.c **** 
 231:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. (OEM) */
 232:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 233:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x9
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 
 238:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic (OEM) */
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x9
 241:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 
 245:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek (OEM) */
 246:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 247:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96,0xB0,0xB1,0xB2,
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 250:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 251:Middlewares/Third_Party/FatFs/src/ff.c **** 
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic (OEM) */
 253:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 254:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x9
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xB5,0xB6,0xB7,
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 259:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Multilingual Latin 1 (OEM) */
 260:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 261:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
ARM GAS  /tmp/cclwbenu.s 			page 6


 262:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 263:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 264:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 265:Middlewares/Third_Party/FatFs/src/ff.c **** 
 266:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 (OEM) */
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x9
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF,0xB0,0xB1,0xB2,
 270:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic (OEM) */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x9
 276:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD3,
 278:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish (OEM) */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x9
 283:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 284:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,
 286:Middlewares/Third_Party/FatFs/src/ff.c **** 
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 858	/* Multilingual Latin 1 + Euro (OEM) */
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 290:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 292:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew (OEM) */
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 297:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 300:Middlewares/Third_Party/FatFs/src/ff.c **** 
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian (OEM) */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0xB0,0xB1,0xB2,
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 306:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,
 307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 874	/* Thai (OEM, Windows) */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 310:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 312:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 313:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 314:Middlewares/Third_Party/FatFs/src/ff.c **** 
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1250 /* Central Europe (Windows) */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 318:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
ARM GAS  /tmp/cclwbenu.s 			page 7


 319:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 320:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 321:Middlewares/Third_Party/FatFs/src/ff.c **** 
 322:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1251 /* Cyrillic (Windows) */
 323:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 324:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x8
 325:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA2,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 326:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 327:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1252 /* Latin 1 (Windows) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 331:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 333:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 334:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1253 /* Greek (Windows) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 339:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 340:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 341:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1254 /* Turkish (Windows) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 346:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 347:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 348:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 349:Middlewares/Third_Party/FatFs/src/ff.c **** 
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1255 /* Hebrew (Windows) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 353:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 354:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 355:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 356:Middlewares/Third_Party/FatFs/src/ff.c **** 
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1256 /* Arabic (Windows) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 360:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 361:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 362:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,
 363:Middlewares/Third_Party/FatFs/src/ff.c **** 
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1257 /* Baltic (Windows) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 367:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 368:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 369:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1258 /* Vietnam (OEM, Windows) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 374:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 375:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
ARM GAS  /tmp/cclwbenu.s 			page 8


 376:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 377:Middlewares/Third_Party/FatFs/src/ff.c **** 
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot use LFN feature without valid code page.
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 383:Middlewares/Third_Party/FatFs/src/ff.c **** 
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 386:Middlewares/Third_Party/FatFs/src/ff.c **** 
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 388:Middlewares/Third_Party/FatFs/src/ff.c **** 
 389:Middlewares/Third_Party/FatFs/src/ff.c **** 
 390:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 392:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 394:Middlewares/Third_Party/FatFs/src/ff.c **** 
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S		/* Code page is DBCS */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** 
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 402:Middlewares/Third_Party/FatFs/src/ff.c **** 
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 408:Middlewares/Third_Party/FatFs/src/ff.c **** 
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** 
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 413:Middlewares/Third_Party/FatFs/src/ff.c **** 
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** 
 416:Middlewares/Third_Party/FatFs/src/ff.c **** 
 417:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of name status byte in fn[] */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** 
 426:Middlewares/Third_Party/FatFs/src/ff.c **** 
 427:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT sub-type boundaries (Differ from specs but correct for real DOS/Windows) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define MIN_FAT16	4086U	/* Minimum number of clusters as FAT16 */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MIN_FAT32	65526U	/* Minimum number of clusters as FAT32 */
 430:Middlewares/Third_Party/FatFs/src/ff.c **** 
 431:Middlewares/Third_Party/FatFs/src/ff.c **** 
 432:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the members in the FAT structures as byte array instead of
ARM GAS  /tmp/cclwbenu.s 			page 9


 433:Middlewares/Third_Party/FatFs/src/ff.c **** / structure member because the structure is not binary compatible between
 434:Middlewares/Third_Party/FatFs/src/ff.c **** / different platforms */
 435:Middlewares/Third_Party/FatFs/src/ff.c **** 
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_jmpBoot			0		/* x86 jump instruction (3) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (2) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (1) */
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (2) */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FAT copies (1) */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Number of root directory entries for FAT12/16 (2) */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size [sector] (2) */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor (1) */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size [sector] (2) */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size [sector] (2) */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads (2) */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Number of special hidden sectors (4) */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size [sector] (4) */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number (2) */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (1) */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (4) */
 453:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label (8) */
 454:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type (1) */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT size [sector] (4) */
 456:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags		40		/* Extended flags (2) */
 457:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer			42		/* File system version (2) */
 458:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus		44		/* Root directory first cluster (4) */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo			48		/* Offset of FSINFO sector (2) */
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec		50		/* Offset of backup boot sector (2) */
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* Physical drive number (2) */
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* Extended boot signature (1) */
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* Volume serial number (4) */
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* Volume label (8) */
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* File system type (1) */
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FSI: Leading signature (4) */
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FSI: Structure signature (4) */
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FSI: Number of free clusters (4) */
 469:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FSI: Last allocated cluster (4) */
 470:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Partition table offset (2) */
 471:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (2) */
 473:Middlewares/Third_Party/FatFs/src/ff.c **** 
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11) */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (1) */
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (1) */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTimeTenth	13		/* Created time sub-second (1) */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (2) */
 479:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtDate			16		/* Created date (2) */
 480:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (2) */
 481:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (2) */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_WrtTime			22		/* Modified time (2) */
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_WrtDate			24		/* Modified date (2) */
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (2) */
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (4) */
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN entry order and LLE flag (1) */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN attribute (1) */
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN type (1) */
 489:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* Sum of corresponding SFN entry */
ARM GAS  /tmp/cclwbenu.s 			page 10


 490:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* Must be zero (0) */
 491:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_DIRE				32		/* Size of a directory entry */
 492:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark at DIR_Name[0] */
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 495:Middlewares/Third_Party/FatFs/src/ff.c **** 
 496:Middlewares/Third_Party/FatFs/src/ff.c **** 
 497:Middlewares/Third_Party/FatFs/src/ff.c **** 
 498:Middlewares/Third_Party/FatFs/src/ff.c **** 
 499:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------*/
 500:Middlewares/Third_Party/FatFs/src/ff.c **** /* Module private work area                                   */
 501:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------*/
 502:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Uninitialized variables with static duration are
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /  guaranteed zero/null at start-up. If not, either the linker
 504:Middlewares/Third_Party/FatFs/src/ff.c **** /  or start-up routine being used is out of ANSI-C standard.
 505:Middlewares/Third_Party/FatFs/src/ff.c **** */
 506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 9
 508:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 509:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 510:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 
 513:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH && _VOLUMES >= 2
 514:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 515:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 518:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 519:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 521:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0			/* Non LFN feature */
 522:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]
 523:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		(dobj).fn = sfn
 524:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 525:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 526:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 527:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN setting
 528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 529:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1			/* LFN feature with static working buffer */
 530:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = LfnBuf; }
 533:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 534:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 		/* LFN feature with dynamic working buffer on the stack */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]; WCHAR lbuf[_MAX_LFN + 1]
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = lbuf; }
 537:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 		/* LFN feature with dynamic working buffer on the heap */
 539:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]; WCHAR *lfn
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ lfn = ff_memalloc((_MAX_LFN + 1) * 2); if (!lfn) LEAVE_FF((dobj).fs, FR_N
 541:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()			ff_memfree(lfn)
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 543:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 546:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 11


 547:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 548:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for extended characters */
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 550:Middlewares/Third_Party/FatFs/src/ff.c **** 
 551:Middlewares/Third_Party/FatFs/src/ff.c **** 
 552:Middlewares/Third_Party/FatFs/src/ff.c **** 
 553:Middlewares/Third_Party/FatFs/src/ff.c **** 
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** 
 556:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 557:Middlewares/Third_Party/FatFs/src/ff.c **** 
 558:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 559:Middlewares/Third_Party/FatFs/src/ff.c **** 
 560:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 561:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (FATFS* fs, DWORD clst);
 562:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (FATFS* fs,	DWORD clst);
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 565:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (FATFS* fs,	DWORD clst,	DWORD val);
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 567:Middlewares/Third_Party/FatFs/src/ff.c **** 
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 569:Middlewares/Third_Party/FatFs/src/ff.c **** static void gen_numname (BYTE* dst, const BYTE* src, const WCHAR* lfn, UINT seq);
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_USE_LFN */
 571:Middlewares/Third_Party/FatFs/src/ff.c **** 
 572:Middlewares/Third_Party/FatFs/src/ff.c **** 
 573:Middlewares/Third_Party/FatFs/src/ff.c **** 
 574:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 575:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 577:Middlewares/Third_Party/FatFs/src/ff.c **** 
 578:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 579:Middlewares/Third_Party/FatFs/src/ff.c **** static
 580:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
  26              		.loc 1 580 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 581:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 583:Middlewares/Third_Party/FatFs/src/ff.c **** 
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #if _WORD_ACCESS == 1
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt >= sizeof (int)) {
 586:Middlewares/Third_Party/FatFs/src/ff.c **** 		*(int*)d = *(int*)s;
 587:Middlewares/Third_Party/FatFs/src/ff.c **** 		d += sizeof (int); s += sizeof (int);
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 		cnt -= sizeof (int);
 589:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt--)
  32              		.loc 1 591 0
  33 0000 04E0     		b	.L2
  34              	.LVL1:
  35              	.L3:
 592:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = *s++;
  36              		.loc 1 592 0
ARM GAS  /tmp/cclwbenu.s 			page 12


  37 0002 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  38 0004 0270     		strb	r2, [r0]
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = *s++;
  39              		.loc 1 591 0
  40 0006 1A46     		mov	r2, r3
  41              		.loc 1 592 0
  42 0008 0131     		adds	r1, r1, #1
  43              	.LVL2:
  44 000a 0130     		adds	r0, r0, #1
  45              	.LVL3:
  46              	.L2:
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = *s++;
  47              		.loc 1 591 0
  48 000c 531E     		subs	r3, r2, #1
  49              	.LVL4:
  50 000e 002A     		cmp	r2, #0
  51 0010 F7D1     		bne	.L3
 593:Middlewares/Third_Party/FatFs/src/ff.c **** }
  52              		.loc 1 593 0
  53 0012 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE63:
  57              		.section	.text.mem_set,"ax",%progbits
  58              		.align	2
  59              		.thumb
  60              		.thumb_func
  62              	mem_set:
  63              	.LFB64:
 594:Middlewares/Third_Party/FatFs/src/ff.c **** 
 595:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory */
 596:Middlewares/Third_Party/FatFs/src/ff.c **** static
 597:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
  64              		.loc 1 597 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LVL5:
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt--)
  70              		.loc 1 600 0
  71 0000 02E0     		b	.L5
  72              	.LVL6:
  73              	.L6:
 601:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
  74              		.loc 1 601 0
  75 0002 0170     		strb	r1, [r0]
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
  76              		.loc 1 600 0
  77 0004 1A46     		mov	r2, r3
  78              		.loc 1 601 0
  79 0006 0130     		adds	r0, r0, #1
  80              	.LVL7:
  81              	.L5:
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
  82              		.loc 1 600 0
ARM GAS  /tmp/cclwbenu.s 			page 13


  83 0008 531E     		subs	r3, r2, #1
  84              	.LVL8:
  85 000a 002A     		cmp	r2, #0
  86 000c F9D1     		bne	.L6
 602:Middlewares/Third_Party/FatFs/src/ff.c **** }
  87              		.loc 1 602 0
  88 000e 7047     		bx	lr
  89              		.cfi_endproc
  90              	.LFE64:
  92              		.section	.text.mem_cmp,"ax",%progbits
  93              		.align	2
  94              		.thumb
  95              		.thumb_func
  97              	mem_cmp:
  98              	.LFB65:
 603:Middlewares/Third_Party/FatFs/src/ff.c **** 
 604:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory to memory */
 605:Middlewares/Third_Party/FatFs/src/ff.c **** static
 606:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {
  99              		.loc 1 606 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL9:
 105 0000 70B4     		push	{r4, r5, r6}
 106              	.LCFI0:
 107              		.cfi_def_cfa_offset 12
 108              		.cfi_offset 4, -12
 109              		.cfi_offset 5, -8
 110              		.cfi_offset 6, -4
 111              	.LVL10:
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 608:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 112              		.loc 1 608 0
 113 0002 0023     		movs	r3, #0
 609:Middlewares/Third_Party/FatFs/src/ff.c **** 
 610:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt-- && (r = *d++ - *s++) == 0) ;
 114              		.loc 1 610 0
 115 0004 01E0     		b	.L9
 116              	.LVL11:
 117              	.L10:
 118 0006 2946     		mov	r1, r5
 119 0008 3046     		mov	r0, r6
 120              	.LVL12:
 121              	.L9:
 122              		.loc 1 610 0 is_stmt 0 discriminator 2
 123 000a 541E     		subs	r4, r2, #1
 124              	.LVL13:
 125 000c 32B1     		cbz	r2, .L8
 126              		.loc 1 610 0 discriminator 1
 127 000e 461C     		adds	r6, r0, #1
 128              	.LVL14:
 129 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 130              	.LVL15:
 131 0012 4D1C     		adds	r5, r1, #1
 132              	.LVL16:
ARM GAS  /tmp/cclwbenu.s 			page 14


 133 0014 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 134              	.LVL17:
 135 0016 2246     		mov	r2, r4
 136 0018 1B1A     		subs	r3, r3, r0
 137              	.LVL18:
 138 001a F4D0     		beq	.L10
 139              	.LVL19:
 140              	.L8:
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 612:Middlewares/Third_Party/FatFs/src/ff.c **** }
 141              		.loc 1 612 0 is_stmt 1
 142 001c 1846     		mov	r0, r3
 143 001e 70BC     		pop	{r4, r5, r6}
 144              	.LCFI1:
 145              		.cfi_restore 6
 146              		.cfi_restore 5
 147              		.cfi_restore 4
 148              		.cfi_def_cfa_offset 0
 149              	.LVL20:
 150 0020 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE65:
 154 0022 00BF     		.section	.text.chk_chr,"ax",%progbits
 155              		.align	2
 156              		.thumb
 157              		.thumb_func
 159              	chk_chr:
 160              	.LFB66:
 613:Middlewares/Third_Party/FatFs/src/ff.c **** 
 614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 615:Middlewares/Third_Party/FatFs/src/ff.c **** static
 616:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {
 161              		.loc 1 616 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL21:
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 167              		.loc 1 617 0
 168 0000 00E0     		b	.L13
 169              	.L15:
 170              		.loc 1 617 0 is_stmt 0 discriminator 3
 171 0002 0130     		adds	r0, r0, #1
 172              	.LVL22:
 173              	.L13:
 174              		.loc 1 617 0 discriminator 1
 175 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 176 0006 0BB1     		cbz	r3, .L14
 177              		.loc 1 617 0 discriminator 2
 178 0008 8B42     		cmp	r3, r1
 179 000a FAD1     		bne	.L15
 180              	.L14:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 619:Middlewares/Third_Party/FatFs/src/ff.c **** }
 181              		.loc 1 619 0 is_stmt 1
 182 000c 1846     		mov	r0, r3
ARM GAS  /tmp/cclwbenu.s 			page 15


 183              	.LVL23:
 184 000e 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE66:
 188              		.section	.text.chk_lock,"ax",%progbits
 189              		.align	2
 190              		.thumb
 191              		.thumb_func
 193              	chk_lock:
 194              	.LFB67:
 620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** 
 623:Middlewares/Third_Party/FatFs/src/ff.c **** 
 624:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 625:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 626:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 627:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 628:Middlewares/Third_Party/FatFs/src/ff.c **** static
 629:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 631:Middlewares/Third_Party/FatFs/src/ff.c **** )
 632:Middlewares/Third_Party/FatFs/src/ff.c **** {
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_req_grant(fs->sobj);
 634:Middlewares/Third_Party/FatFs/src/ff.c **** }
 635:Middlewares/Third_Party/FatFs/src/ff.c **** 
 636:Middlewares/Third_Party/FatFs/src/ff.c **** 
 637:Middlewares/Third_Party/FatFs/src/ff.c **** static
 638:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 641:Middlewares/Third_Party/FatFs/src/ff.c **** )
 642:Middlewares/Third_Party/FatFs/src/ff.c **** {
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs &&
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_NOT_ENABLED &&
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_DRIVE &&
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_OBJECT &&
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_TIMEOUT) {
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 649:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 650:Middlewares/Third_Party/FatFs/src/ff.c **** }
 651:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 652:Middlewares/Third_Party/FatFs/src/ff.c **** 
 653:Middlewares/Third_Party/FatFs/src/ff.c **** 
 654:Middlewares/Third_Party/FatFs/src/ff.c **** 
 655:Middlewares/Third_Party/FatFs/src/ff.c **** 
 656:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 657:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 658:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 659:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 660:Middlewares/Third_Party/FatFs/src/ff.c **** 
 661:Middlewares/Third_Party/FatFs/src/ff.c **** static
 662:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 665:Middlewares/Third_Party/FatFs/src/ff.c **** )
 666:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/cclwbenu.s 			page 16


 195              		.loc 1 666 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              	.LVL24:
 201 0000 30B4     		push	{r4, r5}
 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 5, -4
 206              	.LVL25:
 667:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 207              		.loc 1 670 0
 208 0002 0025     		movs	r5, #0
 209 0004 2B46     		mov	r3, r5
 210 0006 20E0     		b	.L17
 211              	.LVL26:
 212              	.L20:
 671:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 213              		.loc 1 671 0
 214 0008 03EB4302 		add	r2, r3, r3, lsl #1
 215 000c 9200     		lsls	r2, r2, #2
 216 000e 1E4C     		ldr	r4, .L31
 217 0010 A258     		ldr	r2, [r4, r2]
 218 0012 C2B1     		cbz	r2, .L25
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->fs &&	 	/* Check if the object matched with an open object */
 219              		.loc 1 672 0
 220 0014 D0F80042 		ldr	r4, [r0, #512]
 221 0018 A242     		cmp	r2, r4
 222 001a 15D1     		bne	.L18
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 223              		.loc 1 673 0 discriminator 1
 224 001c 03EB4302 		add	r2, r3, r3, lsl #1
 225 0020 9200     		lsls	r2, r2, #2
 226 0022 194C     		ldr	r4, .L31
 227 0024 2244     		add	r2, r2, r4
 228 0026 5468     		ldr	r4, [r2, #4]
 229 0028 D0F80822 		ldr	r2, [r0, #520]
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->fs &&	 	/* Check if the object matched with an open object */
 230              		.loc 1 672 0 discriminator 1
 231 002c 9442     		cmp	r4, r2
 232 002e 0BD1     		bne	.L18
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].idx == dp->index) break;
 233              		.loc 1 674 0
 234 0030 03EB4302 		add	r2, r3, r3, lsl #1
 235 0034 9200     		lsls	r2, r2, #2
 236 0036 144C     		ldr	r4, .L31
 237 0038 2244     		add	r2, r2, r4
 238 003a 1489     		ldrh	r4, [r2, #8]
 239 003c B0F80622 		ldrh	r2, [r0, #518]
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 240              		.loc 1 673 0
 241 0040 9442     		cmp	r4, r2
ARM GAS  /tmp/cclwbenu.s 			page 17


 242 0042 01D1     		bne	.L18
 243 0044 03E0     		b	.L19
 244              	.L25:
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 245              		.loc 1 676 0
 246 0046 0125     		movs	r5, #1
 247              	.LVL27:
 248              	.L18:
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 249              		.loc 1 670 0 discriminator 2
 250 0048 0133     		adds	r3, r3, #1
 251              	.LVL28:
 252              	.L17:
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 253              		.loc 1 670 0 is_stmt 0 discriminator 1
 254 004a 012B     		cmp	r3, #1
 255 004c DCD9     		bls	.L20
 256              	.L19:
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK)	/* The object is not opened */
 257              		.loc 1 679 0 is_stmt 1
 258 004e 022B     		cmp	r3, #2
 259 0050 08D1     		bne	.L21
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 260              		.loc 1 680 0
 261 0052 1DB9     		cbnz	r5, .L26
 262              		.loc 1 680 0 is_stmt 0 discriminator 2
 263 0054 0229     		cmp	r1, #2
 264 0056 03D1     		bne	.L27
 265              		.loc 1 680 0
 266 0058 0020     		movs	r0, #0
 267              	.LVL29:
 268 005a 12E0     		b	.L23
 269              	.LVL30:
 270              	.L26:
 271 005c 0020     		movs	r0, #0
 272              	.LVL31:
 273 005e 10E0     		b	.L23
 274              	.LVL32:
 275              	.L27:
 276 0060 1220     		movs	r0, #18
 277              	.LVL33:
 278 0062 0EE0     		b	.L23
 279              	.LVL34:
 280              	.L21:
 681:Middlewares/Third_Party/FatFs/src/ff.c **** 
 682:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 683:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 281              		.loc 1 683 0 is_stmt 1
 282 0064 51B9     		cbnz	r1, .L28
 283              		.loc 1 683 0 is_stmt 0 discriminator 2
 284 0066 03EB4303 		add	r3, r3, r3, lsl #1
 285              	.LVL35:
 286 006a 9B00     		lsls	r3, r3, #2
 287 006c 074A     		ldr	r2, .L31+4
ARM GAS  /tmp/cclwbenu.s 			page 18


 288 006e 1344     		add	r3, r3, r2
 289 0070 5B88     		ldrh	r3, [r3, #2]
 290 0072 B3F5807F 		cmp	r3, #256
 291 0076 03D1     		bne	.L29
 292              		.loc 1 683 0
 293 0078 1020     		movs	r0, #16
 294              	.LVL36:
 295 007a 02E0     		b	.L23
 296              	.LVL37:
 297              	.L28:
 298 007c 1020     		movs	r0, #16
 299              	.LVL38:
 300 007e 00E0     		b	.L23
 301              	.LVL39:
 302              	.L29:
 303 0080 0020     		movs	r0, #0
 304              	.LVL40:
 305              	.L23:
 684:Middlewares/Third_Party/FatFs/src/ff.c **** }
 306              		.loc 1 684 0 is_stmt 1
 307 0082 30BC     		pop	{r4, r5}
 308              	.LCFI3:
 309              		.cfi_restore 5
 310              		.cfi_restore 4
 311              		.cfi_def_cfa_offset 0
 312              	.LVL41:
 313 0084 7047     		bx	lr
 314              	.L32:
 315 0086 00BF     		.align	2
 316              	.L31:
 317 0088 00000000 		.word	.LANCHOR0
 318 008c 08000000 		.word	.LANCHOR0+8
 319              		.cfi_endproc
 320              	.LFE67:
 322              		.section	.text.enq_lock,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 327              	enq_lock:
 328              	.LFB68:
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** static
 688:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** {
 329              		.loc 1 689 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334              	.LVL42:
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 691:Middlewares/Third_Party/FatFs/src/ff.c **** 
 692:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 335              		.loc 1 692 0
 336 0000 0020     		movs	r0, #0
 337 0002 00E0     		b	.L34
ARM GAS  /tmp/cclwbenu.s 			page 19


 338              	.LVL43:
 339              	.L36:
 340              		.loc 1 692 0 is_stmt 0 discriminator 4
 341 0004 0130     		adds	r0, r0, #1
 342              	.LVL44:
 343              	.L34:
 344              		.loc 1 692 0 discriminator 1
 345 0006 0128     		cmp	r0, #1
 346 0008 06D8     		bhi	.L35
 347              		.loc 1 692 0 discriminator 3
 348 000a 00EB4003 		add	r3, r0, r0, lsl #1
 349 000e 9B00     		lsls	r3, r3, #2
 350 0010 034A     		ldr	r2, .L37
 351 0012 D358     		ldr	r3, [r2, r3]
 352 0014 002B     		cmp	r3, #0
 353 0016 F5D1     		bne	.L36
 354              	.L35:
 693:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 694:Middlewares/Third_Party/FatFs/src/ff.c **** }
 355              		.loc 1 694 0 is_stmt 1
 356 0018 0238     		subs	r0, r0, #2
 357              	.LVL45:
 358 001a 18BF     		it	ne
 359 001c 0120     		movne	r0, #1
 360              	.LVL46:
 361 001e 7047     		bx	lr
 362              	.L38:
 363              		.align	2
 364              	.L37:
 365 0020 00000000 		.word	.LANCHOR0
 366              		.cfi_endproc
 367              	.LFE68:
 369              		.section	.text.inc_lock,"ax",%progbits
 370              		.align	2
 371              		.thumb
 372              		.thumb_func
 374              	inc_lock:
 375              	.LFB69:
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** static
 698:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 701:Middlewares/Third_Party/FatFs/src/ff.c **** )
 702:Middlewares/Third_Party/FatFs/src/ff.c **** {
 376              		.loc 1 702 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381              	.LVL47:
 382 0000 70B4     		push	{r4, r5, r6}
 383              	.LCFI4:
 384              		.cfi_def_cfa_offset 12
 385              		.cfi_offset 4, -12
 386              		.cfi_offset 5, -8
ARM GAS  /tmp/cclwbenu.s 			page 20


 387              		.cfi_offset 6, -4
 388              	.LVL48:
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 704:Middlewares/Third_Party/FatFs/src/ff.c **** 
 705:Middlewares/Third_Party/FatFs/src/ff.c **** 
 706:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 389              		.loc 1 706 0
 390 0002 0023     		movs	r3, #0
 391 0004 1DE0     		b	.L40
 392              	.LVL49:
 393              	.L43:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 394              		.loc 1 707 0
 395 0006 03EB4302 		add	r2, r3, r3, lsl #1
 396 000a 9200     		lsls	r2, r2, #2
 397 000c 2F4C     		ldr	r4, .L56
 398 000e A458     		ldr	r4, [r4, r2]
 399 0010 D0F80022 		ldr	r2, [r0, #512]
 400 0014 9442     		cmp	r4, r2
 401 0016 13D1     		bne	.L41
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->sclust &&
 402              		.loc 1 708 0 discriminator 1
 403 0018 03EB4302 		add	r2, r3, r3, lsl #1
 404 001c 9200     		lsls	r2, r2, #2
 405 001e 2B4C     		ldr	r4, .L56
 406 0020 2244     		add	r2, r2, r4
 407 0022 5468     		ldr	r4, [r2, #4]
 408 0024 D0F80822 		ldr	r2, [r0, #520]
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 409              		.loc 1 707 0 discriminator 1
 410 0028 9442     		cmp	r4, r2
 411 002a 09D1     		bne	.L41
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].idx == dp->index) break;
 412              		.loc 1 709 0
 413 002c 03EB4302 		add	r2, r3, r3, lsl #1
 414 0030 9200     		lsls	r2, r2, #2
 415 0032 264C     		ldr	r4, .L56
 416 0034 2244     		add	r2, r2, r4
 417 0036 1489     		ldrh	r4, [r2, #8]
 418 0038 B0F80622 		ldrh	r2, [r0, #518]
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->sclust &&
 419              		.loc 1 708 0
 420 003c 9442     		cmp	r4, r2
 421 003e 02D0     		beq	.L42
 422              	.L41:
 706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 423              		.loc 1 706 0 discriminator 2
 424 0040 0133     		adds	r3, r3, #1
 425              	.LVL50:
 426              	.L40:
 706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 427              		.loc 1 706 0 is_stmt 0 discriminator 1
 428 0042 012B     		cmp	r3, #1
 429 0044 DFD9     		bls	.L43
 430              	.L42:
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 21


 712:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 431              		.loc 1 712 0 is_stmt 1
 432 0046 022B     		cmp	r3, #2
 433 0048 1ED1     		bne	.L45
 434 004a 01E0     		b	.L51
 435              	.L47:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 436              		.loc 1 713 0 discriminator 4
 437 004c 0133     		adds	r3, r3, #1
 438              	.LVL51:
 439 004e 00E0     		b	.L44
 440              	.L51:
 441 0050 0023     		movs	r3, #0
 442              	.LVL52:
 443              	.L44:
 444              		.loc 1 713 0 is_stmt 0 discriminator 1
 445 0052 012B     		cmp	r3, #1
 446 0054 06D8     		bhi	.L46
 447              		.loc 1 713 0 discriminator 3
 448 0056 03EB4302 		add	r2, r3, r3, lsl #1
 449 005a 9200     		lsls	r2, r2, #2
 450 005c 1B4C     		ldr	r4, .L56
 451 005e A258     		ldr	r2, [r4, r2]
 452 0060 002A     		cmp	r2, #0
 453 0062 F3D1     		bne	.L47
 454              	.L46:
 714:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 455              		.loc 1 714 0 is_stmt 1
 456 0064 022B     		cmp	r3, #2
 457 0066 2BD0     		beq	.L52
 715:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 458              		.loc 1 715 0
 459 0068 D0F80062 		ldr	r6, [r0, #512]
 460 006c 174D     		ldr	r5, .L56
 461 006e 5A00     		lsls	r2, r3, #1
 462 0070 1A44     		add	r2, r2, r3
 463 0072 9200     		lsls	r2, r2, #2
 464 0074 AC18     		adds	r4, r5, r2
 465 0076 AE50     		str	r6, [r5, r2]
 716:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->sclust;
 466              		.loc 1 716 0
 467 0078 D0F80822 		ldr	r2, [r0, #520]
 468 007c 6260     		str	r2, [r4, #4]
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].idx = dp->index;
 469              		.loc 1 717 0
 470 007e B0F80602 		ldrh	r0, [r0, #518]
 471              	.LVL53:
 472 0082 2081     		strh	r0, [r4, #8]	@ movhi
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 473              		.loc 1 718 0
 474 0084 0020     		movs	r0, #0
 475 0086 6081     		strh	r0, [r4, #10]	@ movhi
 476              	.L45:
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 477              		.loc 1 721 0
ARM GAS  /tmp/cclwbenu.s 			page 22


 478 0088 31B1     		cbz	r1, .L49
 479              		.loc 1 721 0 is_stmt 0 discriminator 1
 480 008a 03EB4300 		add	r0, r3, r3, lsl #1
 481 008e 8000     		lsls	r0, r0, #2
 482 0090 0F4A     		ldr	r2, .L56+4
 483 0092 0244     		add	r2, r2, r0
 484 0094 5288     		ldrh	r2, [r2, #2]
 485 0096 AAB9     		cbnz	r2, .L53
 486              	.L49:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 487              		.loc 1 723 0 is_stmt 1
 488 0098 41B9     		cbnz	r1, .L54
 489              		.loc 1 723 0 is_stmt 0 discriminator 1
 490 009a 03EB4301 		add	r1, r3, r3, lsl #1
 491              	.LVL54:
 492 009e 8900     		lsls	r1, r1, #2
 493 00a0 0B4A     		ldr	r2, .L56+4
 494 00a2 0A44     		add	r2, r2, r1
 495 00a4 5188     		ldrh	r1, [r2, #2]
 496 00a6 0131     		adds	r1, r1, #1
 497 00a8 89B2     		uxth	r1, r1
 498 00aa 01E0     		b	.L50
 499              	.LVL55:
 500              	.L54:
 501              		.loc 1 723 0
 502 00ac 4FF48071 		mov	r1, #256
 503              	.LVL56:
 504              	.L50:
 505              		.loc 1 723 0 discriminator 4
 506 00b0 03EB4300 		add	r0, r3, r3, lsl #1
 507 00b4 8000     		lsls	r0, r0, #2
 508 00b6 064A     		ldr	r2, .L56+4
 509 00b8 0244     		add	r2, r2, r0
 510 00ba 5180     		strh	r1, [r2, #2]	@ movhi
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 
 725:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 511              		.loc 1 725 0 is_stmt 1 discriminator 4
 512 00bc 581C     		adds	r0, r3, #1
 513 00be 02E0     		b	.L48
 514              	.LVL57:
 515              	.L52:
 714:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 516              		.loc 1 714 0
 517 00c0 0020     		movs	r0, #0
 518              	.LVL58:
 519 00c2 00E0     		b	.L48
 520              	.L53:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 
 521              		.loc 1 721 0
 522 00c4 0020     		movs	r0, #0
 523              	.LVL59:
 524              	.L48:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** }
 525              		.loc 1 726 0
 526 00c6 70BC     		pop	{r4, r5, r6}
 527              	.LCFI5:
ARM GAS  /tmp/cclwbenu.s 			page 23


 528              		.cfi_restore 6
 529              		.cfi_restore 5
 530              		.cfi_restore 4
 531              		.cfi_def_cfa_offset 0
 532 00c8 7047     		bx	lr
 533              	.L57:
 534 00ca 00BF     		.align	2
 535              	.L56:
 536 00cc 00000000 		.word	.LANCHOR0
 537 00d0 08000000 		.word	.LANCHOR0+8
 538              		.cfi_endproc
 539              	.LFE69:
 541              		.section	.text.dec_lock,"ax",%progbits
 542              		.align	2
 543              		.thumb
 544              		.thumb_func
 546              	dec_lock:
 547              	.LFB70:
 727:Middlewares/Third_Party/FatFs/src/ff.c **** 
 728:Middlewares/Third_Party/FatFs/src/ff.c **** 
 729:Middlewares/Third_Party/FatFs/src/ff.c **** static
 730:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 732:Middlewares/Third_Party/FatFs/src/ff.c **** )
 733:Middlewares/Third_Party/FatFs/src/ff.c **** {
 548              		.loc 1 733 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553              	.LVL60:
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** 
 738:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 554              		.loc 1 738 0
 555 0000 0138     		subs	r0, r0, #1
 556              	.LVL61:
 557 0002 0128     		cmp	r0, #1
 558 0004 17D8     		bhi	.L62
 739:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 559              		.loc 1 739 0
 560 0006 00EB4002 		add	r2, r0, r0, lsl #1
 561 000a 9200     		lsls	r2, r2, #2
 562 000c 0C4B     		ldr	r3, .L65
 563 000e 1344     		add	r3, r3, r2
 564 0010 5B88     		ldrh	r3, [r3, #2]
 565              	.LVL62:
 740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 566              		.loc 1 740 0
 567 0012 B3F5807F 		cmp	r3, #256
 568 0016 00D1     		bne	.L60
 569 0018 0023     		movs	r3, #0
 570              	.LVL63:
 571              	.L60:
 741:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n) n--;					/* Decrement read mode open count */
ARM GAS  /tmp/cclwbenu.s 			page 24


 572              		.loc 1 741 0
 573 001a 0BB1     		cbz	r3, .L61
 574              		.loc 1 741 0 is_stmt 0 discriminator 1
 575 001c 013B     		subs	r3, r3, #1
 576              	.LVL64:
 577 001e 9BB2     		uxth	r3, r3
 578              	.LVL65:
 579              	.L61:
 742:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 580              		.loc 1 742 0 is_stmt 1
 581 0020 00EB4001 		add	r1, r0, r0, lsl #1
 582 0024 8900     		lsls	r1, r1, #2
 583 0026 064A     		ldr	r2, .L65
 584 0028 0A44     		add	r2, r2, r1
 585 002a 5380     		strh	r3, [r2, #2]	@ movhi
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!n) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 586              		.loc 1 743 0
 587 002c 2BB9     		cbnz	r3, .L64
 588              		.loc 1 743 0 is_stmt 0 discriminator 1
 589 002e 0020     		movs	r0, #0
 590              	.LVL66:
 591 0030 044A     		ldr	r2, .L65+4
 592 0032 5050     		str	r0, [r2, r1]
 593 0034 7047     		bx	lr
 594              	.LVL67:
 595              	.L62:
 744:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 745:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 596              		.loc 1 746 0 is_stmt 1
 597 0036 0220     		movs	r0, #2
 598              	.LVL68:
 599 0038 7047     		bx	lr
 600              	.LVL69:
 601              	.L64:
 744:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 602              		.loc 1 744 0
 603 003a 0020     		movs	r0, #0
 604              	.LVL70:
 747:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 605              		.loc 1 749 0
 606 003c 7047     		bx	lr
 607              	.L66:
 608 003e 00BF     		.align	2
 609              	.L65:
 610 0040 08000000 		.word	.LANCHOR0+8
 611 0044 00000000 		.word	.LANCHOR0
 612              		.cfi_endproc
 613              	.LFE70:
 615              		.section	.text.clear_lock,"ax",%progbits
 616              		.align	2
 617              		.thumb
 618              		.thumb_func
 620              	clear_lock:
 621              	.LFB71:
ARM GAS  /tmp/cclwbenu.s 			page 25


 750:Middlewares/Third_Party/FatFs/src/ff.c **** 
 751:Middlewares/Third_Party/FatFs/src/ff.c **** 
 752:Middlewares/Third_Party/FatFs/src/ff.c **** static
 753:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 755:Middlewares/Third_Party/FatFs/src/ff.c **** )
 756:Middlewares/Third_Party/FatFs/src/ff.c **** {
 622              		.loc 1 756 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627              	.LVL71:
 628 0000 10B4     		push	{r4}
 629              	.LCFI6:
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 4, -4
 632              	.LVL72:
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 633              		.loc 1 759 0
 634 0002 0023     		movs	r3, #0
 635 0004 0CE0     		b	.L68
 636              	.LVL73:
 637              	.L70:
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 638              		.loc 1 760 0
 639 0006 03EB4302 		add	r2, r3, r3, lsl #1
 640 000a 9200     		lsls	r2, r2, #2
 641 000c 0749     		ldr	r1, .L72
 642 000e 8A58     		ldr	r2, [r1, r2]
 643 0010 8242     		cmp	r2, r0
 644 0012 04D1     		bne	.L69
 645              		.loc 1 760 0 is_stmt 0 discriminator 1
 646 0014 03EB4302 		add	r2, r3, r3, lsl #1
 647 0018 9200     		lsls	r2, r2, #2
 648 001a 0024     		movs	r4, #0
 649 001c 8C50     		str	r4, [r1, r2]
 650              	.L69:
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 651              		.loc 1 759 0 is_stmt 1 discriminator 2
 652 001e 0133     		adds	r3, r3, #1
 653              	.LVL74:
 654              	.L68:
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 655              		.loc 1 759 0 is_stmt 0 discriminator 1
 656 0020 012B     		cmp	r3, #1
 657 0022 F0D9     		bls	.L70
 761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 762:Middlewares/Third_Party/FatFs/src/ff.c **** }
 658              		.loc 1 762 0 is_stmt 1
 659 0024 5DF8044B 		ldr	r4, [sp], #4
 660              	.LCFI7:
 661              		.cfi_restore 4
 662              		.cfi_def_cfa_offset 0
 663 0028 7047     		bx	lr
ARM GAS  /tmp/cclwbenu.s 			page 26


 664              	.L73:
 665 002a 00BF     		.align	2
 666              	.L72:
 667 002c 00000000 		.word	.LANCHOR0
 668              		.cfi_endproc
 669              	.LFE71:
 671              		.section	.text.clmt_clust,"ax",%progbits
 672              		.align	2
 673              		.thumb
 674              		.thumb_func
 676              	clmt_clust:
 677              	.LFB80:
 763:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** 
 766:Middlewares/Third_Party/FatFs/src/ff.c **** 
 767:Middlewares/Third_Party/FatFs/src/ff.c **** 
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 770:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 771:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 772:Middlewares/Third_Party/FatFs/src/ff.c **** static
 773:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (
 774:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 775:Middlewares/Third_Party/FatFs/src/ff.c **** )
 776:Middlewares/Third_Party/FatFs/src/ff.c **** {
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win.d8, wsect, 1) != RES_OK) {
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win.d8, wsect, 1);
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 794:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 797:Middlewares/Third_Party/FatFs/src/ff.c **** }
 798:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 
 801:Middlewares/Third_Party/FatFs/src/ff.c **** static
 802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 804:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector	/* Sector number to make appearance in the fs->win[].d8 */
 805:Middlewares/Third_Party/FatFs/src/ff.c **** )
 806:Middlewares/Third_Party/FatFs/src/ff.c **** {
 807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
ARM GAS  /tmp/cclwbenu.s 			page 27


 808:Middlewares/Third_Party/FatFs/src/ff.c **** 
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 812:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 813:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win.d8, sector, 1) != RES_OK) {
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 823:Middlewares/Third_Party/FatFs/src/ff.c **** }
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 
 828:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 829:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 830:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 831:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 832:Middlewares/Third_Party/FatFs/src/ff.c **** static
 833:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK: successful, FR_DISK_ERR: failed */
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 835:Middlewares/Third_Party/FatFs/src/ff.c **** )
 836:Middlewares/Third_Party/FatFs/src/ff.c **** {
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** 
 840:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 842:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSINFO sector if needed */
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win.d8, 0, SS(fs));
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_LeadSig, 0x41615252);
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_StrucSig, 0x61417272);
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Free_Count, fs->free_clust);
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Nxt_Free, fs->last_clust);
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSINFO sector */
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win.d8, fs->winsect, 1);
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 862:Middlewares/Third_Party/FatFs/src/ff.c **** }
 863:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 28


 865:Middlewares/Third_Party/FatFs/src/ff.c **** 
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 
 868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 869:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 870:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 871:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 872:Middlewares/Third_Party/FatFs/src/ff.c **** 
 873:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
 874:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 876:Middlewares/Third_Party/FatFs/src/ff.c **** )
 877:Middlewares/Third_Party/FatFs/src/ff.c **** {
 878:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 881:Middlewares/Third_Party/FatFs/src/ff.c **** }
 882:Middlewares/Third_Party/FatFs/src/ff.c **** 
 883:Middlewares/Third_Party/FatFs/src/ff.c **** 
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 
 885:Middlewares/Third_Party/FatFs/src/ff.c **** 
 886:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 887:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 888:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 889:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x0FFFFFFF:Cluster status */
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* FAT index number (cluster number) to get the value */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** )
 895:Middlewares/Third_Party/FatFs/src/ff.c **** {
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 
 907:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 908:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 911:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win.d8[bc++ % SS(fs)];
 912:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win.d8[bc % SS(fs)] << 8;
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 915:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_WORD(p);
 921:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
ARM GAS  /tmp/cclwbenu.s 			page 29


 922:Middlewares/Third_Party/FatFs/src/ff.c **** 
 923:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_DWORD(p) & 0x0FFFFFFF;
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
 935:Middlewares/Third_Party/FatFs/src/ff.c **** }
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** 
 939:Middlewares/Third_Party/FatFs/src/ff.c **** 
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
 942:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 943:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 944:Middlewares/Third_Party/FatFs/src/ff.c **** 
 945:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 946:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* FAT index number (cluster number) to be changed */
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val	/* New value to be set to the entry */
 950:Middlewares/Third_Party/FatFs/src/ff.c **** )
 951:Middlewares/Third_Party/FatFs/src/ff.c **** {
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc++ % SS(fs)];
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc % SS(fs)];
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 974:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 978:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
ARM GAS  /tmp/cclwbenu.s 			page 30


 979:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 980:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(p, (WORD)val);
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 982:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 986:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 987:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 			val |= LD_DWORD(p) & 0xF0000000;
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(p, val);
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 991:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 		default :
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INT_ERR;
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 996:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 997:Middlewares/Third_Party/FatFs/src/ff.c **** 
 998:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 999:Middlewares/Third_Party/FatFs/src/ff.c **** }
1000:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1001:Middlewares/Third_Party/FatFs/src/ff.c **** 
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 
1004:Middlewares/Third_Party/FatFs/src/ff.c **** 
1005:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1006:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1007:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1008:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1009:Middlewares/Third_Party/FatFs/src/ff.c **** static
1010:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to remove a chain from */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** )
1014:Middlewares/Third_Party/FatFs/src/ff.c **** {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1017:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst, rt[2];
1019:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clust++;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
ARM GAS  /tmp/cclwbenu.s 			page 31


1036:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1037:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				ecl = nxt;
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* End of contiguous clusters */ 
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 				rt[0] = clust2sect(fs, scl);					/* Start sector */
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Erase the block */
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = ecl = nxt;
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = nxt;	/* Next cluster */
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1052:Middlewares/Third_Party/FatFs/src/ff.c **** }
1053:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 
1058:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1059:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch or Create a cluster chain                      */
1060:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1061:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1062:Middlewares/Third_Party/FatFs/src/ff.c **** static
1063:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch. 0 means create a new chain. */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** )
1067:Middlewares/Third_Party/FatFs/src/ff.c **** {
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {		/* Create a new chain */
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clust;			/* Get suggested start point */
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
1075:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1076:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {					/* Stretch the current chain */
1077:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(fs, clst);			/* Check the cluster status */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;			/* Invalid value */
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1081:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	ncl = scl;				/* Start cluster */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl++;							/* Next cluster */
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Check wrap around */
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = 2;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(fs, ncl);			/* Get the cluster status */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
ARM GAS  /tmp/cclwbenu.s 			page 32


1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == scl) return 0;		/* No free cluster */
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && clst != 0) {
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clust = ncl;			/* Update FSINFO */
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust != 0xFFFFFFFF) {
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust--;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error code */
1113:Middlewares/Third_Party/FatFs/src/ff.c **** }
1114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** 
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 
1117:Middlewares/Third_Party/FatFs/src/ff.c **** 
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 
1119:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1120:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1121:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 
1123:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1124:Middlewares/Third_Party/FatFs/src/ff.c **** static
1125:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* File offset to be converted to cluster# */
1128:Middlewares/Third_Party/FatFs/src/ff.c **** )
1129:Middlewares/Third_Party/FatFs/src/ff.c **** {
 678              		.loc 1 1129 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              		@ link register save eliminated.
 683              	.LVL75:
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1131:Middlewares/Third_Party/FatFs/src/ff.c **** 
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 684              		.loc 1 1133 0
 685 0000 D0F82422 		ldr	r2, [r0, #548]
 686 0004 0432     		adds	r2, r2, #4
 687              	.LVL76:
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
 688              		.loc 1 1134 0
 689 0006 490A     		lsrs	r1, r1, #9
 690              	.LVL77:
 691 0008 D0F80032 		ldr	r3, [r0, #512]
 692 000c 93F80202 		ldrb	r0, [r3, #514]	@ zero_extendqisi2
ARM GAS  /tmp/cclwbenu.s 			page 33


 693              	.LVL78:
 694 0010 B1FBF0F1 		udiv	r1, r1, r0
 695              	.LVL79:
 696              	.L77:
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1136:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 697              		.loc 1 1136 0
 698 0014 1368     		ldr	r3, [r2]
 699              	.LVL80:
1137:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ncl) return 0;		/* End of table? (error) */
 700              		.loc 1 1137 0
 701 0016 3BB1     		cbz	r3, .L78
1138:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 702              		.loc 1 1138 0
 703 0018 9942     		cmp	r1, r3
 704 001a 02D3     		bcc	.L76
1139:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 705              		.loc 1 1139 0
 706 001c C91A     		subs	r1, r1, r3
 707              	.LVL81:
 708 001e 0832     		adds	r2, r2, #8
 709              	.LVL82:
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 710              		.loc 1 1140 0
 711 0020 F8E7     		b	.L77
 712              	.LVL83:
 713              	.L76:
1141:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 714              		.loc 1 1141 0
 715 0022 5068     		ldr	r0, [r2, #4]
 716 0024 0844     		add	r0, r0, r1
 717 0026 7047     		bx	lr
 718              	.L78:
1137:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 719              		.loc 1 1137 0
 720 0028 0020     		movs	r0, #0
1142:Middlewares/Third_Party/FatFs/src/ff.c **** }
 721              		.loc 1 1142 0
 722 002a 7047     		bx	lr
 723              		.cfi_endproc
 724              	.LFE80:
 726              		.section	.text.ld_clust,"ax",%progbits
 727              		.align	2
 728              		.thumb
 729              		.thumb_func
 731              	ld_clust:
 732              	.LFB84:
1143:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** 
1146:Middlewares/Third_Party/FatFs/src/ff.c **** 
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 
1148:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1149:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1151:Middlewares/Third_Party/FatFs/src/ff.c **** 
1152:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  /tmp/cclwbenu.s 			page 34


1153:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT idx		/* Index of directory table */
1156:Middlewares/Third_Party/FatFs/src/ff.c **** )
1157:Middlewares/Third_Party/FatFs/src/ff.c **** {
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ic;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->index = (WORD)idx;	/* Current index */
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->sclust;		/* Table start cluster (0:root) */
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INT_ERR;
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = dp->fs->dirbase;
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Dynamic table (root-directory in FAT32 or sub-directory) */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 		ic = SS(dp->fs) / SZ_DIRE * dp->fs->csize;	/* Entries per cluster */
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 			idx -= ic;
1182:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1183:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(dp->fs, clst);
1184:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;	/* Current cluster# */
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!sect) return FR_INT_ERR;
1187:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (idx % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Ptr to the entry in the se
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1191:Middlewares/Third_Party/FatFs/src/ff.c **** }
1192:Middlewares/Third_Party/FatFs/src/ff.c **** 
1193:Middlewares/Third_Party/FatFs/src/ff.c **** 
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 
1196:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1197:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1198:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** static
1201:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1204:Middlewares/Third_Party/FatFs/src/ff.c **** )
1205:Middlewares/Third_Party/FatFs/src/ff.c **** {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst;
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1208:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT c;
ARM GAS  /tmp/cclwbenu.s 			page 35


1210:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = dp->index + 1;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i % (SS(dp->fs) / SZ_DIRE))) {	/* Sector changed? */
1218:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;					/* Next sector */
1219:Middlewares/Third_Party/FatFs/src/ff.c **** 
1220:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
1222:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_NO_FILE;
1223:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (((i / (SS(dp->fs) / SZ_DIRE)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
1226:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
1230:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
1238:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
1241:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(dp->fs)) return FR_DISK_ERR;
1243:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1245:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect -= c;						/* Rewind window offset */
1246:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT (this is to suppress warni
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_NO_FILE;							/* Report EOT */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1250:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1251:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;				/* Initialize data for new cluster */
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(dp->fs, clst);
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->index = (WORD)i;	/* Current index */
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (i % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Current entry in the window 
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 
1260:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1261:Middlewares/Third_Party/FatFs/src/ff.c **** }
1262:Middlewares/Third_Party/FatFs/src/ff.c **** 
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/cclwbenu.s 			page 36


1267:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve directory entry                          */
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1269:Middlewares/Third_Party/FatFs/src/ff.c **** 
1270:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1271:Middlewares/Third_Party/FatFs/src/ff.c **** static
1272:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Pointer to the directory object */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent	/* Number of contiguous entries to allocate (1-21) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 
1280:Middlewares/Third_Party/FatFs/src/ff.c **** 
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1282:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1283:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1285:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(dp->fs, dp->sect);
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[0] == DDEM || dp->dir[0] == 0) {	/* Is it a free entry? */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1297:Middlewares/Third_Party/FatFs/src/ff.c **** }
1298:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 
1303:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1304:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Load/Store start cluster number                  */
1305:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 
1307:Middlewares/Third_Party/FatFs/src/ff.c **** static
1308:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (
1309:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir	/* Pointer to the directory entry */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** )
1312:Middlewares/Third_Party/FatFs/src/ff.c **** {
 733              		.loc 1 1312 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738              	.LVL84:
1313:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = LD_WORD(dir + DIR_FstClusLO);
 739              		.loc 1 1315 0
 740 0000 CA7E     		ldrb	r2, [r1, #27]	@ zero_extendqisi2
ARM GAS  /tmp/cclwbenu.s 			page 37


 741 0002 8B7E     		ldrb	r3, [r1, #26]	@ zero_extendqisi2
 742 0004 43EA0223 		orr	r3, r3, r2, lsl #8
 743              	.LVL85:
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32)
 744              		.loc 1 1316 0
 745 0008 90F80022 		ldrb	r2, [r0, #512]	@ zero_extendqisi2
 746 000c 032A     		cmp	r2, #3
 747 000e 05D1     		bne	.L80
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)LD_WORD(dir + DIR_FstClusHI) << 16;
 748              		.loc 1 1317 0
 749 0010 487D     		ldrb	r0, [r1, #21]	@ zero_extendqisi2
 750              	.LVL86:
 751 0012 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 752 0014 42EA0022 		orr	r2, r2, r0, lsl #8
 753 0018 43EA0243 		orr	r3, r3, r2, lsl #16
 754              	.LVL87:
 755              	.L80:
1318:Middlewares/Third_Party/FatFs/src/ff.c **** 
1319:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1320:Middlewares/Third_Party/FatFs/src/ff.c **** }
 756              		.loc 1 1320 0
 757 001c 1846     		mov	r0, r3
 758 001e 7047     		bx	lr
 759              		.cfi_endproc
 760              	.LFE84:
 762              		.section	.text.st_clust,"ax",%progbits
 763              		.align	2
 764              		.thumb
 765              		.thumb_func
 767              	st_clust:
 768              	.LFB85:
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1324:Middlewares/Third_Party/FatFs/src/ff.c **** static
1325:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1326:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the directory entry */
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** )
1329:Middlewares/Third_Party/FatFs/src/ff.c **** {
 769              		.loc 1 1329 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 774              	.LVL88:
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusLO, cl);
 775              		.loc 1 1330 0
 776 0000 8176     		strb	r1, [r0, #26]
 777 0002 C1F30723 		ubfx	r3, r1, #8, #8
 778 0006 C376     		strb	r3, [r0, #27]
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
 779              		.loc 1 1331 0
 780 0008 090C     		lsrs	r1, r1, #16
 781              	.LVL89:
 782 000a 0175     		strb	r1, [r0, #20]
 783 000c 090A     		lsrs	r1, r1, #8
ARM GAS  /tmp/cclwbenu.s 			page 38


 784 000e 4175     		strb	r1, [r0, #21]
 785 0010 7047     		bx	lr
 786              		.cfi_endproc
 787              	.LFE85:
 789 0012 00BF     		.section	.text.get_fileinfo,"ax",%progbits
 790              		.align	2
 791              		.thumb
 792              		.thumb_func
 794              	get_fileinfo:
 795              	.LFB90:
1332:Middlewares/Third_Party/FatFs/src/ff.c **** }
1333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 
1338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1339:Middlewares/Third_Party/FatFs/src/ff.c **** /* LFN handling - Test/Pick/Fit an LFN segment from/to directory entry   */
1340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1341:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1342:Middlewares/Third_Party/FatFs/src/ff.c **** static
1343:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** static
1347:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (			/* 1:Matched, 0:Not matched */
1348:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN to be compared */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the directory entry containing a part of LFN */
1350:Middlewares/Third_Party/FatFs/src/ff.c **** )
1351:Middlewares/Third_Party/FatFs/src/ff.c **** {
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1354:Middlewares/Third_Party/FatFs/src/ff.c **** 
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Get offset in the LFN buffer */
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = 0; wc = 1;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = LD_WORD(dir + LfnOfs[s]);	/* Pick an LFN character from the entry */
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = ff_wtoupper(uc);		/* Convert it to upper case */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;				/* Not matched */
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;	/* Check filler */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i])	/* Last segment matched but different length */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;						/* The part of LFN matched */
1373:Middlewares/Third_Party/FatFs/src/ff.c **** }
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 
1377:Middlewares/Third_Party/FatFs/src/ff.c **** static
1378:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
ARM GAS  /tmp/cclwbenu.s 			page 39


1379:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the Unicode-LFN buffer */
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the directory entry */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** )
1382:Middlewares/Third_Party/FatFs/src/ff.c **** {
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = 0; wc = 1;
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = LD_WORD(dir + LfnOfs[s]);		/* Pick an LFN character from the entry */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1398:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);						/* Read all character in the entry */
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;
1406:Middlewares/Third_Party/FatFs/src/ff.c **** }
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 
1409:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1410:Middlewares/Third_Party/FatFs/src/ff.c **** static
1411:Middlewares/Third_Party/FatFs/src/ff.c **** void fit_lfn (
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN buffer */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,				/* Pointer to the directory entry */
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,				/* LFN order (1-20) */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum				/* SFN sum */
1416:Middlewares/Third_Party/FatFs/src/ff.c **** )
1417:Middlewares/Third_Party/FatFs/src/ff.c **** {
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set check sum */
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + LDIR_FstClusLO, 0);
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1429:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1434:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLEF;	/* Bottom LFN part is the start of LFN sequence */
1435:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
ARM GAS  /tmp/cclwbenu.s 			page 40


1436:Middlewares/Third_Party/FatFs/src/ff.c **** }
1437:Middlewares/Third_Party/FatFs/src/ff.c **** 
1438:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1439:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1440:Middlewares/Third_Party/FatFs/src/ff.c **** 
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 
1443:Middlewares/Third_Party/FatFs/src/ff.c **** 
1444:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1445:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create numbered name                                                  */
1446:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1447:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1448:Middlewares/Third_Party/FatFs/src/ff.c **** static
1449:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1454:Middlewares/Third_Party/FatFs/src/ff.c **** )
1455:Middlewares/Third_Party/FatFs/src/ff.c **** {
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1458:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1460:Middlewares/Third_Party/FatFs/src/ff.c **** 
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
1465:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1466:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1469:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1470:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1473:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (seq % 16) + '0';
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/cclwbenu.s 			page 41


1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
1497:Middlewares/Third_Party/FatFs/src/ff.c **** }
1498:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 
1503:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1504:Middlewares/Third_Party/FatFs/src/ff.c **** /* Calculate sum of an SFN                                               */
1505:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1506:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1507:Middlewares/Third_Party/FatFs/src/ff.c **** static
1508:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1510:Middlewares/Third_Party/FatFs/src/ff.c **** )
1511:Middlewares/Third_Party/FatFs/src/ff.c **** {
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1514:Middlewares/Third_Party/FatFs/src/ff.c **** 
1515:Middlewares/Third_Party/FatFs/src/ff.c **** 	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
1516:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1517:Middlewares/Third_Party/FatFs/src/ff.c **** }
1518:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1519:Middlewares/Third_Party/FatFs/src/ff.c **** 
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 
1522:Middlewares/Third_Party/FatFs/src/ff.c **** 
1523:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1524:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
1525:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1526:Middlewares/Third_Party/FatFs/src/ff.c **** 
1527:Middlewares/Third_Party/FatFs/src/ff.c **** static
1528:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object linked to the file name */
1530:Middlewares/Third_Party/FatFs/src/ff.c **** )
1531:Middlewares/Third_Party/FatFs/src/ff.c **** {
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, *dir;
1534:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
1536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 
1541:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1547:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
ARM GAS  /tmp/cclwbenu.s 			page 42


1550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->lfn) {
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dir[LDIR_Chksum];
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= ~LLEF; ord = c;	/* LFN start order */
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lfn_idx = dp->index;	/* Start index of LFN */
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
1564:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1571:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dir[DIR_Attr] & AM_VOL) && !mem_cmp(dir, dp->fn, 11)) /* Is it a valid entry? */
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1579:Middlewares/Third_Party/FatFs/src/ff.c **** }
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** 
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c, *dir;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
1598:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = FR_NO_FILE;
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
1605:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
ARM GAS  /tmp/cclwbenu.s 			page 43


1607:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1609:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || (!_FS_RPATH && c == '.') || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF;
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c & LLEF) {			/* Is it start of LFN sequence? */
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 					sum = dir[LDIR_Chksum];
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 					c &= ~LLEF; ord = c;
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = dp->index;
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* Check LFN validity and capture it */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
1622:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1626:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != DDEM && (_FS_RPATH || c != '.') && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol)
1628:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1629:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);				/* Next entry */
1631:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1632:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;
1635:Middlewares/Third_Party/FatFs/src/ff.c **** 
1636:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1637:Middlewares/Third_Party/FatFs/src/ff.c **** }
1638:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 
1643:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1644:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
1645:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1646:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1647:Middlewares/Third_Party/FatFs/src/ff.c **** static
1648:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:Successful, FR_DENIED:No free entry or too many SFN collision, FR_D
1649:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
1650:Middlewares/Third_Party/FatFs/src/ff.c **** )
1651:Middlewares/Third_Party/FatFs/src/ff.c **** {
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1653:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nent;
1655:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], *fn, sum;
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR *lfn;
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	fn = dp->fn; lfn = dp->lfn;
1660:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, fn, 12);
1661:Middlewares/Third_Party/FatFs/src/ff.c **** 
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_RPATH && (sn[NSFLAG] & NS_DOT))		/* Cannot create dot entry */
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_NAME;
ARM GAS  /tmp/cclwbenu.s 			page 44


1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
1666:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = 0; dp->lfn = 0;			/* Find only SFN */
1667:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
1668:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
1669:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
1670:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
1673:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
1674:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = sn[NSFLAG]; dp->lfn = lfn;
1675:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1676:Middlewares/Third_Party/FatFs/src/ff.c **** 
1677:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; lfn[n]; n++) ;
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (n + 25) / 13;
1680:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {						/* Otherwise allocate an entry for an SFN  */
1681:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = 1;
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->index - nent);
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(dp->fs, dp->sect);
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->fs->wflag = 1;
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1698:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
1700:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {				/* Set SFN entry */
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clean the entry */
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
1707:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1708:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
1709:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1711:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1712:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1713:Middlewares/Third_Party/FatFs/src/ff.c **** 
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1715:Middlewares/Third_Party/FatFs/src/ff.c **** }
1716:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1717:Middlewares/Third_Party/FatFs/src/ff.c **** 
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 45


1721:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1722:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
1723:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1724:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && !_FS_MINIMIZE
1725:Middlewares/Third_Party/FatFs/src/ff.c **** static
1726:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK: Successful, FR_DISK_ERR: A disk error */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** )
1729:Middlewares/Third_Party/FatFs/src/ff.c **** {
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = dp->index;	/* SFN index */
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN en
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(dp->fs, dp->sect);
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
1742:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1743:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);		/* Next entry */
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
1746:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
1747:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1748:Middlewares/Third_Party/FatFs/src/ff.c **** 
1749:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
1750:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->index);
1751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
1756:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1757:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1759:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1762:Middlewares/Third_Party/FatFs/src/ff.c **** }
1763:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 
1768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1769:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
1770:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1771:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1772:Middlewares/Third_Party/FatFs/src/ff.c **** static
1773:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** )
1777:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/cclwbenu.s 			page 46


 796              		.loc 1 1777 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801              	.LVL90:
 802 0000 30B4     		push	{r4, r5}
 803              	.LCFI8:
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 4, -8
 806              		.cfi_offset 5, -4
1778:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1779:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *p, c;
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
1781:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1784:Middlewares/Third_Party/FatFs/src/ff.c **** 
1785:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = fno->fname;
 807              		.loc 1 1785 0
 808 0002 01F10904 		add	r4, r1, #9
 809              	.LVL91:
1786:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->sect) {		/* Get SFN */
 810              		.loc 1 1786 0
 811 0006 D0F81032 		ldr	r3, [r0, #528]
 812 000a 5BB3     		cbz	r3, .L83
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;
 813              		.loc 1 1787 0
 814 000c D0F81402 		ldr	r0, [r0, #532]
 815              	.LVL92:
1788:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 816              		.loc 1 1788 0
 817 0010 0023     		movs	r3, #0
1789:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (i < 11) {		/* Copy name body and extension */
 818              		.loc 1 1789 0
 819 0012 0EE0     		b	.L84
 820              	.LVL93:
 821              	.L88:
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (TCHAR)dir[i++];
 822              		.loc 1 1790 0
 823 0014 5A1C     		adds	r2, r3, #1
 824              	.LVL94:
 825 0016 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 826              	.LVL95:
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == ' ') continue;				/* Skip padding spaces */
 827              		.loc 1 1791 0
 828 0018 202B     		cmp	r3, #32
 829 001a 09D0     		beq	.L85
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 830              		.loc 1 1792 0
 831 001c 052B     		cmp	r3, #5
 832 001e 00D1     		bne	.L86
 833 0020 E523     		movs	r3, #229
 834              	.LVL96:
 835              	.L86:
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == 9) *p++ = '.';				/* Insert a . if extension is exist */
 836              		.loc 1 1793 0
ARM GAS  /tmp/cclwbenu.s 			page 47


 837 0022 092A     		cmp	r2, #9
 838 0024 02D1     		bne	.L87
 839              	.LVL97:
 840              		.loc 1 1793 0 is_stmt 0 discriminator 1
 841 0026 2E25     		movs	r5, #46
 842 0028 2570     		strb	r5, [r4]
 843 002a 0134     		adds	r4, r4, #1
 844              	.LVL98:
 845              	.L87:
1794:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1795:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
1797:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dir[i]))
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = c << 8 | dir[i++];
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ff_convert(c, 1);	/* OEM -> Unicode */
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!c) c = '?';
1802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p++ = c;
 846              		.loc 1 1804 0 is_stmt 1
 847 002c 2370     		strb	r3, [r4]
 848 002e 0134     		adds	r4, r4, #1
 849              	.LVL99:
 850              	.L85:
 851 0030 1346     		mov	r3, r2
 852              	.LVL100:
 853              	.L84:
1789:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (TCHAR)dir[i++];
 854              		.loc 1 1789 0
 855 0032 0A2B     		cmp	r3, #10
 856 0034 EED9     		bls	.L88
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fattrib = dir[DIR_Attr];				/* Attribute */
 857              		.loc 1 1806 0
 858 0036 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 859              	.LVL101:
 860 0038 0B72     		strb	r3, [r1, #8]
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fsize = LD_DWORD(dir + DIR_FileSize);	/* Size */
 861              		.loc 1 1807 0
 862 003a C27F     		ldrb	r2, [r0, #31]	@ zero_extendqisi2
 863 003c 837F     		ldrb	r3, [r0, #30]	@ zero_extendqisi2
 864 003e 1B04     		lsls	r3, r3, #16
 865 0040 43EA0263 		orr	r3, r3, r2, lsl #24
 866 0044 427F     		ldrb	r2, [r0, #29]	@ zero_extendqisi2
 867 0046 43EA0223 		orr	r3, r3, r2, lsl #8
 868 004a 027F     		ldrb	r2, [r0, #28]	@ zero_extendqisi2
 869 004c 1343     		orrs	r3, r3, r2
 870 004e 0B60     		str	r3, [r1]
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fdate = LD_WORD(dir + DIR_WrtDate);	/* Date */
 871              		.loc 1 1808 0
 872 0050 427E     		ldrb	r2, [r0, #25]	@ zero_extendqisi2
 873 0052 037E     		ldrb	r3, [r0, #24]	@ zero_extendqisi2
 874 0054 43EA0223 		orr	r3, r3, r2, lsl #8
 875 0058 8B80     		strh	r3, [r1, #4]	@ movhi
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->ftime = LD_WORD(dir + DIR_WrtTime);	/* Time */
 876              		.loc 1 1809 0
ARM GAS  /tmp/cclwbenu.s 			page 48


 877 005a C27D     		ldrb	r2, [r0, #23]	@ zero_extendqisi2
 878 005c 837D     		ldrb	r3, [r0, #22]	@ zero_extendqisi2
 879 005e 43EA0223 		orr	r3, r3, r2, lsl #8
 880 0062 CB80     		strh	r3, [r1, #6]	@ movhi
 881              	.LVL102:
 882              	.L83:
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;		/* Terminate SFN string by a \0 */
 883              		.loc 1 1811 0
 884 0064 0023     		movs	r3, #0
 885 0066 2370     		strb	r3, [r4]
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 
1813:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fno->lfname) {
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0; p = fno->lfname;
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfn = dp->lfn;
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = *lfn++) != 0) {		/* Get an LFN character */
1819:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100)	/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 					p[i++] = (TCHAR)(w >> 8);
1824:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 				p[i++] = (TCHAR)w;
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[i] = 0;	/* Terminate LFN string by a \0 */
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1831:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1832:Middlewares/Third_Party/FatFs/src/ff.c **** }
 886              		.loc 1 1832 0
 887 0068 30BC     		pop	{r4, r5}
 888              	.LCFI9:
 889              		.cfi_restore 5
 890              		.cfi_restore 4
 891              		.cfi_def_cfa_offset 0
 892              	.LVL103:
 893 006a 7047     		bx	lr
 894              		.cfi_endproc
 895              	.LFE90:
 897              		.section	.text.create_name,"ax",%progbits
 898              		.align	2
 899              		.thumb
 900              		.thumb_func
 902              	create_name:
 903              	.LFB91:
1833:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 
1837:Middlewares/Third_Party/FatFs/src/ff.c **** 
1838:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1839:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
1840:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1841:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
ARM GAS  /tmp/cclwbenu.s 			page 49


1842:Middlewares/Third_Party/FatFs/src/ff.c **** static
1843:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
1844:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** )
1846:Middlewares/Third_Party/FatFs/src/ff.c **** {
1847:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1848:Middlewares/Third_Party/FatFs/src/ff.c **** 
1849:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1850:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
1851:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr))		/* Get DBC 2nd byte if needed */
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
1856:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1857:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
1859:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
1861:Middlewares/Third_Party/FatFs/src/ff.c **** }
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** static
1865:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* Return value: 0:mismatched, 1:matched */
1866:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
1867:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
1870:Middlewares/Third_Party/FatFs/src/ff.c **** )
1871:Middlewares/Third_Party/FatFs/src/ff.c **** {
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
1873:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
1874:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
1888:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
1892:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1893:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
1896:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!pc) return 1;		/* Branch matched? (matched at end of both strings) */
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
ARM GAS  /tmp/cclwbenu.s 			page 50


1899:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
1902:Middlewares/Third_Party/FatFs/src/ff.c **** }
1903:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 
1907:Middlewares/Third_Party/FatFs/src/ff.c **** 
1908:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1909:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a segment and create the object name in directory form           */
1910:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1911:Middlewares/Third_Party/FatFs/src/ff.c **** 
1912:Middlewares/Third_Party/FatFs/src/ff.c **** static
1913:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
1916:Middlewares/Third_Party/FatFs/src/ff.c **** )
1917:Middlewares/Third_Party/FatFs/src/ff.c **** {
 904              		.loc 1 1917 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              	.LVL104:
 909 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 910              	.LCFI10:
 911              		.cfi_def_cfa_offset 40
 912              		.cfi_offset 3, -40
 913              		.cfi_offset 4, -36
 914              		.cfi_offset 5, -32
 915              		.cfi_offset 6, -28
 916              		.cfi_offset 7, -24
 917              		.cfi_offset 8, -20
 918              		.cfi_offset 9, -16
 919              		.cfi_offset 10, -12
 920              		.cfi_offset 11, -8
 921              		.cfi_offset 14, -4
 922 0004 8A46     		mov	r10, r1
1918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1919:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
1920:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
1923:Middlewares/Third_Party/FatFs/src/ff.c **** 
1924:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
1925:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn = dp->lfn;
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = di = 0;
1928:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1929:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN)				/* Reject too long name */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
1933:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S
ARM GAS  /tmp/cclwbenu.s 			page 51


1937:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
1938:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b))
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;	/* Reject invalid sequence */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1942:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
1949:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') || /* Is this a dot entry? */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
1959:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1961:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Strip trailing spaces and dots */
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!di) return FR_INVALID_NAME;	/* Reject nul string */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** 
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
1970:Middlewares/Third_Party/FatFs/src/ff.c **** 
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
1973:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
1974:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
1975:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** 	b = i = 0; ni = 8;
1978:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
1981:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/cclwbenu.s 			page 52


1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
1999:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* DBC (always false at SBCS cfg) */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2020:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2023:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2024:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2025:Middlewares/Third_Party/FatFs/src/ff.c **** 
2026:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with deleted mark, re
2027:Middlewares/Third_Party/FatFs/src/ff.c **** 
2028:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 		cf |= NS_LFN;
2031:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2032:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 
2041:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, c, d, *sfn;
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2047:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
 923              		.loc 1 2047 0
 924 0006 0C68     		ldr	r4, [r1]
 925              	.LVL105:
ARM GAS  /tmp/cclwbenu.s 			page 53


 926 0008 00E0     		b	.L92
 927              	.L93:
 928              		.loc 1 2047 0 is_stmt 0 discriminator 5
 929 000a 0134     		adds	r4, r4, #1
 930              	.LVL106:
 931              	.L92:
 932              		.loc 1 2047 0 discriminator 1
 933 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 934 000e 2F2B     		cmp	r3, #47
 935 0010 FBD0     		beq	.L93
 936              		.loc 1 2047 0 discriminator 4
 937 0012 5C2B     		cmp	r3, #92
 938 0014 F9D0     		beq	.L93
2048:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn = dp->fn;
 939              		.loc 1 2048 0 is_stmt 1
 940 0016 D0F818B2 		ldr	fp, [r0, #536]
 941              	.LVL107:
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
 942              		.loc 1 2049 0
 943 001a 5846     		mov	r0, fp
 944              	.LVL108:
 945 001c 2021     		movs	r1, #32
 946              	.LVL109:
 947 001e 0B22     		movs	r2, #11
 948 0020 FFF7FEFF 		bl	mem_set
 949              	.LVL110:
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = b = 0; ni = 8;
 950              		.loc 1 2050 0
 951 0024 0026     		movs	r6, #0
 952 0026 3346     		mov	r3, r6
 953 0028 0827     		movs	r7, #8
 954 002a B046     		mov	r8, r6
 955 002c 00E0     		b	.L94
 956              	.LVL111:
 957              	.L99:
 958 002e 4B46     		mov	r3, r9
 959              	.LVL112:
 960              	.L94:
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2052:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2053:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2054:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2055:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2056:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2059:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = &p[si];									/* Return pointer to the next segment */
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of path */
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
 961              		.loc 1 2065 0
 962 0030 03F10109 		add	r9, r3, #1
 963              	.LVL113:
 964 0034 E55C     		ldrb	r5, [r4, r3]	@ zero_extendqisi2
ARM GAS  /tmp/cclwbenu.s 			page 54


 965              	.LVL114:
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
 966              		.loc 1 2066 0
 967 0036 202D     		cmp	r5, #32
 968 0038 35D9     		bls	.L95
 969              		.loc 1 2066 0 is_stmt 0 discriminator 1
 970 003a 2F2D     		cmp	r5, #47
 971 003c 33D0     		beq	.L95
 972              		.loc 1 2066 0 discriminator 2
 973 003e 5C2D     		cmp	r5, #92
 974 0040 31D0     		beq	.L95
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {
 975              		.loc 1 2067 0 is_stmt 1
 976 0042 2E2D     		cmp	r5, #46
 977 0044 01D0     		beq	.L96
 978              		.loc 1 2067 0 is_stmt 0 discriminator 1
 979 0046 BE42     		cmp	r6, r7
 980 0048 0AD3     		bcc	.L97
 981              	.L96:
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
 982              		.loc 1 2068 0 is_stmt 1
 983 004a 082F     		cmp	r7, #8
 984 004c 53D1     		bne	.L108
 985              		.loc 1 2068 0 is_stmt 0 discriminator 2
 986 004e 2E2D     		cmp	r5, #46
 987 0050 54D1     		bne	.L109
 988              	.LVL115:
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
 989              		.loc 1 2070 0 is_stmt 1
 990 0052 4FEA8808 		lsl	r8, r8, #2
 991              	.LVL116:
 992 0056 5FFA88F8 		uxtb	r8, r8
 993              	.LVL117:
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;
 994              		.loc 1 2069 0
 995 005a 0826     		movs	r6, #8
 996 005c 0B27     		movs	r7, #11
 997              		.loc 1 2070 0
 998 005e E6E7     		b	.L99
 999              	.LVL118:
 1000              	.L97:
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
 1001              		.loc 1 2072 0
 1002 0060 15F0800F 		tst	r5, #128
 1003 0064 04D0     		beq	.L100
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 			b |= 3;						/* Eliminate NT flag */
 1004              		.loc 1 2073 0
 1005 0066 48F00308 		orr	r8, r8, #3
 1006              	.LVL119:
2074:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
 1007              		.loc 1 2075 0
 1008 006a 803D     		subs	r5, r5, #128
 1009              	.LVL120:
 1010 006c 284B     		ldr	r3, .L114
ARM GAS  /tmp/cclwbenu.s 			page 55


 1011 006e 5D5D     		ldrb	r5, [r3, r5]	@ zero_extendqisi2
 1012              	.LVL121:
 1013              	.L100:
2076:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2077:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII cfg) */
2079:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2080:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2084:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1)	/* Reject invalid DBC */
2085:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
2086:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2088:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2089:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))	/* Reject illegal chrs for SFN */
 1014              		.loc 1 2089 0
 1015 0070 2848     		ldr	r0, .L114+4
 1016 0072 2946     		mov	r1, r5
 1017 0074 FFF7FEFF 		bl	chk_chr
 1018              	.LVL122:
 1019 0078 0028     		cmp	r0, #0
 1020 007a 42D1     		bne	.L110
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 1021              		.loc 1 2091 0
 1022 007c A5F14103 		sub	r3, r5, #65
 1023 0080 DBB2     		uxtb	r3, r3
 1024 0082 192B     		cmp	r3, #25
 1025 0084 02D8     		bhi	.L101
2092:Middlewares/Third_Party/FatFs/src/ff.c **** 				b |= 2;
 1026              		.loc 1 2092 0
 1027 0086 48F00208 		orr	r8, r8, #2
 1028              	.LVL123:
 1029 008a 08E0     		b	.L102
 1030              	.L101:
2093:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(c)) {		/* ASCII small capital? */
 1031              		.loc 1 2094 0
 1032 008c A5F16103 		sub	r3, r5, #97
 1033 0090 DBB2     		uxtb	r3, r3
 1034 0092 192B     		cmp	r3, #25
 1035 0094 03D8     		bhi	.L102
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 1; c -= 0x20;
 1036              		.loc 1 2095 0
 1037 0096 48F00108 		orr	r8, r8, #1
 1038              	.LVL124:
 1039 009a 203D     		subs	r5, r5, #32
 1040              	.LVL125:
 1041 009c EDB2     		uxtb	r5, r5
 1042              	.LVL126:
 1043              	.L102:
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1044              		.loc 1 2098 0
ARM GAS  /tmp/cclwbenu.s 			page 56


 1045 009e 0BF80650 		strb	r5, [fp, r6]
 1046 00a2 0136     		adds	r6, r6, #1
 1047              	.LVL127:
 1048 00a4 C3E7     		b	.L99
 1049              	.L95:
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
 1050              		.loc 1 2101 0
 1051 00a6 4C44     		add	r4, r4, r9
 1052              	.LVL128:
 1053 00a8 CAF80040 		str	r4, [r10]
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 1054              		.loc 1 2102 0
 1055 00ac 202D     		cmp	r5, #32
 1056 00ae 01D8     		bhi	.L111
 1057 00b0 0423     		movs	r3, #4
 1058 00b2 00E0     		b	.L103
 1059              	.L111:
 1060 00b4 0023     		movs	r3, #0
 1061              	.L103:
 1062              	.LVL129:
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!i) return FR_INVALID_NAME;		/* Reject nul string */
 1063              		.loc 1 2104 0 discriminator 4
 1064 00b6 3EB3     		cbz	r6, .L112
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* When first character collides with DDEM, replace it with RD
 1065              		.loc 1 2105 0
 1066 00b8 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
 1067 00bc E52A     		cmp	r2, #229
 1068 00be 02D1     		bne	.L104
 1069              		.loc 1 2105 0 is_stmt 0 discriminator 1
 1070 00c0 0522     		movs	r2, #5
 1071 00c2 8BF80020 		strb	r2, [fp]
 1072              	.L104:
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
 1073              		.loc 1 2107 0 is_stmt 1
 1074 00c6 082F     		cmp	r7, #8
 1075 00c8 03D1     		bne	.L105
 1076              		.loc 1 2107 0 is_stmt 0 discriminator 1
 1077 00ca 4FEA8808 		lsl	r8, r8, #2
 1078              	.LVL130:
 1079 00ce 5FFA88F8 		uxtb	r8, r8
 1080              	.LVL131:
 1081              	.L105:
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
 1082              		.loc 1 2108 0 is_stmt 1
 1083 00d2 08F00302 		and	r2, r8, #3
 1084 00d6 012A     		cmp	r2, #1
 1085 00d8 01D1     		bne	.L106
 1086              		.loc 1 2108 0 is_stmt 0 discriminator 1
 1087 00da 43F01003 		orr	r3, r3, #16
 1088              	.LVL132:
 1089              	.L106:
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
 1090              		.loc 1 2109 0 is_stmt 1
ARM GAS  /tmp/cclwbenu.s 			page 57


 1091 00de 08F00C08 		and	r8, r8, #12
 1092              	.LVL133:
 1093 00e2 B8F1040F 		cmp	r8, #4
 1094 00e6 01D1     		bne	.L107
 1095              		.loc 1 2109 0 is_stmt 0 discriminator 1
 1096 00e8 43F00803 		orr	r3, r3, #8
 1097              	.LVL134:
 1098              	.L107:
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = c;		/* Store NT flag, File name is created */
 1099              		.loc 1 2111 0 is_stmt 1
 1100 00ec 8BF80B30 		strb	r3, [fp, #11]
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
 1101              		.loc 1 2113 0
 1102 00f0 0020     		movs	r0, #0
 1103 00f2 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1104              	.LVL135:
 1105              	.L108:
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;
 1106              		.loc 1 2068 0
 1107 00f6 0620     		movs	r0, #6
 1108 00f8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1109              	.LVL136:
 1110              	.L109:
 1111 00fc 0620     		movs	r0, #6
 1112 00fe BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1113              	.LVL137:
 1114              	.L110:
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 1115              		.loc 1 2090 0
 1116 0102 0620     		movs	r0, #6
 1117 0104 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1118              	.LVL138:
 1119              	.L112:
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* When first character collides with DDEM, replace it with RD
 1120              		.loc 1 2104 0
 1121 0108 0620     		movs	r0, #6
2114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2115:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1122              		.loc 1 2115 0
 1123 010a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1124              	.LVL139:
 1125              	.L115:
 1126 010e 00BF     		.align	2
 1127              	.L114:
 1128 0110 00000000 		.word	.LANCHOR1
 1129 0114 00000000 		.word	.LC0
 1130              		.cfi_endproc
 1131              	.LFE91:
 1133              		.section	.text.get_ldnumber,"ax",%progbits
 1134              		.align	2
 1135              		.thumb
 1136              		.thumb_func
 1138              	get_ldnumber:
 1139              	.LFB93:
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 58


2117:Middlewares/Third_Party/FatFs/src/ff.c **** 
2118:Middlewares/Third_Party/FatFs/src/ff.c **** 
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2121:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** static
2125:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2126:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2127:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** )
2129:Middlewares/Third_Party/FatFs/src/ff.c **** {
2130:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2131:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir, ns;
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 
2134:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;	dp->sclust = 0;				/* Strip it and start from the root directory */
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* No heading separator */
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sclust = dp->fs->cdir;			/* Start from the current directory */
2139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2140:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sclust = 0;							/* Always start from the root directory */
2144:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir = 0;
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2150:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the sagment name */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sclust = 0; dp->dir = 0;	/* it is the root directory and stay there */
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;					/* Ended at the root directroy. Function completed. */
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2165:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dp->dir;						/* Follow the sub-directory */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->sclust = ld_clust(dp->fs, dir);
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/cclwbenu.s 			page 59


2174:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** }
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 
2182:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2184:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 
2186:Middlewares/Third_Party/FatFs/src/ff.c **** static
2187:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2189:Middlewares/Third_Party/FatFs/src/ff.c **** )
2190:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1140              		.loc 1 2190 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 0
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 1144              		@ link register save eliminated.
 1145              	.LVL140:
2191:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const str[] = {_VOLUME_STRS};
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** 
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1146              		.loc 1 2202 0
 1147 0000 0168     		ldr	r1, [r0]
 1148 0002 21B9     		cbnz	r1, .L123
2193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1149              		.loc 1 2193 0
 1150 0004 4FF0FF33 		mov	r3, #-1
 1151 0008 1FE0     		b	.L129
 1152              	.LVL141:
 1153              	.L120:
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1154              		.loc 1 2203 0 discriminator 4
 1155 000a 0132     		adds	r2, r2, #1
 1156              	.LVL142:
 1157 000c 00E0     		b	.L117
 1158              	.LVL143:
 1159              	.L123:
 1160 000e 0A46     		mov	r2, r1
 1161              	.L117:
 1162              	.LVL144:
 1163              		.loc 1 2203 0 is_stmt 0 discriminator 1
 1164 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1165 0012 202B     		cmp	r3, #32
ARM GAS  /tmp/cclwbenu.s 			page 60


 1166 0014 01D9     		bls	.L119
 1167              		.loc 1 2203 0 discriminator 3
 1168 0016 3A2B     		cmp	r3, #58
 1169 0018 F7D1     		bne	.L120
 1170              	.L119:
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1171              		.loc 1 2204 0 is_stmt 1
 1172 001a 3A2B     		cmp	r3, #58
 1173 001c 14D1     		bne	.L124
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1174              		.loc 1 2190 0
 1175 001e 10B4     		push	{r4}
 1176              	.LCFI11:
 1177              		.cfi_def_cfa_offset 4
 1178              		.cfi_offset 4, -4
 1179              	.LVL145:
2205:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2206:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0'; 
 1180              		.loc 1 2206 0
 1181 0020 4C1C     		adds	r4, r1, #1
 1182              	.LVL146:
 1183 0022 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1184 0024 303B     		subs	r3, r3, #48
 1185              	.LVL147:
2207:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1186              		.loc 1 2207 0
 1187 0026 092B     		cmp	r3, #9
 1188 0028 05D8     		bhi	.L125
 1189              		.loc 1 2207 0 is_stmt 0 discriminator 1
 1190 002a 9442     		cmp	r4, r2
 1191 002c 06D1     		bne	.L126
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1192              		.loc 1 2208 0 is_stmt 1
 1193 002e 43B9     		cbnz	r3, .L127
 1194              	.LVL148:
2209:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2210:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
 1195              		.loc 1 2210 0
 1196 0030 0132     		adds	r2, r2, #1
 1197              	.LVL149:
 1198 0032 0260     		str	r2, [r0]
 1199 0034 0BE0     		b	.L122
 1200              	.LVL150:
 1201              	.L125:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1202              		.loc 1 2193 0
 1203 0036 4FF0FF33 		mov	r3, #-1
 1204              	.LVL151:
 1205 003a 08E0     		b	.L122
 1206              	.LVL152:
 1207              	.L126:
 1208 003c 4FF0FF33 		mov	r3, #-1
 1209              	.LVL153:
 1210 0040 05E0     		b	.L122
 1211              	.LVL154:
 1212              	.L127:
 1213 0042 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/cclwbenu.s 			page 61


 1214              	.LVL155:
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2212:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2213:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2217:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = str[i]; tp = *path;
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2219:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2223:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2228:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
 1215              		.loc 1 2229 0
 1216 0046 02E0     		b	.L122
 1217              	.LVL156:
 1218              	.L124:
 1219              	.LCFI12:
 1220              		.cfi_def_cfa_offset 0
 1221              		.cfi_restore 4
2230:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH && _VOLUMES >= 2
2232:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2233:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1222              		.loc 1 2234 0
 1223 0048 0023     		movs	r3, #0
 1224              	.LVL157:
 1225              	.L129:
2235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2238:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1226              		.loc 1 2238 0
 1227 004a 1846     		mov	r0, r3
 1228              	.LVL158:
 1229 004c 7047     		bx	lr
 1230              	.LVL159:
 1231              	.L122:
 1232              	.LCFI13:
 1233              		.cfi_def_cfa_offset 4
 1234              		.cfi_offset 4, -4
 1235 004e 1846     		mov	r0, r3
 1236              	.LVL160:
 1237 0050 5DF8044B 		ldr	r4, [sp], #4
 1238              	.LCFI14:
 1239              		.cfi_restore 4
 1240              		.cfi_def_cfa_offset 0
 1241              	.LVL161:
 1242 0054 7047     		bx	lr
ARM GAS  /tmp/cclwbenu.s 			page 62


 1243              		.cfi_endproc
 1244              	.LFE93:
 1246 0056 00BF     		.section	.text.sync_window,"ax",%progbits
 1247              		.align	2
 1248              		.thumb
 1249              		.thumb_func
 1251              	sync_window:
 1252              	.LFB72:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1253              		.loc 1 776 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257              	.LVL162:
 1258 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1259              	.LCFI15:
 1260              		.cfi_def_cfa_offset 24
 1261              		.cfi_offset 3, -24
 1262              		.cfi_offset 4, -20
 1263              		.cfi_offset 5, -16
 1264              		.cfi_offset 6, -12
 1265              		.cfi_offset 7, -8
 1266              		.cfi_offset 14, -4
 1267              	.LVL163:
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1268              		.loc 1 782 0
 1269 0002 90F80432 		ldrb	r3, [r0, #516]	@ zero_extendqisi2
 1270 0006 3BB3     		cbz	r3, .L134
 1271 0008 0446     		mov	r4, r0
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win.d8, wsect, 1) != RES_OK) {
 1272              		.loc 1 783 0
 1273 000a D0F82C62 		ldr	r6, [r0, #556]
 1274              	.LVL164:
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1275              		.loc 1 784 0
 1276 000e 0746     		mov	r7, r0
 1277 0010 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 1278              	.LVL165:
 1279 0014 2146     		mov	r1, r4
 1280 0016 3246     		mov	r2, r6
 1281 0018 0123     		movs	r3, #1
 1282 001a FFF7FEFF 		bl	disk_write
 1283              	.LVL166:
 1284 001e E8B9     		cbnz	r0, .L135
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1285              		.loc 1 787 0
 1286 0020 0023     		movs	r3, #0
 1287 0022 84F80432 		strb	r3, [r4, #516]
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1288              		.loc 1 788 0
 1289 0026 D4F82032 		ldr	r3, [r4, #544]
 1290 002a F31A     		subs	r3, r6, r3
 1291 002c D4F81822 		ldr	r2, [r4, #536]
 1292 0030 9342     		cmp	r3, r2
 1293 0032 15D2     		bcs	.L136
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1294              		.loc 1 789 0
ARM GAS  /tmp/cclwbenu.s 			page 63


 1295 0034 94F80352 		ldrb	r5, [r4, #515]	@ zero_extendqisi2
 1296              	.LVL167:
 1297 0038 0AE0     		b	.L132
 1298              	.L133:
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win.d8, wsect, 1);
 1299              		.loc 1 790 0 discriminator 3
 1300 003a D4F81832 		ldr	r3, [r4, #536]
 1301 003e 1E44     		add	r6, r6, r3
 1302              	.LVL168:
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1303              		.loc 1 791 0 discriminator 3
 1304 0040 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 1305 0044 3946     		mov	r1, r7
 1306 0046 3246     		mov	r2, r6
 1307 0048 0123     		movs	r3, #1
 1308 004a FFF7FEFF 		bl	disk_write
 1309              	.LVL169:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1310              		.loc 1 789 0 discriminator 3
 1311 004e 013D     		subs	r5, r5, #1
 1312              	.LVL170:
 1313              	.L132:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1314              		.loc 1 789 0 is_stmt 0 discriminator 1
 1315 0050 012D     		cmp	r5, #1
 1316 0052 F2D8     		bhi	.L133
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1317              		.loc 1 779 0 is_stmt 1
 1318 0054 0020     		movs	r0, #0
 1319 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1320              	.LVL171:
 1321              	.L134:
 1322 0058 0020     		movs	r0, #0
 1323              	.LVL172:
 1324 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1325              	.LVL173:
 1326              	.L135:
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1327              		.loc 1 785 0
 1328 005c 0120     		movs	r0, #1
 1329 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1330              	.LVL174:
 1331              	.L136:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1332              		.loc 1 779 0
 1333 0060 0020     		movs	r0, #0
 1334              	.LVL175:
 797:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1335              		.loc 1 797 0
 1336 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1337              		.cfi_endproc
 1338              	.LFE72:
 1340              		.section	.text.move_window,"ax",%progbits
 1341              		.align	2
 1342              		.thumb
 1343              		.thumb_func
 1345              	move_window:
ARM GAS  /tmp/cclwbenu.s 			page 64


 1346              	.LFB73:
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1347              		.loc 1 806 0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              	.LVL176:
 1352 0000 70B5     		push	{r4, r5, r6, lr}
 1353              	.LCFI16:
 1354              		.cfi_def_cfa_offset 16
 1355              		.cfi_offset 4, -16
 1356              		.cfi_offset 5, -12
 1357              		.cfi_offset 6, -8
 1358              		.cfi_offset 14, -4
 1359 0002 0446     		mov	r4, r0
 1360 0004 0D46     		mov	r5, r1
 1361              	.LVL177:
 810:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1362              		.loc 1 810 0
 1363 0006 D0F82C32 		ldr	r3, [r0, #556]
 1364 000a 8B42     		cmp	r3, r1
 1365 000c 11D0     		beq	.L141
 812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1366              		.loc 1 812 0
 1367 000e FFF7FEFF 		bl	sync_window
 1368              	.LVL178:
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win.d8, sector, 1) != RES_OK) {
 1369              		.loc 1 814 0
 1370 0012 0646     		mov	r6, r0
 1371 0014 70B9     		cbnz	r0, .L139
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1372              		.loc 1 815 0
 1373 0016 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 1374              	.LVL179:
 1375 001a 2146     		mov	r1, r4
 1376 001c 2A46     		mov	r2, r5
 1377 001e 0123     		movs	r3, #1
 1378 0020 FFF7FEFF 		bl	disk_read
 1379              	.LVL180:
 1380 0024 10B1     		cbz	r0, .L140
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1381              		.loc 1 817 0
 1382 0026 0126     		movs	r6, #1
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1383              		.loc 1 816 0
 1384 0028 4FF0FF35 		mov	r5, #-1
 1385              	.LVL181:
 1386              	.L140:
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1387              		.loc 1 819 0
 1388 002c C4F82C52 		str	r5, [r4, #556]
 1389 0030 00E0     		b	.L139
 1390              	.LVL182:
 1391              	.L141:
 807:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1392              		.loc 1 807 0
 1393 0032 0026     		movs	r6, #0
ARM GAS  /tmp/cclwbenu.s 			page 65


 1394              	.LVL183:
 1395              	.L139:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1396              		.loc 1 823 0
 1397 0034 3046     		mov	r0, r6
 1398 0036 70BD     		pop	{r4, r5, r6, pc}
 1399              		.cfi_endproc
 1400              	.LFE73:
 1402              		.section	.text.check_fs,"ax",%progbits
 1403              		.align	2
 1404              		.thumb
 1405              		.thumb_func
 1407              	check_fs:
 1408              	.LFB94:
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 
2242:Middlewares/Third_Party/FatFs/src/ff.c **** 
2243:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2244:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2246:Middlewares/Third_Party/FatFs/src/ff.c **** 
2247:Middlewares/Third_Party/FatFs/src/ff.c **** static
2248:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk 
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
2251:Middlewares/Third_Party/FatFs/src/ff.c **** )
2252:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1409              		.loc 1 2252 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413              	.LVL184:
 1414 0000 10B5     		push	{r4, lr}
 1415              	.LCFI17:
 1416              		.cfi_def_cfa_offset 8
 1417              		.cfi_offset 4, -8
 1418              		.cfi_offset 14, -4
 1419 0002 0446     		mov	r4, r0
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
 1420              		.loc 1 2253 0
 1421 0004 0023     		movs	r3, #0
 1422 0006 80F80432 		strb	r3, [r0, #516]
 1423 000a 4FF0FF33 		mov	r3, #-1
 1424 000e C0F82C32 		str	r3, [r0, #556]
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
 1425              		.loc 1 2254 0
 1426 0012 FFF7FEFF 		bl	move_window
 1427              	.LVL185:
 1428 0016 80BB     		cbnz	r0, .L146
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 3;
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (LD_WORD(&fs->win.d8[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offs
 1429              		.loc 1 2257 0
 1430 0018 94F8FF21 		ldrb	r2, [r4, #511]	@ zero_extendqisi2
 1431 001c 94F8FE31 		ldrb	r3, [r4, #510]	@ zero_extendqisi2
 1432 0020 43EA0223 		orr	r3, r3, r2, lsl #8
ARM GAS  /tmp/cclwbenu.s 			page 66


 1433 0024 1BB2     		sxth	r3, r3
 1434 0026 194A     		ldr	r2, .L151
 1435 0028 9342     		cmp	r3, r2
 1436 002a 28D1     		bne	.L147
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 2;
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((LD_DWORD(&fs->win.d8[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
 1437              		.loc 1 2260 0
 1438 002c 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 1439 0030 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 1440 0034 1B04     		lsls	r3, r3, #16
 1441 0036 43EA0263 		orr	r3, r3, r2, lsl #24
 1442 003a 94F83720 		ldrb	r2, [r4, #55]	@ zero_extendqisi2
 1443 003e 43EA0223 		orr	r3, r3, r2, lsl #8
 1444 0042 94F83620 		ldrb	r2, [r4, #54]	@ zero_extendqisi2
 1445 0046 1343     		orrs	r3, r3, r2
 1446 0048 23F07F43 		bic	r3, r3, #-16777216
 1447 004c 104A     		ldr	r2, .L151+4
 1448 004e 9342     		cmp	r3, r2
 1449 0050 17D0     		beq	.L148
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((LD_DWORD(&fs->win.d8[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 1450              		.loc 1 2262 0
 1451 0052 94F85520 		ldrb	r2, [r4, #85]	@ zero_extendqisi2
 1452 0056 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 1453 005a 1B04     		lsls	r3, r3, #16
 1454 005c 43EA0263 		orr	r3, r3, r2, lsl #24
 1455 0060 94F85320 		ldrb	r2, [r4, #83]	@ zero_extendqisi2
 1456 0064 43EA0223 		orr	r3, r3, r2, lsl #8
 1457 0068 94F85220 		ldrb	r2, [r4, #82]	@ zero_extendqisi2
 1458 006c 1343     		orrs	r3, r3, r2
 1459 006e 23F07F43 		bic	r3, r3, #-16777216
 1460 0072 074A     		ldr	r2, .L151+4
 1461 0074 9342     		cmp	r3, r2
 1462 0076 06D1     		bne	.L149
 1463 0078 10BD     		pop	{r4, pc}
 1464              	.LVL186:
 1465              	.L146:
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1466              		.loc 1 2255 0
 1467 007a 0320     		movs	r0, #3
 1468 007c 10BD     		pop	{r4, pc}
 1469              	.LVL187:
 1470              	.L147:
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 2;
 1471              		.loc 1 2258 0
 1472 007e 0220     		movs	r0, #2
 1473 0080 10BD     		pop	{r4, pc}
 1474              	.LVL188:
 1475              	.L148:
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
 1476              		.loc 1 2261 0
 1477 0082 0020     		movs	r0, #0
 1478 0084 10BD     		pop	{r4, pc}
 1479              	.LVL189:
 1480              	.L149:
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
ARM GAS  /tmp/cclwbenu.s 			page 67


2264:Middlewares/Third_Party/FatFs/src/ff.c **** 
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;
 1481              		.loc 1 2265 0
 1482 0086 0120     		movs	r0, #1
2266:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1483              		.loc 1 2266 0
 1484 0088 10BD     		pop	{r4, pc}
 1485              	.LVL190:
 1486              	.L152:
 1487 008a 00BF     		.align	2
 1488              	.L151:
 1489 008c 55AAFFFF 		.word	-21931
 1490 0090 46415400 		.word	5521734
 1491              		.cfi_endproc
 1492              	.LFE94:
 1494              		.section	.text.validate,"ax",%progbits
 1495              		.align	2
 1496              		.thumb
 1497              		.thumb_func
 1499              	validate:
 1500              	.LFB96:
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 
2271:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2272:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2273:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 
2275:Middlewares/Third_Party/FatFs/src/ff.c **** static
2276:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE wmode			/* !=0: Check write protection for write access */
2280:Middlewares/Third_Party/FatFs/src/ff.c **** )
2281:Middlewares/Third_Party/FatFs/src/ff.c **** {
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
2286:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
2287:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
2288:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2289:Middlewares/Third_Party/FatFs/src/ff.c **** 
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number from the path name */
2292:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 68


2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
2322:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS						/* Get sector size (multiple sector size cfg only) */
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| SS(fs) < _MIN_SS || SS(fs) > _MAX_SS) return FR_DISK_ERR;
2325:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning, FDISK and SFD. */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
2333:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);						/* Partition number: 0:auto, 1-4:forced */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {								/* Find an FAT volume */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found. Following code initializes the file system object */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (LD_WORD(fs->win.d8 + BPB_BytsPerSec) != SS(fs))	/* (BPB_BytsPerSec must be equal to the physic
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize = LD_WORD(fs->win.d8 + BPB_FATSz16);			/* Number of sectors per FAT */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fasize) fasize = LD_DWORD(fs->win.d8 + BPB_FATSz32);
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_fats = fs->win.d8[BPB_NumFATs];					/* Number of FAT copies */
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->csize = fs->win.d8[BPB_SecPerClus];				/* Number of sectors per cluster */
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
ARM GAS  /tmp/cclwbenu.s 			page 69


2360:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_rootdir = LD_WORD(fs->win.d8 + BPB_RootEntCnt);	/* Number of root directory entries */
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIRE))				/* (Must be sector aligned) */
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2365:Middlewares/Third_Party/FatFs/src/ff.c **** 
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	tsect = LD_WORD(fs->win.d8 + BPB_TotSec16);			/* Number of sectors on the volume */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!tsect) tsect = LD_DWORD(fs->win.d8 + BPB_TotSec32);
2368:Middlewares/Third_Party/FatFs/src/ff.c **** 
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 	nrsv = LD_WORD(fs->win.d8 + BPB_RsvdSecCnt);			/* Number of reserved sectors */
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the FAT sub type */
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIRE);	/* RSV + FAT + DIR */
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Boundaries and Limits */
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->volbase = bsect;								/* Volume start sector */
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->database = bsect + sysect;						/* Data start sector */
2386:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
2390:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
2392:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
2395:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2396:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than the size nee
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2398:Middlewares/Third_Party/FatFs/src/ff.c **** 
2399:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize cluster allocation information */
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** 
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get fsinfo if available */
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsi_flag = 0x80;
2405:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& LD_WORD(fs->win.d8 + BPB_FSInfo) == 1
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& move_window(fs, bsect + 1) == FR_OK)
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0;
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_LeadSig) == 0x41615252
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_StrucSig) == 0x61417272)
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
2415:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust = LD_DWORD(fs->win.d8 + FSI_Free_Count);
ARM GAS  /tmp/cclwbenu.s 			page 70


2417:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2418:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->last_clust = LD_DWORD(fs->win.d8 + FSI_Nxt_Free);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2423:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2424:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;	/* FAT sub-type */
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;	/* File system mount ID */
2427:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;		/* Set current directory to root */
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK			/* Clear file lock semaphores */
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
2432:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2435:Middlewares/Third_Party/FatFs/src/ff.c **** }
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** 
2439:Middlewares/Third_Party/FatFs/src/ff.c **** 
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
2442:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2443:Middlewares/Third_Party/FatFs/src/ff.c **** 
2444:Middlewares/Third_Party/FatFs/src/ff.c **** static
2445:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* obj		/* Pointer to the object FIL/DIR to check validity */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1501              		.loc 1 2448 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
 1505              	.LVL191:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 
2452:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id || (disk_status(fil->fs->drv) 
 1506              		.loc 1 2452 0
 1507 0000 A8B1     		cbz	r0, .L155
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
 1508              		.loc 1 2448 0 discriminator 1
 1509 0002 08B5     		push	{r3, lr}
 1510              	.LCFI18:
 1511              		.cfi_def_cfa_offset 8
 1512              		.cfi_offset 3, -8
 1513              		.cfi_offset 14, -4
 1514              		.loc 1 2452 0 discriminator 1
 1515 0004 D0F80032 		ldr	r3, [r0, #512]
 1516 0008 9BB1     		cbz	r3, .L156
 1517              		.loc 1 2452 0 is_stmt 0 discriminator 2
 1518 000a 93F80012 		ldrb	r1, [r3, #512]	@ zero_extendqisi2
 1519 000e 91B1     		cbz	r1, .L157
 1520              		.loc 1 2452 0 discriminator 3
ARM GAS  /tmp/cclwbenu.s 			page 71


 1521 0010 B3F80612 		ldrh	r1, [r3, #518]
 1522 0014 B0F80422 		ldrh	r2, [r0, #516]
 1523 0018 9142     		cmp	r1, r2
 1524 001a 0ED1     		bne	.L158
 1525              		.loc 1 2452 0 discriminator 4
 1526 001c 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 1527              	.LVL192:
 1528 0020 FFF7FEFF 		bl	disk_status
 1529              	.LVL193:
 1530 0024 10F0010F 		tst	r0, #1
 1531 0028 09D1     		bne	.L159
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 
2455:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fil->fs);		/* Lock file system */
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
 1532              		.loc 1 2457 0 is_stmt 1
 1533 002a 0020     		movs	r0, #0
 1534 002c 08BD     		pop	{r3, pc}
 1535              	.LVL194:
 1536              	.L155:
 1537              	.LCFI19:
 1538              		.cfi_def_cfa_offset 0
 1539              		.cfi_restore 3
 1540              		.cfi_restore 14
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
 1541              		.loc 1 2453 0
 1542 002e 0920     		movs	r0, #9
 1543              	.LVL195:
2458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1544              		.loc 1 2458 0
 1545 0030 7047     		bx	lr
 1546              	.LVL196:
 1547              	.L156:
 1548              	.LCFI20:
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 3, -8
 1551              		.cfi_offset 14, -4
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
 1552              		.loc 1 2453 0
 1553 0032 0920     		movs	r0, #9
 1554              	.LVL197:
 1555 0034 08BD     		pop	{r3, pc}
 1556              	.LVL198:
 1557              	.L157:
 1558 0036 0920     		movs	r0, #9
 1559              	.LVL199:
 1560 0038 08BD     		pop	{r3, pc}
 1561              	.LVL200:
 1562              	.L158:
 1563 003a 0920     		movs	r0, #9
 1564              	.LVL201:
 1565 003c 08BD     		pop	{r3, pc}
 1566              	.L159:
 1567 003e 0920     		movs	r0, #9
 1568              		.loc 1 2458 0
 1569 0040 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cclwbenu.s 			page 72


 1570              		.cfi_endproc
 1571              	.LFE96:
 1573 0042 00BF     		.section	.text.find_volume,"ax",%progbits
 1574              		.align	2
 1575              		.thumb
 1576              		.thumb_func
 1578              	find_volume:
 1579              	.LFB95:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 1580              		.loc 1 2281 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 16
 1583              		@ frame_needed = 0, uses_anonymous_args = 0
 1584              	.LVL202:
 1585 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1586              	.LCFI21:
 1587              		.cfi_def_cfa_offset 20
 1588              		.cfi_offset 4, -20
 1589              		.cfi_offset 5, -16
 1590              		.cfi_offset 6, -12
 1591              		.cfi_offset 7, -8
 1592              		.cfi_offset 14, -4
 1593 0002 85B0     		sub	sp, sp, #20
 1594              	.LCFI22:
 1595              		.cfi_def_cfa_offset 40
 1596 0004 0646     		mov	r6, r0
 1597 0006 1746     		mov	r7, r2
2292:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1598              		.loc 1 2292 0
 1599 0008 0023     		movs	r3, #0
 1600 000a 0360     		str	r3, [r0]
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1601              		.loc 1 2293 0
 1602 000c 0846     		mov	r0, r1
 1603              	.LVL203:
 1604 000e FFF7FEFF 		bl	get_ldnumber
 1605              	.LVL204:
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1606              		.loc 1 2294 0
 1607 0012 051E     		subs	r5, r0, #0
 1608 0014 C0F28581 		blt	.L180
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1609              		.loc 1 2297 0
 1610 0018 CE4B     		ldr	r3, .L205
 1611 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1612              	.LVL205:
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1613              		.loc 1 2298 0
 1614 001e 002C     		cmp	r4, #0
 1615 0020 00F08181 		beq	.L181
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1616              		.loc 1 2301 0
 1617 0024 3460     		str	r4, [r6]
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1618              		.loc 1 2303 0
 1619 0026 94F80032 		ldrb	r3, [r4, #512]	@ zero_extendqisi2
 1620 002a 7BB1     		cbz	r3, .L163
ARM GAS  /tmp/cclwbenu.s 			page 73


2304:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1621              		.loc 1 2304 0
 1622 002c 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 1623              	.LVL206:
 1624 0030 FFF7FEFF 		bl	disk_status
 1625              	.LVL207:
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
 1626              		.loc 1 2305 0
 1627 0034 10F0010F 		tst	r0, #1
 1628 0038 08D1     		bne	.L163
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1629              		.loc 1 2306 0
 1630 003a 002F     		cmp	r7, #0
 1631 003c 00F07581 		beq	.L182
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1632              		.loc 1 2306 0 is_stmt 0 discriminator 1
 1633 0040 10F0040F 		tst	r0, #4
 1634 0044 40F07381 		bne	.L183
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1635              		.loc 1 2308 0 is_stmt 1
 1636 0048 0020     		movs	r0, #0
 1637              	.LVL208:
 1638 004a 9AE1     		b	.L162
 1639              	.L163:
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1640              		.loc 1 2315 0
 1641 004c 0023     		movs	r3, #0
 1642 004e 84F80032 		strb	r3, [r4, #512]
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1643              		.loc 1 2316 0
 1644 0052 E8B2     		uxtb	r0, r5
 1645 0054 84F80102 		strb	r0, [r4, #513]
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
 1646              		.loc 1 2317 0
 1647 0058 FFF7FEFF 		bl	disk_initialize
 1648              	.LVL209:
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1649              		.loc 1 2318 0
 1650 005c 10F0010F 		tst	r0, #1
 1651 0060 40F06781 		bne	.L184
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1652              		.loc 1 2320 0
 1653 0064 1FB1     		cbz	r7, .L164
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1654              		.loc 1 2320 0 is_stmt 0 discriminator 1
 1655 0066 10F0040F 		tst	r0, #4
 1656 006a 40F06481 		bne	.L185
 1657              	.L164:
 1658              	.LVL210:
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
 1659              		.loc 1 2328 0 is_stmt 1
 1660 006e 2046     		mov	r0, r4
 1661              	.LVL211:
 1662 0070 0021     		movs	r1, #0
 1663 0072 FFF7FEFF 		bl	check_fs
 1664              	.LVL212:
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
ARM GAS  /tmp/cclwbenu.s 			page 74


 1665              		.loc 1 2329 0
 1666 0076 0128     		cmp	r0, #1
 1667 0078 1BD0     		beq	.L186
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
 1668              		.loc 1 2327 0
 1669 007a 0026     		movs	r6, #0
 1670              	.LVL213:
 1671 007c 2DE0     		b	.L166
 1672              	.LVL214:
 1673              	.L168:
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
 1674              		.loc 1 2331 0
 1675 007e 04EB0213 		add	r3, r4, r2, lsl #4
 1676              	.LVL215:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1677              		.loc 1 2332 0
 1678 0082 93F8C211 		ldrb	r1, [r3, #450]	@ zero_extendqisi2
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
 1679              		.loc 1 2331 0
 1680 0086 03F5DF73 		add	r3, r3, #446
 1681              	.LVL216:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1682              		.loc 1 2332 0
 1683 008a 51B1     		cbz	r1, .L187
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1684              		.loc 1 2332 0 is_stmt 0 discriminator 1
 1685 008c D87A     		ldrb	r0, [r3, #11]	@ zero_extendqisi2
 1686 008e 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 1687 0090 0904     		lsls	r1, r1, #16
 1688 0092 41EA0061 		orr	r1, r1, r0, lsl #24
 1689 0096 587A     		ldrb	r0, [r3, #9]	@ zero_extendqisi2
 1690 0098 41EA0021 		orr	r1, r1, r0, lsl #8
 1691 009c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1692              	.LVL217:
 1693 009e 1943     		orrs	r1, r1, r3
 1694 00a0 00E0     		b	.L167
 1695              	.LVL218:
 1696              	.L187:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1697              		.loc 1 2332 0
 1698 00a2 0021     		movs	r1, #0
 1699              	.LVL219:
 1700              	.L167:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1701              		.loc 1 2332 0 discriminator 4
 1702 00a4 04AB     		add	r3, sp, #16
 1703 00a6 03EB8203 		add	r3, r3, r2, lsl #2
 1704 00aa 43F8101C 		str	r1, [r3, #-16]
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
 1705              		.loc 1 2330 0 is_stmt 1 discriminator 4
 1706 00ae 0132     		adds	r2, r2, #1
 1707              	.LVL220:
 1708 00b0 00E0     		b	.L165
 1709              	.LVL221:
 1710              	.L186:
 1711 00b2 0022     		movs	r2, #0
 1712              	.LVL222:
ARM GAS  /tmp/cclwbenu.s 			page 75


 1713              	.L165:
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
 1714              		.loc 1 2330 0 is_stmt 0 discriminator 2
 1715 00b4 032A     		cmp	r2, #3
 1716 00b6 E2D9     		bls	.L168
 1717 00b8 0025     		movs	r5, #0
 1718              	.LVL223:
 1719              	.L170:
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
 1720              		.loc 1 2337 0 is_stmt 1
 1721 00ba 04AB     		add	r3, sp, #16
 1722 00bc 03EB8503 		add	r3, r3, r5, lsl #2
 1723 00c0 53F8106C 		ldr	r6, [r3, #-16]
 1724              	.LVL224:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 1725              		.loc 1 2338 0
 1726 00c4 26B1     		cbz	r6, .L188
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 1727              		.loc 1 2338 0 is_stmt 0 discriminator 1
 1728 00c6 2046     		mov	r0, r4
 1729 00c8 3146     		mov	r1, r6
 1730 00ca FFF7FEFF 		bl	check_fs
 1731              	.LVL225:
 1732 00ce 00E0     		b	.L169
 1733              	.L188:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 1734              		.loc 1 2338 0
 1735 00d0 0220     		movs	r0, #2
 1736              	.L169:
 1737              	.LVL226:
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1738              		.loc 1 2339 0 is_stmt 1 discriminator 4
 1739 00d2 10B1     		cbz	r0, .L166
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1740              		.loc 1 2339 0 is_stmt 0 discriminator 1
 1741 00d4 0135     		adds	r5, r5, #1
 1742              	.LVL227:
 1743 00d6 032D     		cmp	r5, #3
 1744 00d8 EFD9     		bls	.L170
 1745              	.LVL228:
 1746              	.L166:
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 1747              		.loc 1 2341 0 is_stmt 1
 1748 00da 0328     		cmp	r0, #3
 1749 00dc 00F02D81 		beq	.L189
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1750              		.loc 1 2342 0
 1751 00e0 0028     		cmp	r0, #0
 1752 00e2 40F02C81 		bne	.L190
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1753              		.loc 1 2346 0
 1754 00e6 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 1755 00e8 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 1756 00ea 43EA0223 		orr	r3, r3, r2, lsl #8
 1757 00ee 1BB2     		sxth	r3, r3
 1758 00f0 B3F5007F 		cmp	r3, #512
 1759 00f4 40F02581 		bne	.L191
ARM GAS  /tmp/cclwbenu.s 			page 76


2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fasize) fasize = LD_DWORD(fs->win.d8 + BPB_FATSz32);
 1760              		.loc 1 2349 0
 1761 00f8 E17D     		ldrb	r1, [r4, #23]	@ zero_extendqisi2
 1762 00fa A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1763              	.LVL229:
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
 1764              		.loc 1 2350 0
 1765 00fc 53EA0121 		orrs	r1, r3, r1, lsl #8
 1766              	.LVL230:
 1767 0100 0DD1     		bne	.L171
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
 1768              		.loc 1 2350 0 is_stmt 0 discriminator 1
 1769 0102 94F82720 		ldrb	r2, [r4, #39]	@ zero_extendqisi2
 1770 0106 94F82630 		ldrb	r3, [r4, #38]	@ zero_extendqisi2
 1771 010a 1B04     		lsls	r3, r3, #16
 1772 010c 43EA0263 		orr	r3, r3, r2, lsl #24
 1773 0110 94F82510 		ldrb	r1, [r4, #37]	@ zero_extendqisi2
 1774              	.LVL231:
 1775 0114 43EA0123 		orr	r3, r3, r1, lsl #8
 1776 0118 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 1777 011c 1943     		orrs	r1, r1, r3
 1778              	.LVL232:
 1779              	.L171:
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1780              		.loc 1 2351 0 is_stmt 1
 1781 011e C4F81812 		str	r1, [r4, #536]
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
 1782              		.loc 1 2353 0
 1783 0122 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 1784 0124 84F80322 		strb	r2, [r4, #515]
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1785              		.loc 1 2354 0
 1786 0128 531E     		subs	r3, r2, #1
 1787 012a DBB2     		uxtb	r3, r3
 1788 012c 012B     		cmp	r3, #1
 1789 012e 00F20A81 		bhi	.L192
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1790              		.loc 1 2356 0
 1791 0132 01FB02F7 		mul	r7, r1, r2
 1792              	.LVL233:
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
 1793              		.loc 1 2358 0
 1794 0136 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 1795 0138 84F80232 		strb	r3, [r4, #514]
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1796              		.loc 1 2359 0
 1797 013c 002B     		cmp	r3, #0
 1798 013e 00F00481 		beq	.L193
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1799              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1800 0142 5A1E     		subs	r2, r3, #1
 1801 0144 1342     		tst	r3, r2
 1802 0146 40F00281 		bne	.L194
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIRE))				/* (Must be sector aligned) */
 1803              		.loc 1 2362 0 is_stmt 1
 1804 014a 94F812E0 		ldrb	lr, [r4, #18]	@ zero_extendqisi2
 1805 014e 627C     		ldrb	r2, [r4, #17]	@ zero_extendqisi2
ARM GAS  /tmp/cclwbenu.s 			page 77


 1806 0150 42EA0E2E 		orr	lr, r2, lr, lsl #8
 1807 0154 A4F808E2 		strh	lr, [r4, #520]	@ movhi
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1808              		.loc 1 2363 0
 1809 0158 1EF00F0F 		tst	lr, #15
 1810 015c 40F00481 		bne	.L195
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!tsect) tsect = LD_DWORD(fs->win.d8 + BPB_TotSec32);
 1811              		.loc 1 2366 0
 1812 0160 207D     		ldrb	r0, [r4, #20]	@ zero_extendqisi2
 1813              	.LVL234:
 1814 0162 E27C     		ldrb	r2, [r4, #19]	@ zero_extendqisi2
 1815              	.LVL235:
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1816              		.loc 1 2367 0
 1817 0164 52EA0022 		orrs	r2, r2, r0, lsl #8
 1818              	.LVL236:
 1819 0168 0DD1     		bne	.L172
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1820              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1821 016a 94F82300 		ldrb	r0, [r4, #35]	@ zero_extendqisi2
 1822 016e 94F82220 		ldrb	r2, [r4, #34]	@ zero_extendqisi2
 1823              	.LVL237:
 1824 0172 1204     		lsls	r2, r2, #16
 1825 0174 42EA0062 		orr	r2, r2, r0, lsl #24
 1826 0178 94F82100 		ldrb	r0, [r4, #33]	@ zero_extendqisi2
 1827 017c 42EA0020 		orr	r0, r2, r0, lsl #8
 1828 0180 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 1829 0184 0243     		orrs	r2, r2, r0
 1830              	.LVL238:
 1831              	.L172:
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
 1832              		.loc 1 2369 0 is_stmt 1
 1833 0186 E57B     		ldrb	r5, [r4, #15]	@ zero_extendqisi2
 1834 0188 A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 1835              	.LVL239:
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1836              		.loc 1 2370 0
 1837 018a 50EA0520 		orrs	r0, r0, r5, lsl #8
 1838              	.LVL240:
 1839 018e 00F0ED80 		beq	.L196
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1840              		.loc 1 2373 0
 1841 0192 00EB070C 		add	ip, r0, r7
 1842 0196 0CEB1E1C 		add	ip, ip, lr, lsr #4
 1843              	.LVL241:
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 1844              		.loc 1 2374 0
 1845 019a 6245     		cmp	r2, ip
 1846 019c C0F0E880 		bcc	.L197
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
 1847              		.loc 1 2375 0
 1848 01a0 CCEB0202 		rsb	r2, ip, r2
 1849              	.LVL242:
 1850 01a4 B2FBF3F3 		udiv	r3, r2, r3
 1851              	.LVL243:
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 1852              		.loc 1 2376 0
ARM GAS  /tmp/cclwbenu.s 			page 78


 1853 01a8 002B     		cmp	r3, #0
 1854 01aa 00F0E380 		beq	.L198
 1855              	.LVL244:
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 1856              		.loc 1 2378 0
 1857 01ae 40F6F572 		movw	r2, #4085
 1858 01b2 9342     		cmp	r3, r2
 1859 01b4 01D8     		bhi	.L199
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
 1860              		.loc 1 2377 0
 1861 01b6 0125     		movs	r5, #1
 1862              	.LVL245:
 1863 01b8 00E0     		b	.L173
 1864              	.LVL246:
 1865              	.L199:
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 1866              		.loc 1 2378 0
 1867 01ba 0225     		movs	r5, #2
 1868              	.LVL247:
 1869              	.L173:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1870              		.loc 1 2379 0
 1871 01bc 4FF6F572 		movw	r2, #65525
 1872 01c0 9342     		cmp	r3, r2
 1873 01c2 00D9     		bls	.L174
 1874 01c4 0325     		movs	r5, #3
 1875              	.LVL248:
 1876              	.L174:
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->volbase = bsect;								/* Volume start sector */
 1877              		.loc 1 2382 0
 1878 01c6 0233     		adds	r3, r3, #2
 1879              	.LVL249:
 1880 01c8 C4F81432 		str	r3, [r4, #532]
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 1881              		.loc 1 2383 0
 1882 01cc C4F81C62 		str	r6, [r4, #540]
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->database = bsect + sysect;						/* Data start sector */
 1883              		.loc 1 2384 0
 1884 01d0 3218     		adds	r2, r6, r0
 1885 01d2 C4F82022 		str	r2, [r4, #544]
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
 1886              		.loc 1 2385 0
 1887 01d6 06EB0C00 		add	r0, r6, ip
 1888 01da C4F82802 		str	r0, [r4, #552]
2386:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
 1889              		.loc 1 2386 0
 1890 01de 032D     		cmp	r5, #3
 1891 01e0 15D1     		bne	.L175
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
 1892              		.loc 1 2387 0
 1893 01e2 BEF1000F 		cmp	lr, #0
 1894 01e6 40F0C780 		bne	.L201
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
 1895              		.loc 1 2388 0
 1896 01ea 94F82F00 		ldrb	r0, [r4, #47]	@ zero_extendqisi2
 1897 01ee 94F82E20 		ldrb	r2, [r4, #46]	@ zero_extendqisi2
 1898 01f2 1204     		lsls	r2, r2, #16
ARM GAS  /tmp/cclwbenu.s 			page 79


 1899 01f4 42EA0062 		orr	r2, r2, r0, lsl #24
 1900 01f8 94F82D00 		ldrb	r0, [r4, #45]	@ zero_extendqisi2
 1901 01fc 42EA0022 		orr	r2, r2, r0, lsl #8
 1902 0200 94F82C00 		ldrb	r0, [r4, #44]	@ zero_extendqisi2
 1903 0204 0243     		orrs	r2, r2, r0
 1904 0206 C4F82422 		str	r2, [r4, #548]
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 1905              		.loc 1 2389 0
 1906 020a 9B00     		lsls	r3, r3, #2
 1907              	.LVL250:
 1908 020c 10E0     		b	.L176
 1909              	.LVL251:
 1910              	.L175:
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 1911              		.loc 1 2391 0
 1912 020e BEF1000F 		cmp	lr, #0
 1913 0212 00F0B380 		beq	.L202
2392:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
 1914              		.loc 1 2392 0
 1915 0216 3A44     		add	r2, r2, r7
 1916 0218 C4F82422 		str	r2, [r4, #548]
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1917              		.loc 1 2394 0
 1918 021c 022D     		cmp	r5, #2
 1919 021e 01D1     		bne	.L177
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1920              		.loc 1 2394 0 is_stmt 0 discriminator 1
 1921 0220 5B00     		lsls	r3, r3, #1
 1922              	.LVL252:
 1923 0222 05E0     		b	.L176
 1924              	.LVL253:
 1925              	.L177:
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1926              		.loc 1 2394 0 discriminator 2
 1927 0224 03EB4302 		add	r2, r3, r3, lsl #1
 1928 0228 03F00103 		and	r3, r3, #1
 1929              	.LVL254:
 1930 022c 03EB5203 		add	r3, r3, r2, lsr #1
 1931              	.LVL255:
 1932              	.L176:
2396:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1933              		.loc 1 2396 0 is_stmt 1
 1934 0230 03F2FF13 		addw	r3, r3, #511
 1935              	.LVL256:
 1936 0234 B1EB532F 		cmp	r1, r3, lsr #9
 1937 0238 C0F0A280 		bcc	.L203
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1938              		.loc 1 2401 0
 1939 023c 4FF0FF33 		mov	r3, #-1
 1940              	.LVL257:
 1941 0240 C4F81032 		str	r3, [r4, #528]
 1942 0244 C4F80C32 		str	r3, [r4, #524]
2404:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 1943              		.loc 1 2404 0
 1944 0248 8023     		movs	r3, #128
 1945 024a 84F80532 		strb	r3, [r4, #517]
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& LD_WORD(fs->win.d8 + BPB_FSInfo) == 1
ARM GAS  /tmp/cclwbenu.s 			page 80


 1946              		.loc 1 2406 0
 1947 024e 032D     		cmp	r5, #3
 1948 0250 59D1     		bne	.L179
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& move_window(fs, bsect + 1) == FR_OK)
 1949              		.loc 1 2407 0
 1950 0252 94F83120 		ldrb	r2, [r4, #49]	@ zero_extendqisi2
 1951 0256 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1952 025a 43EA0223 		orr	r3, r3, r2, lsl #8
 1953 025e 1BB2     		sxth	r3, r3
 1954 0260 012B     		cmp	r3, #1
 1955 0262 50D1     		bne	.L179
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
 1956              		.loc 1 2408 0
 1957 0264 2046     		mov	r0, r4
 1958 0266 711C     		adds	r1, r6, #1
 1959 0268 FFF7FEFF 		bl	move_window
 1960              	.LVL258:
 1961 026c 0028     		cmp	r0, #0
 1962 026e 4AD1     		bne	.L179
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 1963              		.loc 1 2410 0
 1964 0270 0023     		movs	r3, #0
 1965 0272 84F80532 		strb	r3, [r4, #517]
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_LeadSig) == 0x41615252
 1966              		.loc 1 2411 0
 1967 0276 94F8FF21 		ldrb	r2, [r4, #511]	@ zero_extendqisi2
 1968 027a 94F8FE31 		ldrb	r3, [r4, #510]	@ zero_extendqisi2
 1969 027e 43EA0223 		orr	r3, r3, r2, lsl #8
 1970 0282 1BB2     		sxth	r3, r3
 1971 0284 344A     		ldr	r2, .L205+4
 1972 0286 9342     		cmp	r3, r2
 1973 0288 3DD1     		bne	.L179
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_StrucSig) == 0x61417272)
 1974              		.loc 1 2412 0
 1975 028a E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 1976 028c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1977 028e 1B04     		lsls	r3, r3, #16
 1978 0290 43EA0263 		orr	r3, r3, r2, lsl #24
 1979 0294 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 1980 0296 43EA0223 		orr	r3, r3, r2, lsl #8
 1981 029a 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1982 029c 1343     		orrs	r3, r3, r2
 1983 029e 2F4A     		ldr	r2, .L205+8
 1984 02a0 9342     		cmp	r3, r2
 1985 02a2 30D1     		bne	.L179
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 1986              		.loc 1 2413 0
 1987 02a4 94F8E721 		ldrb	r2, [r4, #487]	@ zero_extendqisi2
 1988 02a8 94F8E631 		ldrb	r3, [r4, #486]	@ zero_extendqisi2
 1989 02ac 1B04     		lsls	r3, r3, #16
 1990 02ae 43EA0263 		orr	r3, r3, r2, lsl #24
 1991 02b2 94F8E521 		ldrb	r2, [r4, #485]	@ zero_extendqisi2
 1992 02b6 43EA0223 		orr	r3, r3, r2, lsl #8
 1993 02ba 94F8E421 		ldrb	r2, [r4, #484]	@ zero_extendqisi2
 1994 02be 1343     		orrs	r3, r3, r2
 1995 02c0 274A     		ldr	r2, .L205+12
 1996 02c2 9342     		cmp	r3, r2
ARM GAS  /tmp/cclwbenu.s 			page 81


 1997 02c4 1FD1     		bne	.L179
2416:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1998              		.loc 1 2416 0
 1999 02c6 94F8EB21 		ldrb	r2, [r4, #491]	@ zero_extendqisi2
 2000 02ca 94F8EA31 		ldrb	r3, [r4, #490]	@ zero_extendqisi2
 2001 02ce 1B04     		lsls	r3, r3, #16
 2002 02d0 43EA0263 		orr	r3, r3, r2, lsl #24
 2003 02d4 94F8E921 		ldrb	r2, [r4, #489]	@ zero_extendqisi2
 2004 02d8 43EA0223 		orr	r3, r3, r2, lsl #8
 2005 02dc 94F8E821 		ldrb	r2, [r4, #488]	@ zero_extendqisi2
 2006 02e0 1343     		orrs	r3, r3, r2
 2007 02e2 C4F81032 		str	r3, [r4, #528]
2419:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2008              		.loc 1 2419 0
 2009 02e6 94F8EF21 		ldrb	r2, [r4, #495]	@ zero_extendqisi2
 2010 02ea 94F8EE31 		ldrb	r3, [r4, #494]	@ zero_extendqisi2
 2011 02ee 1B04     		lsls	r3, r3, #16
 2012 02f0 43EA0263 		orr	r3, r3, r2, lsl #24
 2013 02f4 94F8ED21 		ldrb	r2, [r4, #493]	@ zero_extendqisi2
 2014 02f8 43EA0223 		orr	r3, r3, r2, lsl #8
 2015 02fc 94F8EC21 		ldrb	r2, [r4, #492]	@ zero_extendqisi2
 2016 0300 1343     		orrs	r3, r3, r2
 2017 0302 C4F80C32 		str	r3, [r4, #524]
 2018              	.L179:
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;	/* File system mount ID */
 2019              		.loc 1 2425 0
 2020 0306 84F80052 		strb	r5, [r4, #512]
2426:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 2021              		.loc 1 2426 0
 2022 030a 164A     		ldr	r2, .L205+16
 2023 030c 1388     		ldrh	r3, [r2]
 2024 030e 0133     		adds	r3, r3, #1
 2025 0310 9BB2     		uxth	r3, r3
 2026 0312 1380     		strh	r3, [r2]	@ movhi
 2027 0314 A4F80632 		strh	r3, [r4, #518]	@ movhi
2431:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2028              		.loc 1 2431 0
 2029 0318 2046     		mov	r0, r4
 2030 031a FFF7FEFF 		bl	clear_lock
 2031              	.LVL259:
2434:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2032              		.loc 1 2434 0
 2033 031e 0020     		movs	r0, #0
 2034 0320 2FE0     		b	.L162
 2035              	.LVL260:
 2036              	.L180:
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2037              		.loc 1 2294 0
 2038 0322 0B20     		movs	r0, #11
 2039              	.LVL261:
 2040 0324 2DE0     		b	.L162
 2041              	.LVL262:
 2042              	.L181:
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2043              		.loc 1 2298 0
 2044 0326 0C20     		movs	r0, #12
 2045              	.LVL263:
ARM GAS  /tmp/cclwbenu.s 			page 82


 2046 0328 2BE0     		b	.L162
 2047              	.LVL264:
 2048              	.L182:
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2049              		.loc 1 2308 0
 2050 032a 0020     		movs	r0, #0
 2051              	.LVL265:
 2052 032c 29E0     		b	.L162
 2053              	.LVL266:
 2054              	.L183:
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
 2055              		.loc 1 2307 0
 2056 032e 0A20     		movs	r0, #10
 2057              	.LVL267:
 2058 0330 27E0     		b	.L162
 2059              	.LVL268:
 2060              	.L184:
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
 2061              		.loc 1 2319 0
 2062 0332 0320     		movs	r0, #3
 2063              	.LVL269:
 2064 0334 25E0     		b	.L162
 2065              	.LVL270:
 2066              	.L185:
2321:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS						/* Get sector size (multiple sector size cfg only) */
 2067              		.loc 1 2321 0
 2068 0336 0A20     		movs	r0, #10
 2069              	.LVL271:
 2070 0338 23E0     		b	.L162
 2071              	.LVL272:
 2072              	.L189:
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 2073              		.loc 1 2341 0
 2074 033a 0120     		movs	r0, #1
 2075              	.LVL273:
 2076 033c 21E0     		b	.L162
 2077              	.LVL274:
 2078              	.L190:
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2079              		.loc 1 2342 0
 2080 033e 0D20     		movs	r0, #13
 2081              	.LVL275:
 2082 0340 1FE0     		b	.L162
 2083              	.LVL276:
 2084              	.L191:
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2085              		.loc 1 2347 0
 2086 0342 0D20     		movs	r0, #13
 2087              	.LVL277:
 2088 0344 1DE0     		b	.L162
 2089              	.LVL278:
 2090              	.L192:
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
 2091              		.loc 1 2355 0
 2092 0346 0D20     		movs	r0, #13
 2093              	.LVL279:
 2094 0348 1BE0     		b	.L162
ARM GAS  /tmp/cclwbenu.s 			page 83


 2095              	.LVL280:
 2096              	.L193:
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2097              		.loc 1 2360 0
 2098 034a 0D20     		movs	r0, #13
 2099              	.LVL281:
 2100 034c 19E0     		b	.L162
 2101              	.LVL282:
 2102              	.L194:
 2103 034e 0D20     		movs	r0, #13
 2104              	.LVL283:
 2105 0350 17E0     		b	.L162
 2106              	.L206:
 2107 0352 00BF     		.align	2
 2108              	.L205:
 2109 0354 00000000 		.word	.LANCHOR2
 2110 0358 55AAFFFF 		.word	-21931
 2111 035c 52526141 		.word	1096897106
 2112 0360 72724161 		.word	1631679090
 2113 0364 00000000 		.word	.LANCHOR3
 2114              	.LVL284:
 2115              	.L195:
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2116              		.loc 1 2364 0
 2117 0368 0D20     		movs	r0, #13
 2118              	.LVL285:
 2119 036a 0AE0     		b	.L162
 2120              	.LVL286:
 2121              	.L196:
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2122              		.loc 1 2370 0
 2123 036c 0D20     		movs	r0, #13
 2124 036e 08E0     		b	.L162
 2125              	.LVL287:
 2126              	.L197:
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 2127              		.loc 1 2374 0
 2128 0370 0D20     		movs	r0, #13
 2129 0372 06E0     		b	.L162
 2130              	.LVL288:
 2131              	.L198:
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 2132              		.loc 1 2376 0
 2133 0374 0D20     		movs	r0, #13
 2134 0376 04E0     		b	.L162
 2135              	.LVL289:
 2136              	.L201:
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
 2137              		.loc 1 2387 0
 2138 0378 0D20     		movs	r0, #13
 2139 037a 02E0     		b	.L162
 2140              	.L202:
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 2141              		.loc 1 2391 0
 2142 037c 0D20     		movs	r0, #13
 2143 037e 00E0     		b	.L162
 2144              	.LVL290:
ARM GAS  /tmp/cclwbenu.s 			page 84


 2145              	.L203:
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2146              		.loc 1 2397 0
 2147 0380 0D20     		movs	r0, #13
 2148              	.LVL291:
 2149              	.L162:
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2150              		.loc 1 2435 0
 2151 0382 05B0     		add	sp, sp, #20
 2152              	.LCFI23:
 2153              		.cfi_def_cfa_offset 20
 2154              		@ sp needed
 2155 0384 F0BD     		pop	{r4, r5, r6, r7, pc}
 2156              		.cfi_endproc
 2157              	.LFE95:
 2159 0386 00BF     		.section	.text.sync_fs,"ax",%progbits
 2160              		.align	2
 2161              		.thumb
 2162              		.thumb_func
 2164              	sync_fs:
 2165              	.LFB74:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 2166              		.loc 1 836 0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 0, uses_anonymous_args = 0
 2170              	.LVL292:
 2171 0000 38B5     		push	{r3, r4, r5, lr}
 2172              	.LCFI24:
 2173              		.cfi_def_cfa_offset 16
 2174              		.cfi_offset 3, -16
 2175              		.cfi_offset 4, -12
 2176              		.cfi_offset 5, -8
 2177              		.cfi_offset 14, -4
 2178 0002 0446     		mov	r4, r0
 840:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 2179              		.loc 1 840 0
 2180 0004 FFF7FEFF 		bl	sync_window
 2181              	.LVL293:
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSINFO sector if needed */
 2182              		.loc 1 841 0
 2183 0008 0546     		mov	r5, r0
 2184 000a 0028     		cmp	r0, #0
 2185 000c 57D1     		bne	.L208
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 2186              		.loc 1 843 0
 2187 000e 94F80032 		ldrb	r3, [r4, #512]	@ zero_extendqisi2
 2188 0012 032B     		cmp	r3, #3
 2189 0014 4BD1     		bne	.L209
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 2190              		.loc 1 843 0 is_stmt 0 discriminator 1
 2191 0016 94F80532 		ldrb	r3, [r4, #517]	@ zero_extendqisi2
 2192 001a 012B     		cmp	r3, #1
 2193 001c 47D1     		bne	.L209
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);
 2194              		.loc 1 845 0 is_stmt 1
 2195 001e 2046     		mov	r0, r4
ARM GAS  /tmp/cclwbenu.s 			page 85


 2196              	.LVL294:
 2197 0020 0021     		movs	r1, #0
 2198 0022 4FF40072 		mov	r2, #512
 2199 0026 FFF7FEFF 		bl	mem_set
 2200              	.LVL295:
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_LeadSig, 0x41615252);
 2201              		.loc 1 846 0
 2202 002a 5523     		movs	r3, #85
 2203 002c 84F8FE31 		strb	r3, [r4, #510]
 2204 0030 AA23     		movs	r3, #170
 2205 0032 84F8FF31 		strb	r3, [r4, #511]
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_StrucSig, 0x61417272);
 2206              		.loc 1 847 0
 2207 0036 5223     		movs	r3, #82
 2208 0038 2370     		strb	r3, [r4]
 2209 003a 6370     		strb	r3, [r4, #1]
 2210 003c 6123     		movs	r3, #97
 2211 003e A370     		strb	r3, [r4, #2]
 2212 0040 4122     		movs	r2, #65
 2213 0042 E270     		strb	r2, [r4, #3]
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Free_Count, fs->free_clust);
 2214              		.loc 1 848 0
 2215 0044 7221     		movs	r1, #114
 2216 0046 84F8E411 		strb	r1, [r4, #484]
 2217 004a 84F8E511 		strb	r1, [r4, #485]
 2218 004e 84F8E621 		strb	r2, [r4, #486]
 2219 0052 84F8E731 		strb	r3, [r4, #487]
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Nxt_Free, fs->last_clust);
 2220              		.loc 1 849 0
 2221 0056 D4F81032 		ldr	r3, [r4, #528]
 2222 005a 84F8E831 		strb	r3, [r4, #488]
 2223 005e C3F30722 		ubfx	r2, r3, #8, #8
 2224 0062 84F8E921 		strb	r2, [r4, #489]
 2225 0066 C3F30742 		ubfx	r2, r3, #16, #8
 2226 006a 84F8EA21 		strb	r2, [r4, #490]
 2227 006e 1B0E     		lsrs	r3, r3, #24
 2228 0070 84F8EB31 		strb	r3, [r4, #491]
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSINFO sector */
 2229              		.loc 1 850 0
 2230 0074 D4F80C32 		ldr	r3, [r4, #524]
 2231 0078 84F8EC31 		strb	r3, [r4, #492]
 2232 007c C3F30722 		ubfx	r2, r3, #8, #8
 2233 0080 84F8ED21 		strb	r2, [r4, #493]
 2234 0084 C3F30742 		ubfx	r2, r3, #16, #8
 2235 0088 84F8EE21 		strb	r2, [r4, #494]
 2236 008c 1B0E     		lsrs	r3, r3, #24
 2237 008e 84F8EF31 		strb	r3, [r4, #495]
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win.d8, fs->winsect, 1);
 2238              		.loc 1 852 0
 2239 0092 D4F81C22 		ldr	r2, [r4, #540]
 2240 0096 0132     		adds	r2, r2, #1
 2241 0098 C4F82C22 		str	r2, [r4, #556]
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 2242              		.loc 1 853 0
 2243 009c 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 2244 00a0 2146     		mov	r1, r4
 2245 00a2 0123     		movs	r3, #1
ARM GAS  /tmp/cclwbenu.s 			page 86


 2246 00a4 FFF7FEFF 		bl	disk_write
 2247              	.LVL296:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2248              		.loc 1 854 0
 2249 00a8 0023     		movs	r3, #0
 2250 00aa 84F80532 		strb	r3, [r4, #517]
 2251              	.L209:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 2252              		.loc 1 857 0
 2253 00ae 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 2254 00b2 0021     		movs	r1, #0
 2255 00b4 0A46     		mov	r2, r1
 2256 00b6 FFF7FEFF 		bl	disk_ioctl
 2257              	.LVL297:
 2258 00ba 00B1     		cbz	r0, .L208
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2259              		.loc 1 858 0
 2260 00bc 0125     		movs	r5, #1
 2261              	.L208:
 2262              	.LVL298:
 862:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2263              		.loc 1 862 0
 2264 00be 2846     		mov	r0, r5
 2265 00c0 38BD     		pop	{r3, r4, r5, pc}
 2266              		.cfi_endproc
 2267              	.LFE74:
 2269 00c2 00BF     		.section	.text.clust2sect,"ax",%progbits
 2270              		.align	2
 2271              		.global	clust2sect
 2272              		.thumb
 2273              		.thumb_func
 2275              	clust2sect:
 2276              	.LFB75:
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 2277              		.loc 1 877 0
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 0
 2280              		@ frame_needed = 0, uses_anonymous_args = 0
 2281              		@ link register save eliminated.
 2282              	.LVL299:
 878:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 2283              		.loc 1 878 0
 2284 0000 0239     		subs	r1, r1, #2
 2285              	.LVL300:
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 2286              		.loc 1 879 0
 2287 0002 D0F81432 		ldr	r3, [r0, #532]
 2288 0006 023B     		subs	r3, r3, #2
 2289 0008 8B42     		cmp	r3, r1
 2290 000a 06D9     		bls	.L214
 880:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2291              		.loc 1 880 0
 2292 000c 90F80232 		ldrb	r3, [r0, #514]	@ zero_extendqisi2
 2293 0010 D0F82802 		ldr	r0, [r0, #552]
 2294              	.LVL301:
 2295 0014 01FB0300 		mla	r0, r1, r3, r0
 2296 0018 7047     		bx	lr
ARM GAS  /tmp/cclwbenu.s 			page 87


 2297              	.LVL302:
 2298              	.L214:
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 2299              		.loc 1 879 0
 2300 001a 0020     		movs	r0, #0
 2301              	.LVL303:
 881:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2302              		.loc 1 881 0
 2303 001c 7047     		bx	lr
 2304              		.cfi_endproc
 2305              	.LFE75:
 2307 001e 00BF     		.section	.text.get_fat,"ax",%progbits
 2308              		.align	2
 2309              		.global	get_fat
 2310              		.thumb
 2311              		.thumb_func
 2313              	get_fat:
 2314              	.LFB76:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2315              		.loc 1 895 0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 0
 2318              		@ frame_needed = 0, uses_anonymous_args = 0
 2319              	.LVL304:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2320              		.loc 1 901 0
 2321 0000 0129     		cmp	r1, #1
 2322 0002 5AD9     		bls	.L222
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2323              		.loc 1 895 0 discriminator 1
 2324 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2325              	.LCFI25:
 2326              		.cfi_def_cfa_offset 24
 2327              		.cfi_offset 3, -24
 2328              		.cfi_offset 4, -20
 2329              		.cfi_offset 5, -16
 2330              		.cfi_offset 6, -12
 2331              		.cfi_offset 7, -8
 2332              		.cfi_offset 14, -4
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2333              		.loc 1 901 0 discriminator 1
 2334 0006 D0F81432 		ldr	r3, [r0, #532]
 2335 000a 8B42     		cmp	r3, r1
 2336 000c 57D9     		bls	.L223
 2337 000e 0C46     		mov	r4, r1
 2338 0010 0646     		mov	r6, r0
 2339              	.LVL305:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2340              		.loc 1 907 0
 2341 0012 90F80032 		ldrb	r3, [r0, #512]	@ zero_extendqisi2
 2342 0016 022B     		cmp	r3, #2
 2343 0018 27D0     		beq	.L217
 2344 001a 032B     		cmp	r3, #3
 2345 001c 35D0     		beq	.L218
 2346 001e 012B     		cmp	r3, #1
 2347 0020 4FD1     		bne	.L229
 2348              	.LVL306:
ARM GAS  /tmp/cclwbenu.s 			page 88


 909:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2349              		.loc 1 909 0
 2350 0022 01EB5105 		add	r5, r1, r1, lsr #1
 2351              	.LVL307:
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win.d8[bc++ % SS(fs)];
 2352              		.loc 1 910 0
 2353 0026 D0F82012 		ldr	r1, [r0, #544]
 2354              	.LVL308:
 2355 002a 01EB5521 		add	r1, r1, r5, lsr #9
 2356 002e FFF7FEFF 		bl	move_window
 2357              	.LVL309:
 2358 0032 0028     		cmp	r0, #0
 2359 0034 47D1     		bne	.L225
 911:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2360              		.loc 1 911 0
 2361 0036 6F1C     		adds	r7, r5, #1
 2362              	.LVL310:
 2363 0038 C5F30805 		ubfx	r5, r5, #0, #9
 2364 003c 755D     		ldrb	r5, [r6, r5]	@ zero_extendqisi2
 2365              	.LVL311:
 912:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win.d8[bc % SS(fs)] << 8;
 2366              		.loc 1 912 0
 2367 003e D6F82012 		ldr	r1, [r6, #544]
 2368 0042 3046     		mov	r0, r6
 2369 0044 01EB5721 		add	r1, r1, r7, lsr #9
 2370 0048 FFF7FEFF 		bl	move_window
 2371              	.LVL312:
 2372 004c 0028     		cmp	r0, #0
 2373 004e 3DD1     		bne	.L226
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 2374              		.loc 1 913 0
 2375 0050 C7F30807 		ubfx	r7, r7, #0, #9
 2376              	.LVL313:
 2377 0054 F05D     		ldrb	r0, [r6, r7]	@ zero_extendqisi2
 2378 0056 45EA0020 		orr	r0, r5, r0, lsl #8
 2379              	.LVL314:
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2380              		.loc 1 914 0
 2381 005a 14F0010F 		tst	r4, #1
 2382 005e 01D0     		beq	.L220
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2383              		.loc 1 914 0 is_stmt 0 discriminator 1
 2384 0060 0009     		lsrs	r0, r0, #4
 2385              	.LVL315:
 2386 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2387              	.LVL316:
 2388              	.L220:
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2389              		.loc 1 914 0 discriminator 2
 2390 0064 C0F30B00 		ubfx	r0, r0, #0, #12
 2391              	.LVL317:
 915:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2392              		.loc 1 915 0 is_stmt 1 discriminator 2
 2393 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2394              	.LVL318:
 2395              	.L217:
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
ARM GAS  /tmp/cclwbenu.s 			page 89


 2396              		.loc 1 918 0
 2397 006a D0F82012 		ldr	r1, [r0, #544]
 2398              	.LVL319:
 2399 006e 01EB1421 		add	r1, r1, r4, lsr #8
 2400 0072 FFF7FEFF 		bl	move_window
 2401              	.LVL320:
 2402 0076 60BB     		cbnz	r0, .L227
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_WORD(p);
 2403              		.loc 1 919 0
 2404 0078 6100     		lsls	r1, r4, #1
 2405 007a 01F4FF71 		and	r1, r1, #510
 2406 007e 7318     		adds	r3, r6, r1
 2407              	.LVL321:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2408              		.loc 1 920 0
 2409 0080 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 2410 0082 735C     		ldrb	r3, [r6, r1]	@ zero_extendqisi2
 2411              	.LVL322:
 2412 0084 43EA0020 		orr	r0, r3, r0, lsl #8
 2413              	.LVL323:
 921:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2414              		.loc 1 921 0
 2415 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2416              	.LVL324:
 2417              	.L218:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 2418              		.loc 1 924 0
 2419 008a D0F82012 		ldr	r1, [r0, #544]
 2420              	.LVL325:
 2421 008e 01EBD411 		add	r1, r1, r4, lsr #7
 2422 0092 FFF7FEFF 		bl	move_window
 2423              	.LVL326:
 2424 0096 F8B9     		cbnz	r0, .L228
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_DWORD(p) & 0x0FFFFFFF;
 2425              		.loc 1 925 0
 2426 0098 A100     		lsls	r1, r4, #2
 2427 009a 01F4FE71 		and	r1, r1, #508
 2428 009e 7218     		adds	r2, r6, r1
 2429              	.LVL327:
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2430              		.loc 1 926 0
 2431 00a0 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 2432 00a2 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 2433 00a4 1B04     		lsls	r3, r3, #16
 2434 00a6 43EA0063 		orr	r3, r3, r0, lsl #24
 2435 00aa 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 2436 00ac 43EA0020 		orr	r0, r3, r0, lsl #8
 2437 00b0 735C     		ldrb	r3, [r6, r1]	@ zero_extendqisi2
 2438 00b2 1843     		orrs	r0, r0, r3
 2439 00b4 20F07040 		bic	r0, r0, #-268435456
 2440              	.LVL328:
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2441              		.loc 1 927 0
 2442 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2443              	.LVL329:
 2444              	.L222:
 2445              	.LCFI26:
ARM GAS  /tmp/cclwbenu.s 			page 90


 2446              		.cfi_def_cfa_offset 0
 2447              		.cfi_restore 3
 2448              		.cfi_restore 4
 2449              		.cfi_restore 5
 2450              		.cfi_restore 6
 2451              		.cfi_restore 7
 2452              		.cfi_restore 14
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2453              		.loc 1 902 0
 2454 00ba 0120     		movs	r0, #1
 2455              	.LVL330:
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2456              		.loc 1 935 0
 2457 00bc 7047     		bx	lr
 2458              	.LVL331:
 2459              	.L223:
 2460              	.LCFI27:
 2461              		.cfi_def_cfa_offset 24
 2462              		.cfi_offset 3, -24
 2463              		.cfi_offset 4, -20
 2464              		.cfi_offset 5, -16
 2465              		.cfi_offset 6, -12
 2466              		.cfi_offset 7, -8
 2467              		.cfi_offset 14, -4
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2468              		.loc 1 902 0
 2469 00be 0120     		movs	r0, #1
 2470              	.LVL332:
 2471 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2472              	.LVL333:
 2473              	.L229:
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2474              		.loc 1 930 0
 2475 00c2 0120     		movs	r0, #1
 2476              	.LVL334:
 2477 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2478              	.LVL335:
 2479              	.L225:
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2480              		.loc 1 905 0
 2481 00c6 4FF0FF30 		mov	r0, #-1
 2482 00ca F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2483              	.LVL336:
 2484              	.L226:
 2485 00cc 4FF0FF30 		mov	r0, #-1
 2486 00d0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2487              	.LVL337:
 2488              	.L227:
 2489 00d2 4FF0FF30 		mov	r0, #-1
 2490 00d6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2491              	.LVL338:
 2492              	.L228:
 2493 00d8 4FF0FF30 		mov	r0, #-1
 2494              	.LVL339:
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2495              		.loc 1 935 0
 2496 00dc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/cclwbenu.s 			page 91


 2497              		.cfi_endproc
 2498              	.LFE76:
 2500 00de 00BF     		.section	.text.dir_sdi,"ax",%progbits
 2501              		.align	2
 2502              		.thumb
 2503              		.thumb_func
 2505              	dir_sdi:
 2506              	.LFB81:
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
 2507              		.loc 1 1157 0
 2508              		.cfi_startproc
 2509              		@ args = 0, pretend = 0, frame = 0
 2510              		@ frame_needed = 0, uses_anonymous_args = 0
 2511              	.LVL340:
 2512 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2513              	.LCFI28:
 2514              		.cfi_def_cfa_offset 24
 2515              		.cfi_offset 3, -24
 2516              		.cfi_offset 4, -20
 2517              		.cfi_offset 5, -16
 2518              		.cfi_offset 6, -12
 2519              		.cfi_offset 7, -8
 2520              		.cfi_offset 14, -4
 2521 0002 0546     		mov	r5, r0
 2522 0004 0E46     		mov	r6, r1
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->sclust;		/* Table start cluster (0:root) */
 2523              		.loc 1 1162 0
 2524 0006 A5F80612 		strh	r1, [r5, #518]	@ movhi
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
 2525              		.loc 1 1163 0
 2526 000a D0F80842 		ldr	r4, [r0, #520]
 2527              	.LVL341:
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2528              		.loc 1 1164 0
 2529 000e 012C     		cmp	r4, #1
 2530 0010 42D0     		beq	.L238
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2531              		.loc 1 1164 0 is_stmt 0 discriminator 1
 2532 0012 D0F80032 		ldr	r3, [r0, #512]
 2533 0016 D3F81422 		ldr	r2, [r3, #532]
 2534 001a A242     		cmp	r2, r4
 2535 001c 3ED9     		bls	.L239
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
 2536              		.loc 1 1166 0 is_stmt 1
 2537 001e 2CB9     		cbnz	r4, .L233
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
 2538              		.loc 1 1166 0 is_stmt 0 discriminator 1
 2539 0020 93F80022 		ldrb	r2, [r3, #512]	@ zero_extendqisi2
 2540 0024 032A     		cmp	r2, #3
 2541 0026 01D1     		bne	.L233
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2542              		.loc 1 1167 0 is_stmt 1
 2543 0028 D3F82442 		ldr	r4, [r3, #548]
 2544              	.LVL342:
 2545              	.L233:
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
 2546              		.loc 1 1169 0
ARM GAS  /tmp/cclwbenu.s 			page 92


 2547 002c 34B9     		cbnz	r4, .L234
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INT_ERR;
 2548              		.loc 1 1170 0
 2549 002e B3F80822 		ldrh	r2, [r3, #520]
 2550 0032 B242     		cmp	r2, r6
 2551 0034 34D9     		bls	.L240
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2552              		.loc 1 1172 0
 2553 0036 D3F82402 		ldr	r0, [r3, #548]
 2554              	.LVL343:
 2555 003a 1CE0     		b	.L235
 2556              	.LVL344:
 2557              	.L234:
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
 2558              		.loc 1 1175 0
 2559 003c 93F80272 		ldrb	r7, [r3, #514]	@ zero_extendqisi2
 2560 0040 3F01     		lsls	r7, r7, #4
 2561              	.LVL345:
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
 2562              		.loc 1 1176 0
 2563 0042 11E0     		b	.L236
 2564              	.LVL346:
 2565              	.L237:
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2566              		.loc 1 1177 0
 2567 0044 D5F80002 		ldr	r0, [r5, #512]
 2568 0048 2146     		mov	r1, r4
 2569 004a FFF7FEFF 		bl	get_fat
 2570              	.LVL347:
 2571 004e 0446     		mov	r4, r0
 2572              	.LVL348:
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
 2573              		.loc 1 1178 0
 2574 0050 B0F1FF3F 		cmp	r0, #-1
 2575 0054 26D0     		beq	.L241
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
 2576              		.loc 1 1179 0
 2577 0056 0128     		cmp	r0, #1
 2578 0058 26D9     		bls	.L242
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
 2579              		.loc 1 1179 0 is_stmt 0 discriminator 1
 2580 005a D5F80032 		ldr	r3, [r5, #512]
 2581 005e D3F81432 		ldr	r3, [r3, #532]
 2582 0062 8342     		cmp	r3, r0
 2583 0064 22D9     		bls	.L243
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2584              		.loc 1 1181 0 is_stmt 1
 2585 0066 F61B     		subs	r6, r6, r7
 2586              	.LVL349:
 2587              	.L236:
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
 2588              		.loc 1 1176 0
 2589 0068 BE42     		cmp	r6, r7
 2590 006a EBD2     		bcs	.L237
1183:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2591              		.loc 1 1183 0
 2592 006c D5F80002 		ldr	r0, [r5, #512]
ARM GAS  /tmp/cclwbenu.s 			page 93


 2593 0070 2146     		mov	r1, r4
 2594 0072 FFF7FEFF 		bl	clust2sect
 2595              	.LVL350:
 2596              	.L235:
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!sect) return FR_INT_ERR;
 2597              		.loc 1 1185 0
 2598 0076 C5F80C42 		str	r4, [r5, #524]
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
 2599              		.loc 1 1186 0
 2600 007a C8B1     		cbz	r0, .L244
1187:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (idx % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Ptr to the entry in the se
 2601              		.loc 1 1187 0
 2602 007c 00EB1610 		add	r0, r0, r6, lsr #4
 2603              	.LVL351:
 2604 0080 C5F81002 		str	r0, [r5, #528]
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2605              		.loc 1 1188 0
 2606 0084 D5F80032 		ldr	r3, [r5, #512]
 2607 0088 06F00F06 		and	r6, r6, #15
 2608              	.LVL352:
 2609 008c 03EB4616 		add	r6, r3, r6, lsl #5
 2610 0090 C5F81462 		str	r6, [r5, #532]
1190:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2611              		.loc 1 1190 0
 2612 0094 0020     		movs	r0, #0
 2613 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2614              	.LVL353:
 2615              	.L238:
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 2616              		.loc 1 1165 0
 2617 0098 0220     		movs	r0, #2
 2618              	.LVL354:
 2619 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2620              	.LVL355:
 2621              	.L239:
 2622 009c 0220     		movs	r0, #2
 2623              	.LVL356:
 2624 009e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2625              	.LVL357:
 2626              	.L240:
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = dp->fs->dirbase;
 2627              		.loc 1 1171 0
 2628 00a0 0220     		movs	r0, #2
 2629              	.LVL358:
 2630 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2631              	.LVL359:
 2632              	.L241:
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
 2633              		.loc 1 1178 0
 2634 00a4 0120     		movs	r0, #1
 2635              	.LVL360:
 2636 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2637              	.LVL361:
 2638              	.L242:
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 			idx -= ic;
 2639              		.loc 1 1180 0
 2640 00a8 0220     		movs	r0, #2
ARM GAS  /tmp/cclwbenu.s 			page 94


 2641              	.LVL362:
 2642 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2643              	.LVL363:
 2644              	.L243:
 2645 00ac 0220     		movs	r0, #2
 2646              	.LVL364:
 2647 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2648              	.LVL365:
 2649              	.L244:
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
 2650              		.loc 1 1186 0
 2651 00b0 0220     		movs	r0, #2
 2652              	.LVL366:
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2653              		.loc 1 1191 0
 2654 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2655              		.cfi_endproc
 2656              	.LFE81:
 2658              		.section	.text.dir_remove,"ax",%progbits
 2659              		.align	2
 2660              		.thumb
 2661              		.thumb_func
 2663              	dir_remove:
 2664              	.LFB89:
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 2665              		.loc 1 1729 0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL367:
 2670 0000 38B5     		push	{r3, r4, r5, lr}
 2671              	.LCFI29:
 2672              		.cfi_def_cfa_offset 16
 2673              		.cfi_offset 3, -16
 2674              		.cfi_offset 4, -12
 2675              		.cfi_offset 5, -8
 2676              		.cfi_offset 14, -4
 2677 0002 0446     		mov	r4, r0
1750:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 2678              		.loc 1 1750 0
 2679 0004 B0F80612 		ldrh	r1, [r0, #518]
 2680 0008 FFF7FEFF 		bl	dir_sdi
 2681              	.LVL368:
1751:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 2682              		.loc 1 1751 0
 2683 000c 0546     		mov	r5, r0
 2684 000e B0B9     		cbnz	r0, .L247
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 2685              		.loc 1 1752 0
 2686 0010 D4F80002 		ldr	r0, [r4, #512]
 2687              	.LVL369:
 2688 0014 D4F81012 		ldr	r1, [r4, #528]
 2689 0018 FFF7FEFF 		bl	move_window
 2690              	.LVL370:
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
 2691              		.loc 1 1753 0
 2692 001c 0546     		mov	r5, r0
ARM GAS  /tmp/cclwbenu.s 			page 95


 2693 001e 70B9     		cbnz	r0, .L247
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
 2694              		.loc 1 1754 0
 2695 0020 D4F81402 		ldr	r0, [r4, #532]
 2696              	.LVL371:
 2697 0024 0021     		movs	r1, #0
 2698 0026 2022     		movs	r2, #32
 2699 0028 FFF7FEFF 		bl	mem_set
 2700              	.LVL372:
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
 2701              		.loc 1 1755 0
 2702 002c D4F81432 		ldr	r3, [r4, #532]
 2703 0030 E522     		movs	r2, #229
 2704 0032 1A70     		strb	r2, [r3]
1756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2705              		.loc 1 1756 0
 2706 0034 D4F80032 		ldr	r3, [r4, #512]
 2707 0038 0122     		movs	r2, #1
 2708 003a 83F80422 		strb	r2, [r3, #516]
 2709              	.L247:
 2710              	.LVL373:
1762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 2711              		.loc 1 1762 0
 2712 003e 2846     		mov	r0, r5
 2713 0040 38BD     		pop	{r3, r4, r5, pc}
 2714              		.cfi_endproc
 2715              	.LFE89:
 2717 0042 00BF     		.section	.text.put_fat,"ax",%progbits
 2718              		.align	2
 2719              		.global	put_fat
 2720              		.thumb
 2721              		.thumb_func
 2723              	put_fat:
 2724              	.LFB77:
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2725              		.loc 1 951 0
 2726              		.cfi_startproc
 2727              		@ args = 0, pretend = 0, frame = 0
 2728              		@ frame_needed = 0, uses_anonymous_args = 0
 2729              	.LVL374:
 2730 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2731              	.LCFI30:
 2732              		.cfi_def_cfa_offset 24
 2733              		.cfi_offset 4, -24
 2734              		.cfi_offset 5, -20
 2735              		.cfi_offset 6, -16
 2736              		.cfi_offset 7, -12
 2737              		.cfi_offset 8, -8
 2738              		.cfi_offset 14, -4
 2739 0004 0C46     		mov	r4, r1
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 2740              		.loc 1 957 0
 2741 0006 0129     		cmp	r1, #1
 2742 0008 7BD9     		bls	.L258
 2743 000a 0546     		mov	r5, r0
 2744 000c 1646     		mov	r6, r2
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
ARM GAS  /tmp/cclwbenu.s 			page 96


 2745              		.loc 1 957 0 is_stmt 0 discriminator 1
 2746 000e D0F81432 		ldr	r3, [r0, #532]
 2747 0012 8B42     		cmp	r3, r1
 2748 0014 77D9     		bls	.L259
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2749              		.loc 1 961 0 is_stmt 1
 2750 0016 90F80032 		ldrb	r3, [r0, #512]	@ zero_extendqisi2
 2751 001a 022B     		cmp	r3, #2
 2752 001c 3FD0     		beq	.L251
 2753 001e 032B     		cmp	r3, #3
 2754 0020 51D0     		beq	.L252
 2755 0022 012B     		cmp	r3, #1
 2756 0024 71D1     		bne	.L261
 2757              	.LVL375:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2758              		.loc 1 963 0
 2759 0026 01EB5107 		add	r7, r1, r1, lsr #1
 2760              	.LVL376:
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2761              		.loc 1 964 0
 2762 002a D0F82012 		ldr	r1, [r0, #544]
 2763              	.LVL377:
 2764 002e 01EB5721 		add	r1, r1, r7, lsr #9
 2765 0032 FFF7FEFF 		bl	move_window
 2766              	.LVL378:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc++ % SS(fs)];
 2767              		.loc 1 965 0
 2768 0036 0346     		mov	r3, r0
 2769 0038 0028     		cmp	r0, #0
 2770 003a 67D1     		bne	.L250
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2771              		.loc 1 966 0
 2772 003c 07F10108 		add	r8, r7, #1
 2773              	.LVL379:
 2774 0040 C7F30807 		ubfx	r7, r7, #0, #9
 2775              	.LVL380:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2776              		.loc 1 967 0
 2777 0044 14F00104 		ands	r4, r4, #1
 2778              	.LVL381:
 2779 0048 07D0     		beq	.L254
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2780              		.loc 1 967 0 is_stmt 0 discriminator 1
 2781 004a EA5D     		ldrb	r2, [r5, r7]	@ zero_extendqisi2
 2782 004c F3B2     		uxtb	r3, r6
 2783 004e 02F00F02 		and	r2, r2, #15
 2784 0052 42EA0313 		orr	r3, r2, r3, lsl #4
 2785 0056 DBB2     		uxtb	r3, r3
 2786 0058 00E0     		b	.L255
 2787              	.L254:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2788              		.loc 1 967 0 discriminator 2
 2789 005a F3B2     		uxtb	r3, r6
 2790              	.L255:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2791              		.loc 1 967 0 discriminator 4
 2792 005c EB55     		strb	r3, [r5, r7]
ARM GAS  /tmp/cclwbenu.s 			page 97


 968:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2793              		.loc 1 968 0 is_stmt 1 discriminator 4
 2794 005e 0123     		movs	r3, #1
 2795 0060 85F80432 		strb	r3, [r5, #516]
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2796              		.loc 1 969 0 discriminator 4
 2797 0064 D5F82012 		ldr	r1, [r5, #544]
 2798 0068 2846     		mov	r0, r5
 2799              	.LVL382:
 2800 006a 01EB5821 		add	r1, r1, r8, lsr #9
 2801 006e FFF7FEFF 		bl	move_window
 2802              	.LVL383:
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc % SS(fs)];
 2803              		.loc 1 970 0 discriminator 4
 2804 0072 0346     		mov	r3, r0
 2805 0074 0028     		cmp	r0, #0
 2806 0076 49D1     		bne	.L250
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2807              		.loc 1 971 0
 2808 0078 C8F30808 		ubfx	r8, r8, #0, #9
 2809              	.LVL384:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2810              		.loc 1 972 0
 2811 007c 14B1     		cbz	r4, .L256
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2812              		.loc 1 972 0 is_stmt 0 discriminator 1
 2813 007e C6F30716 		ubfx	r6, r6, #4, #8
 2814              	.LVL385:
 2815 0082 06E0     		b	.L257
 2816              	.LVL386:
 2817              	.L256:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2818              		.loc 1 972 0 discriminator 2
 2819 0084 15F80820 		ldrb	r2, [r5, r8]	@ zero_extendqisi2
 2820 0088 22F00F02 		bic	r2, r2, #15
 2821 008c C6F30326 		ubfx	r6, r6, #8, #4
 2822              	.LVL387:
 2823 0090 1643     		orrs	r6, r6, r2
 2824              	.L257:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2825              		.loc 1 972 0 discriminator 4
 2826 0092 05F80860 		strb	r6, [r5, r8]
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2827              		.loc 1 973 0 is_stmt 1 discriminator 4
 2828 0096 0122     		movs	r2, #1
 2829 0098 85F80422 		strb	r2, [r5, #516]
 974:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2830              		.loc 1 974 0 discriminator 4
 2831 009c 36E0     		b	.L250
 2832              	.LVL388:
 2833              	.L251:
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2834              		.loc 1 977 0
 2835 009e D0F82012 		ldr	r1, [r0, #544]
 2836              	.LVL389:
 2837 00a2 01EB1421 		add	r1, r1, r4, lsr #8
 2838 00a6 FFF7FEFF 		bl	move_window
ARM GAS  /tmp/cclwbenu.s 			page 98


 2839              	.LVL390:
 978:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 2840              		.loc 1 978 0
 2841 00aa 0346     		mov	r3, r0
 2842 00ac 70BB     		cbnz	r0, .L250
 979:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(p, (WORD)val);
 2843              		.loc 1 979 0
 2844 00ae 6400     		lsls	r4, r4, #1
 2845              	.LVL391:
 2846 00b0 04F4FF74 		and	r4, r4, #510
 2847 00b4 2A19     		adds	r2, r5, r4
 2848              	.LVL392:
 980:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2849              		.loc 1 980 0
 2850 00b6 2E55     		strb	r6, [r5, r4]
 2851 00b8 C6F30726 		ubfx	r6, r6, #8, #8
 2852              	.LVL393:
 2853 00bc 5670     		strb	r6, [r2, #1]
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2854              		.loc 1 981 0
 2855 00be 0122     		movs	r2, #1
 2856              	.LVL394:
 2857 00c0 85F80422 		strb	r2, [r5, #516]
 982:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2858              		.loc 1 982 0
 2859 00c4 22E0     		b	.L250
 2860              	.LVL395:
 2861              	.L252:
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2862              		.loc 1 985 0
 2863 00c6 D0F82012 		ldr	r1, [r0, #544]
 2864              	.LVL396:
 2865 00ca 01EBD411 		add	r1, r1, r4, lsr #7
 2866 00ce FFF7FEFF 		bl	move_window
 2867              	.LVL397:
 986:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 2868              		.loc 1 986 0
 2869 00d2 0346     		mov	r3, r0
 2870 00d4 D0B9     		cbnz	r0, .L250
 987:Middlewares/Third_Party/FatFs/src/ff.c **** 			val |= LD_DWORD(p) & 0xF0000000;
 2871              		.loc 1 987 0
 2872 00d6 A400     		lsls	r4, r4, #2
 2873              	.LVL398:
 2874 00d8 04F4FE74 		and	r4, r4, #508
 2875 00dc 2919     		adds	r1, r5, r4
 2876              	.LVL399:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(p, val);
 2877              		.loc 1 988 0
 2878 00de CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 2879 00e0 1206     		lsls	r2, r2, #24
 2880 00e2 02F07042 		and	r2, r2, #-268435456
 2881 00e6 1643     		orrs	r6, r6, r2
 2882              	.LVL400:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2883              		.loc 1 989 0
 2884 00e8 2E55     		strb	r6, [r5, r4]
 2885 00ea C6F30722 		ubfx	r2, r6, #8, #8
ARM GAS  /tmp/cclwbenu.s 			page 99


 2886 00ee 4A70     		strb	r2, [r1, #1]
 2887 00f0 C6F30742 		ubfx	r2, r6, #16, #8
 2888 00f4 8A70     		strb	r2, [r1, #2]
 2889 00f6 360E     		lsrs	r6, r6, #24
 2890              	.LVL401:
 2891 00f8 CE70     		strb	r6, [r1, #3]
 2892              	.LVL402:
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2893              		.loc 1 990 0
 2894 00fa 0122     		movs	r2, #1
 2895 00fc 85F80422 		strb	r2, [r5, #516]
 991:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2896              		.loc 1 991 0
 2897 0100 04E0     		b	.L250
 2898              	.LVL403:
 2899              	.L258:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2900              		.loc 1 958 0
 2901 0102 0223     		movs	r3, #2
 2902 0104 02E0     		b	.L250
 2903              	.L259:
 2904 0106 0223     		movs	r3, #2
 2905 0108 00E0     		b	.L250
 2906              	.L261:
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2907              		.loc 1 994 0
 2908 010a 0223     		movs	r3, #2
 2909              	.LVL404:
 2910              	.L250:
 999:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 2911              		.loc 1 999 0
 2912 010c 1846     		mov	r0, r3
 2913 010e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2914              		.cfi_endproc
 2915              	.LFE77:
 2917 0112 00BF     		.section	.text.create_chain,"ax",%progbits
 2918              		.align	2
 2919              		.thumb
 2920              		.thumb_func
 2922              	create_chain:
 2923              	.LFB79:
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 2924              		.loc 1 1067 0
 2925              		.cfi_startproc
 2926              		@ args = 0, pretend = 0, frame = 0
 2927              		@ frame_needed = 0, uses_anonymous_args = 0
 2928              	.LVL405:
 2929 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2930              	.LCFI31:
 2931              		.cfi_def_cfa_offset 24
 2932              		.cfi_offset 3, -24
 2933              		.cfi_offset 4, -20
 2934              		.cfi_offset 5, -16
 2935              		.cfi_offset 6, -12
 2936              		.cfi_offset 7, -8
 2937              		.cfi_offset 14, -4
 2938 0002 0546     		mov	r5, r0
ARM GAS  /tmp/cclwbenu.s 			page 100


1072:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clust;			/* Get suggested start point */
 2939              		.loc 1 1072 0
 2940 0004 0F46     		mov	r7, r1
 2941 0006 39B9     		cbnz	r1, .L264
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 2942              		.loc 1 1073 0
 2943 0008 D0F80C62 		ldr	r6, [r0, #524]
 2944              	.LVL406:
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2945              		.loc 1 1074 0
 2946 000c 8EB1     		cbz	r6, .L276
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2947              		.loc 1 1074 0 is_stmt 0 discriminator 2
 2948 000e D0F81432 		ldr	r3, [r0, #532]
 2949 0012 B342     		cmp	r3, r6
 2950 0014 0FD9     		bls	.L277
 2951 0016 0FE0     		b	.L265
 2952              	.LVL407:
 2953              	.L264:
1077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;			/* Invalid value */
 2954              		.loc 1 1077 0 is_stmt 1
 2955 0018 FFF7FEFF 		bl	get_fat
 2956              	.LVL408:
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2957              		.loc 1 1078 0
 2958 001c 0128     		cmp	r0, #1
 2959 001e 4DD9     		bls	.L278
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2960              		.loc 1 1079 0
 2961 0020 B0F1FF3F 		cmp	r0, #-1
 2962 0024 4FD0     		beq	.L266
1080:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 2963              		.loc 1 1080 0
 2964 0026 D5F81432 		ldr	r3, [r5, #532]
 2965 002a 8342     		cmp	r3, r0
 2966 002c 4BD8     		bhi	.L266
1081:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2967              		.loc 1 1081 0
 2968 002e 3E46     		mov	r6, r7
 2969 0030 02E0     		b	.L265
 2970              	.LVL409:
 2971              	.L276:
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2972              		.loc 1 1074 0
 2973 0032 0126     		movs	r6, #1
 2974              	.LVL410:
 2975 0034 00E0     		b	.L265
 2976              	.LVL411:
 2977              	.L277:
 2978 0036 0126     		movs	r6, #1
 2979              	.LVL412:
 2980              	.L265:
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
 2981              		.loc 1 1084 0
 2982 0038 3446     		mov	r4, r6
 2983              	.LVL413:
 2984              	.L271:
ARM GAS  /tmp/cclwbenu.s 			page 101


1086:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Check wrap around */
 2985              		.loc 1 1086 0
 2986 003a 0134     		adds	r4, r4, #1
 2987              	.LVL414:
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = 2;
 2988              		.loc 1 1087 0
 2989 003c D5F81432 		ldr	r3, [r5, #532]
 2990 0040 A342     		cmp	r3, r4
 2991 0042 02D8     		bhi	.L267
 2992              	.LVL415:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2993              		.loc 1 1089 0
 2994 0044 012E     		cmp	r6, #1
 2995 0046 3BD9     		bls	.L281
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
 2996              		.loc 1 1088 0
 2997 0048 0224     		movs	r4, #2
 2998              	.LVL416:
 2999              	.L267:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
 3000              		.loc 1 1091 0
 3001 004a 2846     		mov	r0, r5
 3002 004c 2146     		mov	r1, r4
 3003 004e FFF7FEFF 		bl	get_fat
 3004              	.LVL417:
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 3005              		.loc 1 1092 0
 3006 0052 0346     		mov	r3, r0
 3007 0054 48B1     		cbz	r0, .L268
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
 3008              		.loc 1 1093 0
 3009 0056 B0F1FF3F 		cmp	r0, #-1
 3010 005a 01D0     		beq	.L269
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
 3011              		.loc 1 1093 0 is_stmt 0 discriminator 1
 3012 005c 0128     		cmp	r0, #1
 3013 005e 01D1     		bne	.L270
 3014              	.L269:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == scl) return 0;		/* No free cluster */
 3015              		.loc 1 1094 0 is_stmt 1
 3016 0060 1846     		mov	r0, r3
 3017              	.LVL418:
 3018 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3019              	.LVL419:
 3020              	.L270:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3021              		.loc 1 1095 0
 3022 0064 B442     		cmp	r4, r6
 3023 0066 E8D1     		bne	.L271
 3024 0068 2CE0     		b	.L282
 3025              	.L268:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && clst != 0) {
 3026              		.loc 1 1098 0
 3027 006a 2846     		mov	r0, r5
 3028              	.LVL420:
 3029 006c 2146     		mov	r1, r4
 3030 006e 6FF07042 		mvn	r2, #-268435456
ARM GAS  /tmp/cclwbenu.s 			page 102


 3031 0072 FFF7FEFF 		bl	put_fat
 3032              	.LVL421:
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 3033              		.loc 1 1099 0
 3034 0076 0346     		mov	r3, r0
 3035 0078 30B9     		cbnz	r0, .L272
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 3036              		.loc 1 1099 0 is_stmt 0 discriminator 1
 3037 007a 2FB1     		cbz	r7, .L272
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3038              		.loc 1 1100 0 is_stmt 1
 3039 007c 2846     		mov	r0, r5
 3040              	.LVL422:
 3041 007e 3946     		mov	r1, r7
 3042 0080 2246     		mov	r2, r4
 3043 0082 FFF7FEFF 		bl	put_fat
 3044              	.LVL423:
 3045 0086 0346     		mov	r3, r0
 3046              	.LVL424:
 3047              	.L272:
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clust = ncl;			/* Update FSINFO */
 3048              		.loc 1 1102 0
 3049 0088 83B9     		cbnz	r3, .L273
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust != 0xFFFFFFFF) {
 3050              		.loc 1 1103 0
 3051 008a C5F80C42 		str	r4, [r5, #524]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust--;
 3052              		.loc 1 1104 0
 3053 008e D5F81032 		ldr	r3, [r5, #528]
 3054              	.LVL425:
 3055 0092 B3F1FF3F 		cmp	r3, #-1
 3056 0096 0FD0     		beq	.L274
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3057              		.loc 1 1105 0
 3058 0098 013B     		subs	r3, r3, #1
 3059 009a C5F81032 		str	r3, [r5, #528]
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3060              		.loc 1 1106 0
 3061 009e 95F80532 		ldrb	r3, [r5, #517]	@ zero_extendqisi2
 3062 00a2 43F00103 		orr	r3, r3, #1
 3063 00a6 85F80532 		strb	r3, [r5, #517]
 3064 00aa 05E0     		b	.L274
 3065              	.LVL426:
 3066              	.L273:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3067              		.loc 1 1109 0
 3068 00ac 012B     		cmp	r3, #1
 3069 00ae 02D1     		bne	.L283
 3070 00b0 4FF0FF34 		mov	r4, #-1
 3071              	.LVL427:
 3072 00b4 00E0     		b	.L274
 3073              	.LVL428:
 3074              	.L283:
 3075 00b6 0124     		movs	r4, #1
 3076              	.LVL429:
 3077              	.L274:
1112:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/cclwbenu.s 			page 103


 3078              		.loc 1 1112 0
 3079 00b8 2046     		mov	r0, r4
 3080 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3081              	.LVL430:
 3082              	.L278:
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3083              		.loc 1 1078 0
 3084 00bc 0120     		movs	r0, #1
 3085              	.LVL431:
 3086 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3087              	.LVL432:
 3088              	.L281:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3089              		.loc 1 1089 0
 3090 00c0 0020     		movs	r0, #0
 3091 00c2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3092              	.LVL433:
 3093              	.L282:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3094              		.loc 1 1095 0
 3095 00c4 0020     		movs	r0, #0
 3096              	.LVL434:
 3097              	.L266:
1113:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 3098              		.loc 1 1113 0
 3099 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3100              		.cfi_endproc
 3101              	.LFE79:
 3103              		.section	.text.dir_next,"ax",%progbits
 3104              		.align	2
 3105              		.thumb
 3106              		.thumb_func
 3108              	dir_next:
 3109              	.LFB82:
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst;
 3110              		.loc 1 1205 0
 3111              		.cfi_startproc
 3112              		@ args = 0, pretend = 0, frame = 0
 3113              		@ frame_needed = 0, uses_anonymous_args = 0
 3114              	.LVL435:
 3115 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3116              	.LCFI32:
 3117              		.cfi_def_cfa_offset 24
 3118              		.cfi_offset 4, -24
 3119              		.cfi_offset 5, -20
 3120              		.cfi_offset 6, -16
 3121              		.cfi_offset 7, -12
 3122              		.cfi_offset 8, -8
 3123              		.cfi_offset 14, -4
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
 3124              		.loc 1 1213 0
 3125 0004 B0F80642 		ldrh	r4, [r0, #518]
 3126 0008 0134     		adds	r4, r4, #1
 3127              	.LVL436:
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
 3128              		.loc 1 1214 0
 3129 000a A3B2     		uxth	r3, r4
ARM GAS  /tmp/cclwbenu.s 			page 104


 3130 000c 002B     		cmp	r3, #0
 3131 000e 00F08180 		beq	.L292
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
 3132              		.loc 1 1214 0 is_stmt 0 discriminator 1
 3133 0012 D0F81032 		ldr	r3, [r0, #528]
 3134 0016 002B     		cmp	r3, #0
 3135 0018 7FD0     		beq	.L293
 3136 001a 0E46     		mov	r6, r1
 3137 001c 0546     		mov	r5, r0
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;					/* Next sector */
 3138              		.loc 1 1217 0 is_stmt 1
 3139 001e 14F00F07 		ands	r7, r4, #15
 3140 0022 6CD1     		bne	.L287
1218:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3141              		.loc 1 1218 0
 3142 0024 0133     		adds	r3, r3, #1
 3143 0026 C0F81032 		str	r3, [r0, #528]
1220:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
 3144              		.loc 1 1220 0
 3145 002a D0F80C12 		ldr	r1, [r0, #524]
 3146              	.LVL437:
 3147 002e 31B9     		cbnz	r1, .L288
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_NO_FILE;
 3148              		.loc 1 1221 0
 3149 0030 D0F80032 		ldr	r3, [r0, #512]
 3150 0034 B3F80832 		ldrh	r3, [r3, #520]
 3151 0038 A342     		cmp	r3, r4
 3152 003a 71D9     		bls	.L294
 3153 003c 5FE0     		b	.L287
 3154              	.L288:
1225:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
 3155              		.loc 1 1225 0
 3156 003e D0F80002 		ldr	r0, [r0, #512]
 3157              	.LVL438:
 3158 0042 90F80232 		ldrb	r3, [r0, #514]	@ zero_extendqisi2
 3159 0046 013B     		subs	r3, r3, #1
 3160 0048 13EA1413 		ands	r3, r3, r4, lsr #4
 3161 004c 57D1     		bne	.L287
1226:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;
 3162              		.loc 1 1226 0
 3163 004e FFF7FEFF 		bl	get_fat
 3164              	.LVL439:
 3165 0052 8046     		mov	r8, r0
 3166              	.LVL440:
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3167              		.loc 1 1227 0
 3168 0054 0128     		cmp	r0, #1
 3169 0056 66D9     		bls	.L295
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
 3170              		.loc 1 1228 0
 3171 0058 B0F1FF3F 		cmp	r0, #-1
 3172 005c 66D0     		beq	.L296
1229:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3173              		.loc 1 1229 0
 3174 005e D5F80002 		ldr	r0, [r5, #512]
 3175              	.LVL441:
 3176 0062 D0F81432 		ldr	r3, [r0, #532]
ARM GAS  /tmp/cclwbenu.s 			page 105


 3177 0066 4345     		cmp	r3, r8
 3178 0068 40D8     		bhi	.L289
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
 3179              		.loc 1 1231 0
 3180 006a 002E     		cmp	r6, #0
 3181 006c 61D0     		beq	.L297
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3182              		.loc 1 1232 0
 3183 006e D5F80C12 		ldr	r1, [r5, #524]
 3184 0072 FFF7FEFF 		bl	create_chain
 3185              	.LVL442:
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
 3186              		.loc 1 1233 0
 3187 0076 8046     		mov	r8, r0
 3188 0078 0028     		cmp	r0, #0
 3189 007a 5DD0     		beq	.L298
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3190              		.loc 1 1234 0
 3191 007c 0128     		cmp	r0, #1
 3192 007e 5ED0     		beq	.L299
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
 3193              		.loc 1 1235 0
 3194 0080 B0F1FF3F 		cmp	r0, #-1
 3195 0084 5ED0     		beq	.L300
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
 3196              		.loc 1 1237 0
 3197 0086 D5F80002 		ldr	r0, [r5, #512]
 3198              	.LVL443:
 3199 008a FFF7FEFF 		bl	sync_window
 3200              	.LVL444:
 3201 008e 0028     		cmp	r0, #0
 3202 0090 5BD1     		bne	.L301
1238:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
 3203              		.loc 1 1238 0
 3204 0092 D5F80002 		ldr	r0, [r5, #512]
 3205 0096 0021     		movs	r1, #0
 3206 0098 4FF40072 		mov	r2, #512
 3207 009c FFF7FEFF 		bl	mem_set
 3208              	.LVL445:
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
 3209              		.loc 1 1239 0
 3210 00a0 D5F80062 		ldr	r6, [r5, #512]
 3211              	.LVL446:
 3212 00a4 3046     		mov	r0, r6
 3213 00a6 4146     		mov	r1, r8
 3214 00a8 FFF7FEFF 		bl	clust2sect
 3215              	.LVL447:
 3216 00ac C6F82C02 		str	r0, [r6, #556]
 3217              	.LVL448:
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
 3218              		.loc 1 1240 0
 3219 00b0 0026     		movs	r6, #0
 3220 00b2 10E0     		b	.L290
 3221              	.LVL449:
 3222              	.L291:
1241:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(dp->fs)) return FR_DISK_ERR;
 3223              		.loc 1 1241 0
ARM GAS  /tmp/cclwbenu.s 			page 106


 3224 00b4 0122     		movs	r2, #1
 3225 00b6 83F80422 		strb	r2, [r3, #516]
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
 3226              		.loc 1 1242 0
 3227 00ba D5F80002 		ldr	r0, [r5, #512]
 3228 00be FFF7FEFF 		bl	sync_window
 3229              	.LVL450:
 3230 00c2 0028     		cmp	r0, #0
 3231 00c4 44D1     		bne	.L302
1243:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3232              		.loc 1 1243 0 discriminator 2
 3233 00c6 D5F80022 		ldr	r2, [r5, #512]
 3234 00ca D2F82C32 		ldr	r3, [r2, #556]
 3235 00ce 0133     		adds	r3, r3, #1
 3236 00d0 C2F82C32 		str	r3, [r2, #556]
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
 3237              		.loc 1 1240 0 discriminator 2
 3238 00d4 0136     		adds	r6, r6, #1
 3239              	.LVL451:
 3240              	.L290:
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
 3241              		.loc 1 1240 0 is_stmt 0 discriminator 1
 3242 00d6 D5F80032 		ldr	r3, [r5, #512]
 3243 00da 93F80222 		ldrb	r2, [r3, #514]	@ zero_extendqisi2
 3244 00de B242     		cmp	r2, r6
 3245 00e0 E8D8     		bhi	.L291
1245:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3246              		.loc 1 1245 0 is_stmt 1
 3247 00e2 D3F82C22 		ldr	r2, [r3, #556]
 3248 00e6 921B     		subs	r2, r2, r6
 3249 00e8 C3F82C22 		str	r2, [r3, #556]
 3250              	.LVL452:
 3251              	.L289:
1251:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(dp->fs, clst);
 3252              		.loc 1 1251 0
 3253 00ec C5F80C82 		str	r8, [r5, #524]
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3254              		.loc 1 1252 0
 3255 00f0 D5F80002 		ldr	r0, [r5, #512]
 3256 00f4 4146     		mov	r1, r8
 3257 00f6 FFF7FEFF 		bl	clust2sect
 3258              	.LVL453:
 3259 00fa C5F81002 		str	r0, [r5, #528]
 3260              	.LVL454:
 3261              	.L287:
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (i % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Current entry in the window 
 3262              		.loc 1 1257 0
 3263 00fe A5F80642 		strh	r4, [r5, #518]	@ movhi
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3264              		.loc 1 1258 0
 3265 0102 D5F80032 		ldr	r3, [r5, #512]
 3266 0106 03EB4713 		add	r3, r3, r7, lsl #5
 3267 010a C5F81432 		str	r3, [r5, #532]
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3268              		.loc 1 1260 0
 3269 010e 0020     		movs	r0, #0
 3270 0110 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/cclwbenu.s 			page 107


 3271              	.LVL455:
 3272              	.L292:
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3273              		.loc 1 1215 0
 3274 0114 0420     		movs	r0, #4
 3275              	.LVL456:
 3276 0116 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3277              	.LVL457:
 3278              	.L293:
 3279 011a 0420     		movs	r0, #4
 3280              	.LVL458:
 3281 011c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3282              	.LVL459:
 3283              	.L294:
1222:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3284              		.loc 1 1222 0
 3285 0120 0420     		movs	r0, #4
 3286              	.LVL460:
 3287 0122 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3288              	.LVL461:
 3289              	.L295:
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3290              		.loc 1 1227 0
 3291 0126 0220     		movs	r0, #2
 3292              	.LVL462:
 3293 0128 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3294              	.LVL463:
 3295              	.L296:
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
 3296              		.loc 1 1228 0
 3297 012c 0120     		movs	r0, #1
 3298              	.LVL464:
 3299 012e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3300              	.LVL465:
 3301              	.L297:
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
 3302              		.loc 1 1231 0
 3303 0132 0420     		movs	r0, #4
 3304 0134 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3305              	.LVL466:
 3306              	.L298:
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
 3307              		.loc 1 1233 0
 3308 0138 0720     		movs	r0, #7
 3309              	.LVL467:
 3310 013a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3311              	.LVL468:
 3312              	.L299:
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3313              		.loc 1 1234 0
 3314 013e 0220     		movs	r0, #2
 3315              	.LVL469:
 3316 0140 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3317              	.LVL470:
 3318              	.L300:
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
 3319              		.loc 1 1235 0
ARM GAS  /tmp/cclwbenu.s 			page 108


 3320 0144 0120     		movs	r0, #1
 3321              	.LVL471:
 3322 0146 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3323              	.LVL472:
 3324              	.L301:
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
 3325              		.loc 1 1237 0
 3326 014a 0120     		movs	r0, #1
 3327 014c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3328              	.LVL473:
 3329              	.L302:
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
 3330              		.loc 1 1242 0
 3331 0150 0120     		movs	r0, #1
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3332              		.loc 1 1261 0
 3333 0152 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3334              		.cfi_endproc
 3335              	.LFE82:
 3337 0156 00BF     		.section	.text.dir_find,"ax",%progbits
 3338              		.align	2
 3339              		.thumb
 3340              		.thumb_func
 3342              	dir_find:
 3343              	.LFB86:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3344              		.loc 1 1531 0
 3345              		.cfi_startproc
 3346              		@ args = 0, pretend = 0, frame = 0
 3347              		@ frame_needed = 0, uses_anonymous_args = 0
 3348              	.LVL474:
 3349 0000 38B5     		push	{r3, r4, r5, lr}
 3350              	.LCFI33:
 3351              		.cfi_def_cfa_offset 16
 3352              		.cfi_offset 3, -16
 3353              		.cfi_offset 4, -12
 3354              		.cfi_offset 5, -8
 3355              		.cfi_offset 14, -4
 3356 0002 0446     		mov	r4, r0
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 3357              		.loc 1 1538 0
 3358 0004 0021     		movs	r1, #0
 3359 0006 FFF7FEFF 		bl	dir_sdi
 3360              	.LVL475:
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3361              		.loc 1 1539 0
 3362 000a 00BB     		cbnz	r0, .L309
 3363              	.L308:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3364              		.loc 1 1545 0
 3365 000c D4F80002 		ldr	r0, [r4, #512]
 3366              	.LVL476:
 3367 0010 D4F81012 		ldr	r1, [r4, #528]
 3368 0014 FFF7FEFF 		bl	move_window
 3369              	.LVL477:
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
 3370              		.loc 1 1546 0
ARM GAS  /tmp/cclwbenu.s 			page 109


 3371 0018 0546     		mov	r5, r0
 3372 001a B0B9     		cbnz	r0, .L306
1547:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
 3373              		.loc 1 1547 0
 3374 001c D4F81402 		ldr	r0, [r4, #532]
 3375              	.LVL478:
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3376              		.loc 1 1548 0
 3377 0020 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3378              	.LVL479:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 3379              		.loc 1 1549 0
 3380 0022 8BB1     		cbz	r3, .L310
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3381              		.loc 1 1572 0
 3382 0024 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3383              	.LVL480:
 3384 0026 13F0080F 		tst	r3, #8
 3385 002a 05D1     		bne	.L307
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3386              		.loc 1 1572 0 is_stmt 0 discriminator 1
 3387 002c D4F81812 		ldr	r1, [r4, #536]
 3388 0030 0B22     		movs	r2, #11
 3389 0032 FFF7FEFF 		bl	mem_cmp
 3390              	.LVL481:
 3391 0036 40B1     		cbz	r0, .L306
 3392              	.L307:
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3393              		.loc 1 1575 0 is_stmt 1
 3394 0038 2046     		mov	r0, r4
 3395 003a 0021     		movs	r1, #0
 3396 003c FFF7FEFF 		bl	dir_next
 3397              	.LVL482:
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3398              		.loc 1 1576 0
 3399 0040 0546     		mov	r5, r0
 3400 0042 0028     		cmp	r0, #0
 3401 0044 E2D0     		beq	.L308
 3402 0046 00E0     		b	.L306
 3403              	.LVL483:
 3404              	.L310:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 3405              		.loc 1 1549 0
 3406 0048 0425     		movs	r5, #4
 3407              	.LVL484:
 3408              	.L306:
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3409              		.loc 1 1578 0
 3410 004a 2846     		mov	r0, r5
 3411 004c 38BD     		pop	{r3, r4, r5, pc}
 3412              	.LVL485:
 3413              	.L309:
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3414              		.loc 1 1579 0
 3415 004e 38BD     		pop	{r3, r4, r5, pc}
 3416              		.cfi_endproc
 3417              	.LFE86:
ARM GAS  /tmp/cclwbenu.s 			page 110


 3419              		.section	.text.follow_path,"ax",%progbits
 3420              		.align	2
 3421              		.thumb
 3422              		.thumb_func
 3424              	follow_path:
 3425              	.LFB92:
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3426              		.loc 1 2129 0
 3427              		.cfi_startproc
 3428              		@ args = 0, pretend = 0, frame = 8
 3429              		@ frame_needed = 0, uses_anonymous_args = 0
 3430              	.LVL486:
 3431 0000 10B5     		push	{r4, lr}
 3432              	.LCFI34:
 3433              		.cfi_def_cfa_offset 8
 3434              		.cfi_offset 4, -8
 3435              		.cfi_offset 14, -4
 3436 0002 82B0     		sub	sp, sp, #8
 3437              	.LCFI35:
 3438              		.cfi_def_cfa_offset 16
 3439 0004 0446     		mov	r4, r0
 3440 0006 0191     		str	r1, [sp, #4]
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
 3441              		.loc 1 2141 0
 3442 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 3443 000a 2F2B     		cmp	r3, #47
 3444 000c 01D0     		beq	.L313
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
 3445              		.loc 1 2141 0 is_stmt 0 discriminator 1
 3446 000e 5C2B     		cmp	r3, #92
 3447 0010 01D1     		bne	.L314
 3448              	.L313:
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sclust = 0;							/* Always start from the root directory */
 3449              		.loc 1 2142 0 is_stmt 1
 3450 0012 0131     		adds	r1, r1, #1
 3451              	.LVL487:
 3452 0014 0191     		str	r1, [sp, #4]
 3453              	.LVL488:
 3454              	.L314:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3455              		.loc 1 2143 0
 3456 0016 0023     		movs	r3, #0
 3457 0018 C4F80832 		str	r3, [r4, #520]
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 3458              		.loc 1 2146 0
 3459 001c 019B     		ldr	r3, [sp, #4]
 3460 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3461 0020 1F2B     		cmp	r3, #31
 3462 0022 08D8     		bhi	.L315
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir = 0;
 3463              		.loc 1 2147 0
 3464 0024 2046     		mov	r0, r4
 3465              	.LVL489:
 3466 0026 0021     		movs	r1, #0
 3467 0028 FFF7FEFF 		bl	dir_sdi
 3468              	.LVL490:
 3469 002c 0346     		mov	r3, r0
ARM GAS  /tmp/cclwbenu.s 			page 111


 3470              	.LVL491:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
 3471              		.loc 1 2148 0
 3472 002e 0022     		movs	r2, #0
 3473 0030 C4F81422 		str	r2, [r4, #532]
 3474 0034 26E0     		b	.L316
 3475              	.LVL492:
 3476              	.L315:
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3477              		.loc 1 2151 0
 3478 0036 2046     		mov	r0, r4
 3479 0038 01A9     		add	r1, sp, #4
 3480 003a FFF7FEFF 		bl	create_name
 3481              	.LVL493:
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the sagment name */
 3482              		.loc 1 2152 0
 3483 003e 0346     		mov	r3, r0
 3484 0040 00BB     		cbnz	r0, .L316
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 3485              		.loc 1 2153 0
 3486 0042 2046     		mov	r0, r4
 3487              	.LVL494:
 3488 0044 FFF7FEFF 		bl	dir_find
 3489              	.LVL495:
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3490              		.loc 1 2154 0
 3491 0048 D4F81832 		ldr	r3, [r4, #536]
 3492 004c DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 3493              	.LVL496:
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3494              		.loc 1 2155 0
 3495 004e 0346     		mov	r3, r0
 3496 0050 28B1     		cbz	r0, .L317
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
 3497              		.loc 1 2156 0
 3498 0052 0428     		cmp	r0, #4
 3499 0054 16D1     		bne	.L316
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3500              		.loc 1 2162 0
 3501 0056 12F0040F 		tst	r2, #4
 3502 005a 10D0     		beq	.L318
 3503 005c 12E0     		b	.L316
 3504              	.L317:
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dp->dir;						/* Follow the sub-directory */
 3505              		.loc 1 2167 0
 3506 005e 12F0040F 		tst	r2, #4
 3507 0062 0FD1     		bne	.L316
2168:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
 3508              		.loc 1 2168 0
 3509 0064 D4F81412 		ldr	r1, [r4, #532]
 3510              	.LVL497:
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3511              		.loc 1 2169 0
 3512 0068 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 3513 006a 13F0100F 		tst	r3, #16
 3514 006e 08D0     		beq	.L319
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/cclwbenu.s 			page 112


 3515              		.loc 1 2172 0
 3516 0070 D4F80002 		ldr	r0, [r4, #512]
 3517              	.LVL498:
 3518 0074 FFF7FEFF 		bl	ld_clust
 3519              	.LVL499:
 3520 0078 C4F80802 		str	r0, [r4, #520]
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3521              		.loc 1 2173 0
 3522 007c DBE7     		b	.L315
 3523              	.LVL500:
 3524              	.L318:
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3525              		.loc 1 2162 0
 3526 007e 0523     		movs	r3, #5
 3527 0080 00E0     		b	.L316
 3528              	.LVL501:
 3529              	.L319:
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3530              		.loc 1 2170 0
 3531 0082 0523     		movs	r3, #5
 3532              	.LVL502:
 3533              	.L316:
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3534              		.loc 1 2177 0
 3535 0084 1846     		mov	r0, r3
 3536 0086 02B0     		add	sp, sp, #8
 3537              	.LCFI36:
 3538              		.cfi_def_cfa_offset 8
 3539              		@ sp needed
 3540 0088 10BD     		pop	{r4, pc}
 3541              		.cfi_endproc
 3542              	.LFE92:
 3544 008a 00BF     		.section	.text.dir_alloc,"ax",%progbits
 3545              		.align	2
 3546              		.thumb
 3547              		.thumb_func
 3549              	dir_alloc:
 3550              	.LFB83:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3551              		.loc 1 1276 0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
 3555              	.LVL503:
 3556 0000 70B5     		push	{r4, r5, r6, lr}
 3557              	.LCFI37:
 3558              		.cfi_def_cfa_offset 16
 3559              		.cfi_offset 4, -16
 3560              		.cfi_offset 5, -12
 3561              		.cfi_offset 6, -8
 3562              		.cfi_offset 14, -4
 3563 0002 0446     		mov	r4, r0
 3564 0004 0E46     		mov	r6, r1
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3565              		.loc 1 1281 0
 3566 0006 0021     		movs	r1, #0
 3567              	.LVL504:
ARM GAS  /tmp/cclwbenu.s 			page 113


 3568 0008 FFF7FEFF 		bl	dir_sdi
 3569              	.LVL505:
1282:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3570              		.loc 1 1282 0
 3571 000c 0246     		mov	r2, r0
 3572 000e D0B9     		cbnz	r0, .L322
 3573 0010 0025     		movs	r5, #0
 3574              	.L325:
 3575              	.LVL506:
1285:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3576              		.loc 1 1285 0
 3577 0012 D4F80002 		ldr	r0, [r4, #512]
 3578              	.LVL507:
 3579 0016 D4F81012 		ldr	r1, [r4, #528]
 3580 001a FFF7FEFF 		bl	move_window
 3581              	.LVL508:
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[0] == DDEM || dp->dir[0] == 0) {	/* Is it a free entry? */
 3582              		.loc 1 1286 0
 3583 001e 0246     		mov	r2, r0
 3584 0020 88B9     		cbnz	r0, .L322
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
 3585              		.loc 1 1287 0
 3586 0022 D4F81432 		ldr	r3, [r4, #532]
 3587 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3588 0028 E52B     		cmp	r3, #229
 3589 002a 00D0     		beq	.L323
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
 3590              		.loc 1 1287 0 is_stmt 0 discriminator 1
 3591 002c 1BB9     		cbnz	r3, .L327
 3592              	.L323:
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3593              		.loc 1 1288 0 is_stmt 1
 3594 002e 0135     		adds	r5, r5, #1
 3595              	.LVL509:
 3596 0030 B542     		cmp	r5, r6
 3597 0032 01D1     		bne	.L324
 3598 0034 07E0     		b	.L322
 3599              	.L327:
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3600              		.loc 1 1290 0
 3601 0036 0025     		movs	r5, #0
 3602              	.LVL510:
 3603              	.L324:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
 3604              		.loc 1 1292 0
 3605 0038 2046     		mov	r0, r4
 3606              	.LVL511:
 3607 003a 0121     		movs	r1, #1
 3608 003c FFF7FEFF 		bl	dir_next
 3609              	.LVL512:
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3610              		.loc 1 1293 0
 3611 0040 0246     		mov	r2, r0
 3612 0042 0028     		cmp	r0, #0
 3613 0044 E5D0     		beq	.L325
 3614              	.LVL513:
 3615              	.L322:
ARM GAS  /tmp/cclwbenu.s 			page 114


1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3616              		.loc 1 1295 0
 3617 0046 042A     		cmp	r2, #4
 3618 0048 00D1     		bne	.L326
 3619 004a 0722     		movs	r2, #7
 3620              	.LVL514:
 3621              	.L326:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3622              		.loc 1 1297 0
 3623 004c 1046     		mov	r0, r2
 3624 004e 70BD     		pop	{r4, r5, r6, pc}
 3625              		.cfi_endproc
 3626              	.LFE83:
 3628              		.section	.text.dir_register,"ax",%progbits
 3629              		.align	2
 3630              		.thumb
 3631              		.thumb_func
 3633              	dir_register:
 3634              	.LFB88:
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3635              		.loc 1 1651 0
 3636              		.cfi_startproc
 3637              		@ args = 0, pretend = 0, frame = 0
 3638              		@ frame_needed = 0, uses_anonymous_args = 0
 3639              	.LVL515:
 3640 0000 38B5     		push	{r3, r4, r5, lr}
 3641              	.LCFI38:
 3642              		.cfi_def_cfa_offset 16
 3643              		.cfi_offset 3, -16
 3644              		.cfi_offset 4, -12
 3645              		.cfi_offset 5, -8
 3646              		.cfi_offset 14, -4
 3647 0002 0546     		mov	r5, r0
1699:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3648              		.loc 1 1699 0
 3649 0004 0121     		movs	r1, #1
 3650 0006 FFF7FEFF 		bl	dir_alloc
 3651              	.LVL516:
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 3652              		.loc 1 1702 0
 3653 000a 0446     		mov	r4, r0
 3654 000c C8B9     		cbnz	r0, .L331
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3655              		.loc 1 1703 0
 3656 000e D5F80002 		ldr	r0, [r5, #512]
 3657              	.LVL517:
 3658 0012 D5F81012 		ldr	r1, [r5, #528]
 3659 0016 FFF7FEFF 		bl	move_window
 3660              	.LVL518:
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clean the entry */
 3661              		.loc 1 1704 0
 3662 001a 0446     		mov	r4, r0
 3663 001c 88B9     		cbnz	r0, .L331
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
 3664              		.loc 1 1705 0
 3665 001e D5F81402 		ldr	r0, [r5, #532]
 3666              	.LVL519:
ARM GAS  /tmp/cclwbenu.s 			page 115


 3667 0022 0021     		movs	r1, #0
 3668 0024 2022     		movs	r2, #32
 3669 0026 FFF7FEFF 		bl	mem_set
 3670              	.LVL520:
1706:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 3671              		.loc 1 1706 0
 3672 002a D5F81402 		ldr	r0, [r5, #532]
 3673 002e D5F81812 		ldr	r1, [r5, #536]
 3674 0032 0B22     		movs	r2, #11
 3675 0034 FFF7FEFF 		bl	mem_cpy
 3676              	.LVL521:
1710:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3677              		.loc 1 1710 0
 3678 0038 D5F80032 		ldr	r3, [r5, #512]
 3679 003c 0122     		movs	r2, #1
 3680 003e 83F80422 		strb	r2, [r3, #516]
 3681              	.L331:
 3682              	.LVL522:
1715:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 3683              		.loc 1 1715 0
 3684 0042 2046     		mov	r0, r4
 3685 0044 38BD     		pop	{r3, r4, r5, pc}
 3686              		.cfi_endproc
 3687              	.LFE88:
 3689 0046 00BF     		.section	.text.dir_read,"ax",%progbits
 3690              		.align	2
 3691              		.thumb
 3692              		.thumb_func
 3694              	dir_read:
 3695              	.LFB87:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3696              		.loc 1 1593 0
 3697              		.cfi_startproc
 3698              		@ args = 0, pretend = 0, frame = 0
 3699              		@ frame_needed = 0, uses_anonymous_args = 0
 3700              	.LVL523:
 3701 0000 70B5     		push	{r4, r5, r6, lr}
 3702              	.LCFI39:
 3703              		.cfi_def_cfa_offset 16
 3704              		.cfi_offset 4, -16
 3705              		.cfi_offset 5, -12
 3706              		.cfi_offset 6, -8
 3707              		.cfi_offset 14, -4
 3708 0002 0446     		mov	r4, r0
 3709 0004 0D46     		mov	r5, r1
 3710              	.LVL524:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
 3711              		.loc 1 1600 0
 3712 0006 0426     		movs	r6, #4
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 3713              		.loc 1 1601 0
 3714 0008 20E0     		b	.L334
 3715              	.LVL525:
 3716              	.L337:
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3717              		.loc 1 1602 0
 3718 000a D4F80002 		ldr	r0, [r4, #512]
ARM GAS  /tmp/cclwbenu.s 			page 116


 3719 000e FFF7FEFF 		bl	move_window
 3720              	.LVL526:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
 3721              		.loc 1 1603 0
 3722 0012 0646     		mov	r6, r0
 3723 0014 00BB     		cbnz	r0, .L335
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
 3724              		.loc 1 1604 0
 3725 0016 D4F81432 		ldr	r3, [r4, #532]
 3726              	.LVL527:
1605:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3727              		.loc 1 1605 0
 3728 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3729              	.LVL528:
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
 3730              		.loc 1 1606 0
 3731 001c DAB1     		cbz	r2, .L339
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 3732              		.loc 1 1607 0
 3733 001e DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3734              	.LVL529:
 3735 0020 03F03F03 		and	r3, r3, #63
 3736              	.LVL530:
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3737              		.loc 1 1627 0
 3738 0024 E52A     		cmp	r2, #229
 3739 0026 0BD0     		beq	.L336
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3740              		.loc 1 1627 0 is_stmt 0 discriminator 1
 3741 0028 2E2A     		cmp	r2, #46
 3742 002a 09D0     		beq	.L336
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3743              		.loc 1 1627 0 discriminator 2
 3744 002c 0F2B     		cmp	r3, #15
 3745 002e 07D0     		beq	.L336
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3746              		.loc 1 1627 0 discriminator 3
 3747 0030 23F02003 		bic	r3, r3, #32
 3748              	.LVL531:
 3749 0034 082B     		cmp	r3, #8
 3750 0036 14BF     		ite	ne
 3751 0038 0023     		movne	r3, #0
 3752 003a 0123     		moveq	r3, #1
 3753 003c AB42     		cmp	r3, r5
 3754 003e 0BD0     		beq	.L335
 3755              	.L336:
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3756              		.loc 1 1630 0 is_stmt 1
 3757 0040 2046     		mov	r0, r4
 3758              	.LVL532:
 3759 0042 0021     		movs	r1, #0
 3760 0044 FFF7FEFF 		bl	dir_next
 3761              	.LVL533:
1631:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3762              		.loc 1 1631 0
 3763 0048 0646     		mov	r6, r0
 3764 004a 28B9     		cbnz	r0, .L335
ARM GAS  /tmp/cclwbenu.s 			page 117


 3765              	.LVL534:
 3766              	.L334:
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 3767              		.loc 1 1601 0
 3768 004c D4F81012 		ldr	r1, [r4, #528]
 3769 0050 0029     		cmp	r1, #0
 3770 0052 DAD1     		bne	.L337
 3771 0054 00E0     		b	.L335
 3772              	.LVL535:
 3773              	.L339:
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
 3774              		.loc 1 1606 0
 3775 0056 0426     		movs	r6, #4
 3776              	.LVL536:
 3777              	.L335:
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3778              		.loc 1 1634 0
 3779 0058 16B1     		cbz	r6, .L338
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3780              		.loc 1 1634 0 is_stmt 0 discriminator 1
 3781 005a 0023     		movs	r3, #0
 3782 005c C4F81032 		str	r3, [r4, #528]
 3783              	.L338:
1637:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
 3784              		.loc 1 1637 0 is_stmt 1
 3785 0060 3046     		mov	r0, r6
 3786 0062 70BD     		pop	{r4, r5, r6, pc}
 3787              		.cfi_endproc
 3788              	.LFE87:
 3790              		.section	.text.remove_chain,"ax",%progbits
 3791              		.align	2
 3792              		.thumb
 3793              		.thumb_func
 3795              	remove_chain:
 3796              	.LFB78:
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3797              		.loc 1 1014 0
 3798              		.cfi_startproc
 3799              		@ args = 0, pretend = 0, frame = 0
 3800              		@ frame_needed = 0, uses_anonymous_args = 0
 3801              	.LVL537:
 3802 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3803              	.LCFI40:
 3804              		.cfi_def_cfa_offset 24
 3805              		.cfi_offset 3, -24
 3806              		.cfi_offset 4, -20
 3807              		.cfi_offset 5, -16
 3808              		.cfi_offset 6, -12
 3809              		.cfi_offset 7, -8
 3810              		.cfi_offset 14, -4
 3811 0002 0D46     		mov	r5, r1
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 3812              		.loc 1 1021 0
 3813 0004 0129     		cmp	r1, #1
 3814 0006 2CD9     		bls	.L346
 3815 0008 0446     		mov	r4, r0
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
ARM GAS  /tmp/cclwbenu.s 			page 118


 3816              		.loc 1 1021 0 is_stmt 0 discriminator 1
 3817 000a D0F81432 		ldr	r3, [r0, #532]
 3818 000e 8B42     		cmp	r3, r1
 3819 0010 29D9     		bls	.L347
 3820 0012 0027     		movs	r7, #0
 3821 0014 20E0     		b	.L343
 3822              	.LVL538:
 3823              	.L345:
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
 3824              		.loc 1 1027 0 is_stmt 1
 3825 0016 2046     		mov	r0, r4
 3826 0018 2946     		mov	r1, r5
 3827 001a FFF7FEFF 		bl	get_fat
 3828              	.LVL539:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 3829              		.loc 1 1028 0
 3830 001e 0646     		mov	r6, r0
 3831 0020 30B3     		cbz	r0, .L342
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 3832              		.loc 1 1029 0
 3833 0022 0128     		cmp	r0, #1
 3834 0024 21D0     		beq	.L348
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 3835              		.loc 1 1030 0
 3836 0026 B0F1FF3F 		cmp	r0, #-1
 3837 002a 20D0     		beq	.L349
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3838              		.loc 1 1031 0
 3839 002c 2046     		mov	r0, r4
 3840              	.LVL540:
 3841 002e 2946     		mov	r1, r5
 3842 0030 0022     		movs	r2, #0
 3843 0032 FFF7FEFF 		bl	put_fat
 3844              	.LVL541:
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
 3845              		.loc 1 1032 0
 3846 0036 0746     		mov	r7, r0
 3847 0038 D0B9     		cbnz	r0, .L342
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clust++;
 3848              		.loc 1 1033 0
 3849 003a D4F81032 		ldr	r3, [r4, #528]
 3850 003e B3F1FF3F 		cmp	r3, #-1
 3851 0042 08D0     		beq	.L344
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
 3852              		.loc 1 1034 0
 3853 0044 0133     		adds	r3, r3, #1
 3854 0046 C4F81032 		str	r3, [r4, #528]
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3855              		.loc 1 1035 0
 3856 004a 94F80532 		ldrb	r3, [r4, #517]	@ zero_extendqisi2
 3857 004e 43F00103 		orr	r3, r3, #1
 3858 0052 84F80532 		strb	r3, [r4, #517]
 3859              	.L344:
 3860              	.LVL542:
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3861              		.loc 1 1047 0
 3862 0056 3546     		mov	r5, r6
ARM GAS  /tmp/cclwbenu.s 			page 119


 3863              	.LVL543:
 3864              	.L343:
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 3865              		.loc 1 1026 0
 3866 0058 D4F81432 		ldr	r3, [r4, #532]
 3867 005c AB42     		cmp	r3, r5
 3868 005e DAD8     		bhi	.L345
 3869 0060 06E0     		b	.L342
 3870              	.LVL544:
 3871              	.L346:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3872              		.loc 1 1022 0
 3873 0062 0227     		movs	r7, #2
 3874 0064 04E0     		b	.L342
 3875              	.L347:
 3876 0066 0227     		movs	r7, #2
 3877 0068 02E0     		b	.L342
 3878              	.LVL545:
 3879              	.L348:
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 3880              		.loc 1 1029 0
 3881 006a 0227     		movs	r7, #2
 3882              	.LVL546:
 3883 006c 00E0     		b	.L342
 3884              	.LVL547:
 3885              	.L349:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 3886              		.loc 1 1030 0
 3887 006e 0127     		movs	r7, #1
 3888              	.LVL548:
 3889              	.L342:
1052:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3890              		.loc 1 1052 0
 3891 0070 3846     		mov	r0, r7
 3892 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3893              		.cfi_endproc
 3894              	.LFE78:
 3896              		.section	.text.f_mount,"ax",%progbits
 3897              		.align	2
 3898              		.global	f_mount
 3899              		.thumb
 3900              		.thumb_func
 3902              	f_mount:
 3903              	.LFB97:
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** 
2462:Middlewares/Third_Party/FatFs/src/ff.c **** 
2463:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 
2465:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 
2467:Middlewares/Third_Party/FatFs/src/ff.c **** --------------------------------------------------------------------------*/
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 
2471:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/cclwbenu.s 			page 120


2472:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
2473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 
2475:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
2478:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
2479:Middlewares/Third_Party/FatFs/src/ff.c **** )
2480:Middlewares/Third_Party/FatFs/src/ff.c **** {
 3904              		.loc 1 2480 0
 3905              		.cfi_startproc
 3906              		@ args = 0, pretend = 0, frame = 16
 3907              		@ frame_needed = 0, uses_anonymous_args = 0
 3908              	.LVL549:
 3909 0000 70B5     		push	{r4, r5, r6, lr}
 3910              	.LCFI41:
 3911              		.cfi_def_cfa_offset 16
 3912              		.cfi_offset 4, -16
 3913              		.cfi_offset 5, -12
 3914              		.cfi_offset 6, -8
 3915              		.cfi_offset 14, -4
 3916 0002 84B0     		sub	sp, sp, #16
 3917              	.LCFI42:
 3918              		.cfi_def_cfa_offset 32
 3919 0004 0190     		str	r0, [sp, #4]
 3920 0006 0091     		str	r1, [sp]
 3921 0008 1646     		mov	r6, r2
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
 3922              		.loc 1 2484 0
 3923 000a 04A8     		add	r0, sp, #16
 3924              	.LVL550:
 3925 000c 40F8041D 		str	r1, [r0, #-4]!
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
 3926              		.loc 1 2487 0
 3927 0010 FFF7FEFF 		bl	get_ldnumber
 3928              	.LVL551:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 3929              		.loc 1 2488 0
 3930 0014 041E     		subs	r4, r0, #0
 3931 0016 1ADB     		blt	.L355
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 3932              		.loc 1 2489 0
 3933 0018 104B     		ldr	r3, .L359
 3934 001a 53F82450 		ldr	r5, [r3, r4, lsl #2]
 3935              	.LVL552:
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
 3936              		.loc 1 2491 0
 3937 001e 2DB1     		cbz	r5, .L353
2492:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
 3938              		.loc 1 2493 0
ARM GAS  /tmp/cclwbenu.s 			page 121


 3939 0020 2846     		mov	r0, r5
 3940              	.LVL553:
 3941 0022 FFF7FEFF 		bl	clear_lock
 3942              	.LVL554:
2494:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2495:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
2496:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
2497:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
 3943              		.loc 1 2498 0
 3944 0026 0023     		movs	r3, #0
 3945 0028 85F80032 		strb	r3, [r5, #512]
 3946              	.L353:
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
 3947              		.loc 1 2501 0
 3948 002c 019B     		ldr	r3, [sp, #4]
 3949 002e 13B1     		cbz	r3, .L354
2502:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 3950              		.loc 1 2502 0
 3951 0030 0022     		movs	r2, #0
 3952 0032 83F80022 		strb	r2, [r3, #512]
 3953              	.L354:
2503:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
2505:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
 3954              		.loc 1 2507 0
 3955 0036 094A     		ldr	r2, .L359
 3956 0038 42F82430 		str	r3, [r2, r4, lsl #2]
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 3957              		.loc 1 2509 0
 3958 003c 4BB1     		cbz	r3, .L356
 3959              		.loc 1 2509 0 is_stmt 0 discriminator 2
 3960 003e 012E     		cmp	r6, #1
 3961 0040 09D1     		bne	.L357
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
 3962              		.loc 1 2511 0 is_stmt 1
 3963 0042 01A8     		add	r0, sp, #4
 3964              	.LVL555:
 3965 0044 6946     		mov	r1, sp
 3966 0046 0022     		movs	r2, #0
 3967 0048 FFF7FEFF 		bl	find_volume
 3968              	.LVL556:
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 3969              		.loc 1 2512 0
 3970 004c 04E0     		b	.L352
 3971              	.LVL557:
 3972              	.L355:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 3973              		.loc 1 2488 0
 3974 004e 0B20     		movs	r0, #11
 3975              	.LVL558:
ARM GAS  /tmp/cclwbenu.s 			page 122


 3976 0050 02E0     		b	.L352
 3977              	.LVL559:
 3978              	.L356:
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3979              		.loc 1 2509 0
 3980 0052 0020     		movs	r0, #0
 3981 0054 00E0     		b	.L352
 3982              	.L357:
 3983 0056 0020     		movs	r0, #0
 3984              	.LVL560:
 3985              	.L352:
2513:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3986              		.loc 1 2513 0
 3987 0058 04B0     		add	sp, sp, #16
 3988              	.LCFI43:
 3989              		.cfi_def_cfa_offset 16
 3990              	.LVL561:
 3991              		@ sp needed
 3992 005a 70BD     		pop	{r4, r5, r6, pc}
 3993              	.LVL562:
 3994              	.L360:
 3995              		.align	2
 3996              	.L359:
 3997 005c 00000000 		.word	.LANCHOR2
 3998              		.cfi_endproc
 3999              	.LFE97:
 4001              		.section	.text.f_open,"ax",%progbits
 4002              		.align	2
 4003              		.global	f_open
 4004              		.thumb
 4005              		.thumb_func
 4007              	f_open:
 4008              	.LFB98:
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2519:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
2520:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 
2522:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
2526:Middlewares/Third_Party/FatFs/src/ff.c **** )
2527:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4009              		.loc 1 2527 0
 4010              		.cfi_startproc
 4011              		@ args = 0, pretend = 0, frame = 568
 4012              		@ frame_needed = 0, uses_anonymous_args = 0
 4013              	.LVL563:
 4014 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4015              	.LCFI44:
 4016              		.cfi_def_cfa_offset 28
 4017              		.cfi_offset 4, -28
 4018              		.cfi_offset 5, -24
ARM GAS  /tmp/cclwbenu.s 			page 123


 4019              		.cfi_offset 6, -20
 4020              		.cfi_offset 7, -16
 4021              		.cfi_offset 8, -12
 4022              		.cfi_offset 9, -8
 4023              		.cfi_offset 14, -4
 4024 0004 ADF50F7D 		sub	sp, sp, #572
 4025              	.LCFI45:
 4026              		.cfi_def_cfa_offset 600
 4027 0008 0191     		str	r1, [sp, #4]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
2532:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl;
2534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** 
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
 4028              		.loc 1 2537 0
 4029 000a 0028     		cmp	r0, #0
 4030 000c 00F0DD80 		beq	.L373
 4031 0010 0546     		mov	r5, r0
 4032 0012 1646     		mov	r6, r2
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->fs = 0;			/* Clear file object */
 4033              		.loc 1 2538 0
 4034 0014 0023     		movs	r3, #0
 4035 0016 C0F80032 		str	r3, [r0, #512]
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
2541:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2542:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
 4036              		.loc 1 2542 0
 4037 001a 02F01F07 		and	r7, r2, #31
 4038              	.LVL564:
2543:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
 4039              		.loc 1 2543 0
 4040 001e 86A8     		add	r0, sp, #536
 4041              	.LVL565:
 4042 0020 01A9     		add	r1, sp, #4
 4043              	.LVL566:
 4044 0022 02F01E02 		and	r2, r2, #30
 4045 0026 FFF7FEFF 		bl	find_volume
 4046              	.LVL567:
2544:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2545:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= FA_READ;
2546:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
2547:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2548:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4047              		.loc 1 2548 0
 4048 002a 0446     		mov	r4, r0
 4049 002c 0028     		cmp	r0, #0
 4050 002e 40F0CA80 		bne	.L363
2549:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 4051              		.loc 1 2549 0
 4052 0032 03AB     		add	r3, sp, #12
 4053 0034 8C93     		str	r3, [sp, #560]
ARM GAS  /tmp/cclwbenu.s 			page 124


2550:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 4054              		.loc 1 2550 0
 4055 0036 06A8     		add	r0, sp, #24
 4056              	.LVL568:
 4057 0038 0199     		ldr	r1, [sp, #4]
 4058 003a FFF7FEFF 		bl	follow_path
 4059              	.LVL569:
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dj.dir;
 4060              		.loc 1 2551 0
 4061 003e DDF82C82 		ldr	r8, [sp, #556]
 4062              	.LVL570:
2552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 4063              		.loc 1 2553 0
 4064 0042 0446     		mov	r4, r0
 4065 0044 68B9     		cbnz	r0, .L364
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir)	/* Default directory itself */
 4066              		.loc 1 2554 0
 4067 0046 B8F1000F 		cmp	r8, #0
 4068 004a 09D0     		beq	.L374
2555:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
2556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2557:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 4069              		.loc 1 2558 0
 4070 004c 37F00103 		bics	r3, r7, #1
 4071 0050 06A8     		add	r0, sp, #24
 4072              	.LVL571:
 4073 0052 14BF     		ite	ne
 4074 0054 0121     		movne	r1, #1
 4075 0056 0021     		moveq	r1, #0
 4076 0058 FFF7FEFF 		bl	chk_lock
 4077              	.LVL572:
 4078 005c 0446     		mov	r4, r0
 4079              	.LVL573:
 4080 005e 00E0     		b	.L364
 4081              	.LVL574:
 4082              	.L374:
2555:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 4083              		.loc 1 2555 0
 4084 0060 0624     		movs	r4, #6
 4085              	.LVL575:
 4086              	.L364:
2559:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 4087              		.loc 1 2562 0
 4088 0062 16F01C0F 		tst	r6, #28
 4089 0066 5CD0     		beq	.L365
2563:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4090              		.loc 1 2563 0
 4091 0068 7CB1     		cbz	r4, .L366
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
 4092              		.loc 1 2564 0
 4093 006a 042C     		cmp	r4, #4
 4094 006c 08D1     		bne	.L367
ARM GAS  /tmp/cclwbenu.s 			page 125


2565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2566:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
 4095              		.loc 1 2566 0
 4096 006e FFF7FEFF 		bl	enq_lock
 4097              	.LVL576:
 4098 0072 20B1     		cbz	r0, .L375
 4099              		.loc 1 2566 0 is_stmt 0 discriminator 1
 4100 0074 06A8     		add	r0, sp, #24
 4101 0076 FFF7FEFF 		bl	dir_register
 4102              	.LVL577:
 4103 007a 0446     		mov	r4, r0
 4104              	.LVL578:
 4105 007c 00E0     		b	.L367
 4106              	.LVL579:
 4107              	.L375:
 4108              		.loc 1 2566 0
 4109 007e 1224     		movs	r4, #18
 4110              	.LVL580:
 4111              	.L367:
2567:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
2569:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2570:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
 4112              		.loc 1 2570 0 is_stmt 1
 4113 0080 47F00807 		orr	r7, r7, #8
 4114              	.LVL581:
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;					/* New entry */
 4115              		.loc 1 2571 0
 4116 0084 DDF82C82 		ldr	r8, [sp, #556]
 4117              	.LVL582:
 4118 0088 0BE0     		b	.L369
 4119              	.L366:
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 4120              		.loc 1 2574 0
 4121 008a 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 4122 008e 13F0110F 		tst	r3, #17
 4123 0092 03D1     		bne	.L376
2575:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
2576:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
 4124              		.loc 1 2577 0
 4125 0094 16F0040F 		tst	r6, #4
 4126 0098 02D1     		bne	.L377
 4127 009a 02E0     		b	.L369
 4128              	.L376:
2575:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 4129              		.loc 1 2575 0
 4130 009c 0724     		movs	r4, #7
 4131              	.LVL583:
 4132 009e 00E0     		b	.L369
 4133              	.LVL584:
 4134              	.L377:
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_EXIST;
 4135              		.loc 1 2578 0
 4136 00a0 0824     		movs	r4, #8
ARM GAS  /tmp/cclwbenu.s 			page 126


 4137              	.LVL585:
 4138              	.L369:
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
 4139              		.loc 1 2581 0
 4140 00a2 002C     		cmp	r4, #0
 4141 00a4 4DD1     		bne	.L370
 4142              		.loc 1 2581 0 is_stmt 0 discriminator 1
 4143 00a6 17F0080F 		tst	r7, #8
 4144 00aa 4AD0     		beq	.L370
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();				/* Created time */
 4145              		.loc 1 2582 0 is_stmt 1
 4146 00ac FFF7FEFF 		bl	get_fattime
 4147              	.LVL586:
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_CrtTime, dw);
 4148              		.loc 1 2583 0
 4149 00b0 88F80E00 		strb	r0, [r8, #14]
 4150 00b4 C0F30723 		ubfx	r3, r0, #8, #8
 4151 00b8 88F80F30 		strb	r3, [r8, #15]
 4152 00bc C0F30743 		ubfx	r3, r0, #16, #8
 4153 00c0 88F81030 		strb	r3, [r8, #16]
 4154 00c4 000E     		lsrs	r0, r0, #24
 4155              	.LVL587:
 4156 00c6 88F81100 		strb	r0, [r8, #17]
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = 0;				/* Reset attribute */
 4157              		.loc 1 2584 0
 4158 00ca 0026     		movs	r6, #0
 4159 00cc 88F80B60 		strb	r6, [r8, #11]
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, 0);/* size = 0 */
 4160              		.loc 1 2585 0
 4161 00d0 88F81C60 		strb	r6, [r8, #28]
 4162 00d4 88F81D60 		strb	r6, [r8, #29]
 4163 00d8 88F81E60 		strb	r6, [r8, #30]
 4164 00dc 88F81F60 		strb	r6, [r8, #31]
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
 4165              		.loc 1 2586 0
 4166 00e0 8698     		ldr	r0, [sp, #536]
 4167 00e2 4146     		mov	r1, r8
 4168 00e4 FFF7FEFF 		bl	ld_clust
 4169              	.LVL588:
 4170 00e8 8146     		mov	r9, r0
 4171              	.LVL589:
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, 0);				/* cluster = 0 */
 4172              		.loc 1 2587 0
 4173 00ea 4046     		mov	r0, r8
 4174              	.LVL590:
 4175 00ec 3146     		mov	r1, r6
 4176 00ee FFF7FEFF 		bl	st_clust
 4177              	.LVL591:
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 4178              		.loc 1 2588 0
 4179 00f2 8698     		ldr	r0, [sp, #536]
 4180 00f4 0123     		movs	r3, #1
 4181 00f6 80F80432 		strb	r3, [r0, #516]
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (cl) {						/* Remove the cluster chain if exist */
 4182              		.loc 1 2589 0
ARM GAS  /tmp/cclwbenu.s 			page 127


 4183 00fa B9F1000F 		cmp	r9, #0
 4184 00fe 20D0     		beq	.L370
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 					dw = dj.fs->winsect;
 4185              		.loc 1 2590 0
 4186 0100 D0F82C62 		ldr	r6, [r0, #556]
 4187              	.LVL592:
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, cl);
 4188              		.loc 1 2591 0
 4189 0104 4946     		mov	r1, r9
 4190 0106 FFF7FEFF 		bl	remove_chain
 4191              	.LVL593:
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 4192              		.loc 1 2592 0
 4193 010a 0446     		mov	r4, r0
 4194 010c C8B9     		cbnz	r0, .L370
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
 4195              		.loc 1 2593 0
 4196 010e 8698     		ldr	r0, [sp, #536]
 4197              	.LVL594:
 4198 0110 09F1FF33 		add	r3, r9, #-1
 4199 0114 C0F80C32 		str	r3, [r0, #524]
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(dj.fs, dw);
 4200              		.loc 1 2594 0
 4201 0118 3146     		mov	r1, r6
 4202 011a FFF7FEFF 		bl	move_window
 4203              	.LVL595:
 4204 011e 0446     		mov	r4, r0
 4205              	.LVL596:
 4206 0120 0FE0     		b	.L370
 4207              	.LVL597:
 4208              	.L365:
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Follow succeeded */
 4209              		.loc 1 2600 0
 4210 0122 74B9     		cbnz	r4, .L370
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
 4211              		.loc 1 2601 0
 4212 0124 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 4213 0128 13F0100F 		tst	r3, #16
 4214 012c 06D1     		bne	.L378
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
 4215              		.loc 1 2604 0
 4216 012e 16F0020F 		tst	r6, #2
 4217 0132 06D0     		beq	.L370
 4218              		.loc 1 2604 0 is_stmt 0 discriminator 1
 4219 0134 13F0010F 		tst	r3, #1
 4220 0138 02D1     		bne	.L379
 4221 013a 02E0     		b	.L370
 4222              	.L378:
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4223              		.loc 1 2602 0 is_stmt 1
ARM GAS  /tmp/cclwbenu.s 			page 128


 4224 013c 0424     		movs	r4, #4
 4225              	.LVL598:
 4226 013e 00E0     		b	.L370
 4227              	.LVL599:
 4228              	.L379:
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4229              		.loc 1 2605 0
 4230 0140 0724     		movs	r4, #7
 4231              	.LVL600:
 4232              	.L370:
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2607:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2609:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 4233              		.loc 1 2609 0
 4234 0142 BCB9     		cbnz	r4, .L371
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 4235              		.loc 1 2610 0
 4236 0144 17F0080F 		tst	r7, #8
 4237 0148 01D0     		beq	.L372
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA__WRITTEN;
 4238              		.loc 1 2611 0
 4239 014a 47F02007 		orr	r7, r7, #32
 4240              	.LVL601:
 4241              	.L372:
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
 4242              		.loc 1 2612 0
 4243 014e 869B     		ldr	r3, [sp, #536]
 4244 0150 D3F82C32 		ldr	r3, [r3, #556]
 4245 0154 C5F81C32 		str	r3, [r5, #540]
2613:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dir;
 4246              		.loc 1 2613 0
 4247 0158 C5F82082 		str	r8, [r5, #544]
2614:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2615:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 4248              		.loc 1 2615 0
 4249 015c 37F00103 		bics	r3, r7, #1
 4250 0160 06A8     		add	r0, sp, #24
 4251 0162 14BF     		ite	ne
 4252 0164 0121     		movne	r1, #1
 4253 0166 0021     		moveq	r1, #0
 4254 0168 FFF7FEFF 		bl	inc_lock
 4255              	.LVL602:
 4256 016c C5F82802 		str	r0, [r5, #552]
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->lockid) res = FR_INT_ERR;
 4257              		.loc 1 2616 0
 4258 0170 00B9     		cbnz	r0, .L371
 4259 0172 0224     		movs	r4, #2
 4260              	.LVL603:
 4261              	.L371:
2617:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2618:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 
2620:Middlewares/Third_Party/FatFs/src/ff.c **** #else				/* R/O configuration */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow succeeded */
2622:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
2623:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Current directory itself */
ARM GAS  /tmp/cclwbenu.s 			page 129


2624:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2630:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 4262              		.loc 1 2633 0
 4263 0174 3CBB     		cbnz	r4, .L363
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;					/* File access mode */
 4264              		.loc 1 2634 0
 4265 0176 85F80672 		strb	r7, [r5, #518]
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;						/* Clear error flag */
 4266              		.loc 1 2635 0
 4267 017a 0026     		movs	r6, #0
 4268 017c 85F80762 		strb	r6, [r5, #519]
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
 4269              		.loc 1 2636 0
 4270 0180 869F     		ldr	r7, [sp, #536]
 4271              	.LVL604:
 4272 0182 3846     		mov	r0, r7
 4273 0184 4146     		mov	r1, r8
 4274 0186 FFF7FEFF 		bl	ld_clust
 4275              	.LVL605:
 4276 018a C5F81002 		str	r0, [r5, #528]
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = LD_DWORD(dir + DIR_FileSize);	/* File size */
 4277              		.loc 1 2637 0
 4278 018e 98F81F20 		ldrb	r2, [r8, #31]	@ zero_extendqisi2
 4279 0192 98F81E30 		ldrb	r3, [r8, #30]	@ zero_extendqisi2
 4280 0196 1B04     		lsls	r3, r3, #16
 4281 0198 43EA0263 		orr	r3, r3, r2, lsl #24
 4282 019c 98F81D20 		ldrb	r2, [r8, #29]	@ zero_extendqisi2
 4283 01a0 43EA0223 		orr	r3, r3, r2, lsl #8
 4284 01a4 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 4285 01a8 1343     		orrs	r3, r3, r2
 4286 01aa C5F80C32 		str	r3, [r5, #524]
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;						/* File pointer */
 4287              		.loc 1 2638 0
 4288 01ae C5F80862 		str	r6, [r5, #520]
2639:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = 0;
 4289              		.loc 1 2639 0
 4290 01b2 C5F81862 		str	r6, [r5, #536]
2640:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;						/* Normal seek mode */
 4291              		.loc 1 2641 0
 4292 01b6 C5F82462 		str	r6, [r5, #548]
2642:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fs = dj.fs;	 					/* Validate file object */
 4293              		.loc 1 2643 0
 4294 01ba C5F80072 		str	r7, [r5, #512]
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->id = fp->fs->id;
 4295              		.loc 1 2644 0
 4296 01be B7F80632 		ldrh	r3, [r7, #518]
 4297 01c2 A5F80432 		strh	r3, [r5, #516]	@ movhi
ARM GAS  /tmp/cclwbenu.s 			page 130


 4298              	.LVL606:
 4299              	.L363:
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 
2648:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
 4300              		.loc 1 2648 0
 4301 01c6 2046     		mov	r0, r4
 4302 01c8 00E0     		b	.L362
 4303              	.LVL607:
 4304              	.L373:
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->fs = 0;			/* Clear file object */
 4305              		.loc 1 2537 0
 4306 01ca 0920     		movs	r0, #9
 4307              	.LVL608:
 4308              	.L362:
2649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4309              		.loc 1 2649 0
 4310 01cc 0DF50F7D 		add	sp, sp, #572
 4311              	.LCFI46:
 4312              		.cfi_def_cfa_offset 28
 4313              		@ sp needed
 4314 01d0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4315              		.cfi_endproc
 4316              	.LFE98:
 4318              		.section	.text.f_read,"ax",%progbits
 4319              		.align	2
 4320              		.global	f_read
 4321              		.thumb
 4322              		.thumb_func
 4324              	f_read:
 4325              	.LFB99:
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 
2654:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2655:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
2656:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 
2658:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 		/* Pointer to the file object */
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,		/* Pointer to data buffer */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,		/* Number of bytes to read */
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br		/* Pointer to number of bytes read */
2663:Middlewares/Third_Party/FatFs/src/ff.c **** )
2664:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4326              		.loc 1 2664 0
 4327              		.cfi_startproc
 4328              		@ args = 0, pretend = 0, frame = 0
 4329              		@ frame_needed = 0, uses_anonymous_args = 0
 4330              	.LVL609:
 4331 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4332              	.LCFI47:
 4333              		.cfi_def_cfa_offset 40
 4334              		.cfi_offset 3, -40
 4335              		.cfi_offset 4, -36
ARM GAS  /tmp/cclwbenu.s 			page 131


 4336              		.cfi_offset 5, -32
 4337              		.cfi_offset 6, -28
 4338              		.cfi_offset 7, -24
 4339              		.cfi_offset 8, -20
 4340              		.cfi_offset 9, -16
 4341              		.cfi_offset 10, -12
 4342              		.cfi_offset 11, -8
 4343              		.cfi_offset 14, -4
 4344 0004 0446     		mov	r4, r0
 4345 0006 8846     		mov	r8, r1
 4346 0008 1546     		mov	r5, r2
 4347 000a 1F46     		mov	r7, r3
 4348              	.LVL610:
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect, remain;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect, *rbuff = (BYTE*)buff;
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
 4349              		.loc 1 2671 0
 4350 000c 0023     		movs	r3, #0
 4351              	.LVL611:
 4352 000e 3B60     		str	r3, [r7]
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);							/* Check validity */
 4353              		.loc 1 2673 0
 4354 0010 FFF7FEFF 		bl	validate
 4355              	.LVL612:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4356              		.loc 1 2674 0
 4357 0014 0028     		cmp	r0, #0
 4358 0016 40F0CA80 		bne	.L404
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)								/* Check error */
 4359              		.loc 1 2675 0
 4360 001a 94F80702 		ldrb	r0, [r4, #519]	@ zero_extendqisi2
 4361              	.LVL613:
 4362 001e 0028     		cmp	r0, #0
 4363 0020 40F0C880 		bne	.L383
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 4364              		.loc 1 2677 0
 4365 0024 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4366 0028 13F0010F 		tst	r3, #1
 4367 002c 00F0C180 		beq	.L406
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
 4368              		.loc 1 2679 0
 4369 0030 D4F80C62 		ldr	r6, [r4, #524]
 4370 0034 D4F80832 		ldr	r3, [r4, #520]
 4371 0038 F61A     		subs	r6, r6, r3
 4372              	.LVL614:
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4373              		.loc 1 2680 0
 4374 003a B542     		cmp	r5, r6
 4375 003c 00F2B180 		bhi	.L385
 4376 0040 2E46     		mov	r6, r5
ARM GAS  /tmp/cclwbenu.s 			page 132


 4377              	.LVL615:
 4378 0042 AEE0     		b	.L385
 4379              	.LVL616:
 4380              	.L403:
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 4381              		.loc 1 2684 0
 4382 0044 D4F80812 		ldr	r1, [r4, #520]
 4383 0048 C1F30803 		ubfx	r3, r1, #0, #9
 4384 004c 002B     		cmp	r3, #0
 4385 004e 40F09080 		bne	.L386
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 4386              		.loc 1 2685 0
 4387 0052 D4F80002 		ldr	r0, [r4, #512]
 4388 0056 90F80232 		ldrb	r3, [r0, #514]	@ zero_extendqisi2
 4389 005a 013B     		subs	r3, r3, #1
 4390 005c DBB2     		uxtb	r3, r3
 4391              	.LVL617:
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {						/* On the cluster boundary? */
 4392              		.loc 1 2686 0
 4393 005e 13EA5129 		ands	r9, r3, r1, lsr #9
 4394 0062 1FD1     		bne	.L387
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4395              		.loc 1 2687 0
 4396 0064 11B9     		cbnz	r1, .L388
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;			/* Follow from the origin */
 4397              		.loc 1 2688 0
 4398 0066 D4F81002 		ldr	r0, [r4, #528]
 4399              	.LVL618:
 4400 006a 0AE0     		b	.L389
 4401              	.LVL619:
 4402              	.L388:
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
2690:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl)
 4403              		.loc 1 2691 0
 4404 006c D4F82432 		ldr	r3, [r4, #548]
 4405              	.LVL620:
 4406 0070 1BB1     		cbz	r3, .L390
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4407              		.loc 1 2692 0
 4408 0072 2046     		mov	r0, r4
 4409              	.LVL621:
 4410 0074 FFF7FEFF 		bl	clmt_clust
 4411              	.LVL622:
 4412 0078 03E0     		b	.L389
 4413              	.LVL623:
 4414              	.L390:
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
2694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
 4415              		.loc 1 2695 0
 4416 007a D4F81412 		ldr	r1, [r4, #532]
 4417              	.LVL624:
 4418 007e FFF7FEFF 		bl	get_fat
ARM GAS  /tmp/cclwbenu.s 			page 133


 4419              	.LVL625:
 4420              	.L389:
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
 4421              		.loc 1 2697 0
 4422 0082 0128     		cmp	r0, #1
 4423 0084 04D8     		bhi	.L391
 4424              		.loc 1 2697 0 is_stmt 0 discriminator 1
 4425 0086 0220     		movs	r0, #2
 4426              	.LVL626:
 4427 0088 84F80702 		strb	r0, [r4, #519]
 4428 008c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4429              	.LVL627:
 4430              	.L391:
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4431              		.loc 1 2698 0 is_stmt 1
 4432 0090 B0F1FF3F 		cmp	r0, #-1
 4433 0094 04D1     		bne	.L392
 4434              		.loc 1 2698 0 is_stmt 0 discriminator 1
 4435 0096 0120     		movs	r0, #1
 4436              	.LVL628:
 4437 0098 84F80702 		strb	r0, [r4, #519]
 4438 009c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4439              	.LVL629:
 4440              	.L392:
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4441              		.loc 1 2699 0 is_stmt 1
 4442 00a0 C4F81402 		str	r0, [r4, #532]
 4443              	.LVL630:
 4444              	.L387:
2700:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 4445              		.loc 1 2701 0
 4446 00a4 D4F800A2 		ldr	r10, [r4, #512]
 4447 00a8 5046     		mov	r0, r10
 4448 00aa D4F81412 		ldr	r1, [r4, #532]
 4449 00ae FFF7FEFF 		bl	clust2sect
 4450              	.LVL631:
2702:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 4451              		.loc 1 2702 0
 4452 00b2 0546     		mov	r5, r0
 4453 00b4 20B9     		cbnz	r0, .L393
 4454              		.loc 1 2702 0 is_stmt 0 discriminator 1
 4455 00b6 0220     		movs	r0, #2
 4456              	.LVL632:
 4457 00b8 84F80702 		strb	r0, [r4, #519]
 4458 00bc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4459              	.LVL633:
 4460              	.L393:
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4461              		.loc 1 2703 0 is_stmt 1
 4462 00c0 4D44     		add	r5, r5, r9
 4463              	.LVL634:
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
 4464              		.loc 1 2705 0
 4465 00c2 5FEA562B 		lsrs	fp, r6, #9
ARM GAS  /tmp/cclwbenu.s 			page 134


 4466              	.LVL635:
 4467 00c6 28D0     		beq	.L394
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 4468              		.loc 1 2706 0
 4469 00c8 09EB0B03 		add	r3, r9, fp
 4470 00cc 9AF80222 		ldrb	r2, [r10, #514]	@ zero_extendqisi2
 4471 00d0 9342     		cmp	r3, r2
 4472 00d2 01D9     		bls	.L395
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
 4473              		.loc 1 2707 0
 4474 00d4 C9EB020B 		rsb	fp, r9, r2
 4475              	.LVL636:
 4476              	.L395:
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, rbuff, sect, cc) != RES_OK)
 4477              		.loc 1 2708 0
 4478 00d8 9AF80102 		ldrb	r0, [r10, #513]	@ zero_extendqisi2
 4479 00dc 4146     		mov	r1, r8
 4480 00de 2A46     		mov	r2, r5
 4481 00e0 5B46     		mov	r3, fp
 4482 00e2 FFF7FEFF 		bl	disk_read
 4483              	.LVL637:
 4484 00e6 20B1     		cbz	r0, .L396
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4485              		.loc 1 2709 0
 4486 00e8 0120     		movs	r0, #1
 4487 00ea 84F80702 		strb	r0, [r4, #519]
 4488 00ee BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4489              	.LVL638:
 4490              	.L396:
2710:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
2711:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fs->wflag && fp->fs->winsect - sect < cc)
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win.d8, SS(fp->fs));
2714:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
 4491              		.loc 1 2715 0
 4492 00f2 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4493 00f6 13F0400F 		tst	r3, #64
 4494 00fa 0BD0     		beq	.L397
 4495              		.loc 1 2715 0 is_stmt 0 discriminator 1
 4496 00fc D4F81802 		ldr	r0, [r4, #536]
 4497 0100 401B     		subs	r0, r0, r5
 4498 0102 5845     		cmp	r0, fp
 4499 0104 06D2     		bcs	.L397
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf.d8, SS(fp->fs));
 4500              		.loc 1 2716 0 is_stmt 1
 4501 0106 08EB4020 		add	r0, r8, r0, lsl #9
 4502 010a 2146     		mov	r1, r4
 4503 010c 4FF40072 		mov	r2, #512
 4504 0110 FFF7FEFF 		bl	mem_cpy
 4505              	.LVL639:
 4506              	.L397:
2717:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2718:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
 4507              		.loc 1 2719 0
 4508 0114 4FEA4B25 		lsl	r5, fp, #9
ARM GAS  /tmp/cclwbenu.s 			page 135


 4509              	.LVL640:
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4510              		.loc 1 2720 0
 4511 0118 39E0     		b	.L398
 4512              	.LVL641:
 4513              	.L394:
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->dsect != sect) {			/* Load data sector if not in cache */
 4514              		.loc 1 2723 0
 4515 011a D4F81822 		ldr	r2, [r4, #536]
 4516 011e AA42     		cmp	r2, r5
 4517 0120 25D0     		beq	.L399
2724:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
 4518              		.loc 1 2725 0
 4519 0122 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4520 0126 13F0400F 		tst	r3, #64
 4521 012a 11D0     		beq	.L400
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 4522              		.loc 1 2726 0
 4523 012c 9AF80102 		ldrb	r0, [r10, #513]	@ zero_extendqisi2
 4524 0130 2146     		mov	r1, r4
 4525 0132 0123     		movs	r3, #1
 4526 0134 FFF7FEFF 		bl	disk_write
 4527              	.LVL642:
 4528 0138 20B1     		cbz	r0, .L401
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 4529              		.loc 1 2727 0
 4530 013a 0120     		movs	r0, #1
 4531 013c 84F80702 		strb	r0, [r4, #519]
 4532 0140 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4533              	.LVL643:
 4534              	.L401:
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
 4535              		.loc 1 2728 0
 4536 0144 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4537 0148 23F04003 		bic	r3, r3, #64
 4538 014c 84F80632 		strb	r3, [r4, #518]
 4539              	.L400:
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)	/* Fill sector cache */
 4540              		.loc 1 2731 0
 4541 0150 D4F80032 		ldr	r3, [r4, #512]
 4542 0154 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 4543 0158 2146     		mov	r1, r4
 4544 015a 2A46     		mov	r2, r5
 4545 015c 0123     		movs	r3, #1
 4546 015e FFF7FEFF 		bl	disk_read
 4547              	.LVL644:
 4548 0162 20B1     		cbz	r0, .L399
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4549              		.loc 1 2732 0
 4550 0164 0120     		movs	r0, #1
 4551 0166 84F80702 		strb	r0, [r4, #519]
 4552 016a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /tmp/cclwbenu.s 			page 136


 4553              	.LVL645:
 4554              	.L399:
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2734:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = sect;
 4555              		.loc 1 2735 0
 4556 016e C4F81852 		str	r5, [r4, #536]
 4557              	.LVL646:
 4558              	.L386:
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer 
 4559              		.loc 1 2737 0
 4560 0172 D4F80812 		ldr	r1, [r4, #520]
 4561 0176 C1F30801 		ubfx	r1, r1, #0, #9
 4562 017a C1F50075 		rsb	r5, r1, #512
 4563              	.LVL647:
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;
 4564              		.loc 1 2738 0
 4565 017e B542     		cmp	r5, r6
 4566 0180 00D9     		bls	.L402
 4567 0182 3546     		mov	r5, r6
 4568              	.LVL648:
 4569              	.L402:
2739:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, fp->dsect) != FR_OK)		/* Move sector window */
2741:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, &fp->fs->win.d8[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2743:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, &fp->buf.d8[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
 4570              		.loc 1 2744 0
 4571 0184 4046     		mov	r0, r8
 4572 0186 2144     		add	r1, r1, r4
 4573 0188 2A46     		mov	r2, r5
 4574 018a FFF7FEFF 		bl	mem_cpy
 4575              	.LVL649:
 4576              	.L398:
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 4577              		.loc 1 2683 0
 4578 018e A844     		add	r8, r8, r5
 4579              	.LVL650:
 4580 0190 D4F80832 		ldr	r3, [r4, #520]
 4581 0194 2B44     		add	r3, r3, r5
 4582 0196 C4F80832 		str	r3, [r4, #520]
 4583 019a 3B68     		ldr	r3, [r7]
 4584 019c 2B44     		add	r3, r3, r5
 4585 019e 3B60     		str	r3, [r7]
 4586 01a0 761B     		subs	r6, r6, r5
 4587              	.LVL651:
 4588              	.L385:
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4589              		.loc 1 2682 0
 4590 01a2 002E     		cmp	r6, #0
 4591 01a4 7FF44EAF 		bne	.L403
2745:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
ARM GAS  /tmp/cclwbenu.s 			page 137


 4592              		.loc 1 2748 0
 4593 01a8 0020     		movs	r0, #0
 4594 01aa BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4595              	.LVL652:
 4596              	.L404:
 4597 01ae BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4598              	.LVL653:
 4599              	.L406:
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
 4600              		.loc 1 2678 0
 4601 01b2 0720     		movs	r0, #7
 4602              	.L383:
2749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4603              		.loc 1 2749 0
 4604 01b4 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4605              		.cfi_endproc
 4606              	.LFE99:
 4608              		.section	.text.f_write,"ax",%progbits
 4609              		.align	2
 4610              		.global	f_write
 4611              		.thumb
 4612              		.thumb_func
 4614              	f_write:
 4615              	.LFB100:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** 
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 
2754:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2755:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2756:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
2757:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 
2759:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void *buff,	/* Pointer to the data to be written */
2762:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
2764:Middlewares/Third_Party/FatFs/src/ff.c **** )
2765:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4616              		.loc 1 2765 0
 4617              		.cfi_startproc
 4618              		@ args = 0, pretend = 0, frame = 0
 4619              		@ frame_needed = 0, uses_anonymous_args = 0
 4620              	.LVL654:
 4621 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4622              	.LCFI48:
 4623              		.cfi_def_cfa_offset 40
 4624              		.cfi_offset 3, -40
 4625              		.cfi_offset 4, -36
 4626              		.cfi_offset 5, -32
 4627              		.cfi_offset 6, -28
 4628              		.cfi_offset 7, -24
 4629              		.cfi_offset 8, -20
 4630              		.cfi_offset 9, -16
 4631              		.cfi_offset 10, -12
 4632              		.cfi_offset 11, -8
ARM GAS  /tmp/cclwbenu.s 			page 138


 4633              		.cfi_offset 14, -4
 4634 0004 0446     		mov	r4, r0
 4635 0006 8846     		mov	r8, r1
 4636 0008 1646     		mov	r6, r2
 4637 000a 1F46     		mov	r7, r3
 4638              	.LVL655:
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect;
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
 4639              		.loc 1 2773 0
 4640 000c 0023     		movs	r3, #0
 4641              	.LVL656:
 4642 000e 3B60     		str	r3, [r7]
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);						/* Check validity */
 4643              		.loc 1 2775 0
 4644 0010 FFF7FEFF 		bl	validate
 4645              	.LVL657:
2776:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4646              		.loc 1 2776 0
 4647 0014 0028     		cmp	r0, #0
 4648 0016 40F0F180 		bne	.L433
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)							/* Check error */
 4649              		.loc 1 2777 0
 4650 001a 94F80702 		ldrb	r0, [r4, #519]	@ zero_extendqisi2
 4651              	.LVL658:
 4652 001e 0028     		cmp	r0, #0
 4653 0020 40F0EF80 		bne	.L410
2778:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
2779:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 4654              		.loc 1 2779 0
 4655 0024 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4656 0028 13F0020F 		tst	r3, #2
 4657 002c 00F0E880 		beq	.L435
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
2781:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
 4658              		.loc 1 2781 0
 4659 0030 D4F80832 		ldr	r3, [r4, #520]
 4660 0034 F342     		cmn	r3, r6
 4661 0036 C0F0CD80 		bcc	.L412
 4662 003a 0026     		movs	r6, #0
 4663              	.LVL659:
 4664 003c CAE0     		b	.L412
 4665              	.LVL660:
 4666              	.L431:
2782:Middlewares/Third_Party/FatFs/src/ff.c **** 
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 4667              		.loc 1 2785 0
 4668 003e D4F80812 		ldr	r1, [r4, #520]
 4669 0042 C1F30803 		ubfx	r3, r1, #0, #9
ARM GAS  /tmp/cclwbenu.s 			page 139


 4670 0046 002B     		cmp	r3, #0
 4671 0048 40F0A680 		bne	.L413
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 4672              		.loc 1 2786 0
 4673 004c D4F80022 		ldr	r2, [r4, #512]
 4674 0050 92F80232 		ldrb	r3, [r2, #514]	@ zero_extendqisi2
 4675 0054 013B     		subs	r3, r3, #1
 4676 0056 DBB2     		uxtb	r3, r3
 4677              	.LVL661:
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {					/* On the cluster boundary? */
 4678              		.loc 1 2787 0
 4679 0058 13EA5129 		ands	r9, r3, r1, lsr #9
 4680 005c 2CD1     		bne	.L414
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 4681              		.loc 1 2788 0
 4682 005e 31B9     		cbnz	r1, .L415
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;		/* Follow from the origin */
 4683              		.loc 1 2789 0
 4684 0060 D4F81002 		ldr	r0, [r4, #528]
 4685              	.LVL662:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0)			/* When no cluster is allocated, */
 4686              		.loc 1 2790 0
 4687 0064 78B9     		cbnz	r0, .L416
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
 4688              		.loc 1 2791 0
 4689 0066 1046     		mov	r0, r2
 4690              	.LVL663:
 4691 0068 FFF7FEFF 		bl	create_chain
 4692              	.LVL664:
 4693 006c 0BE0     		b	.L416
 4694              	.LVL665:
 4695              	.L415:
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* Middle or end of the file */
2793:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl)
 4696              		.loc 1 2794 0
 4697 006e D4F82432 		ldr	r3, [r4, #548]
 4698              	.LVL666:
 4699 0072 1BB1     		cbz	r3, .L417
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4700              		.loc 1 2795 0
 4701 0074 2046     		mov	r0, r4
 4702 0076 FFF7FEFF 		bl	clmt_clust
 4703              	.LVL667:
 4704 007a 04E0     		b	.L416
 4705              	.LVL668:
 4706              	.L417:
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
2797:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
 4707              		.loc 1 2798 0
 4708 007c 1046     		mov	r0, r2
 4709 007e D4F81412 		ldr	r1, [r4, #532]
 4710              	.LVL669:
 4711 0082 FFF7FEFF 		bl	create_chain
 4712              	.LVL670:
 4713              	.L416:
ARM GAS  /tmp/cclwbenu.s 			page 140


2799:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 4714              		.loc 1 2800 0
 4715 0086 0028     		cmp	r0, #0
 4716 0088 00F0A780 		beq	.L418
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 4717              		.loc 1 2801 0
 4718 008c 0128     		cmp	r0, #1
 4719 008e 04D1     		bne	.L419
 4720              		.loc 1 2801 0 is_stmt 0 discriminator 1
 4721 0090 0220     		movs	r0, #2
 4722              	.LVL671:
 4723 0092 84F80702 		strb	r0, [r4, #519]
 4724 0096 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4725              	.LVL672:
 4726              	.L419:
2802:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4727              		.loc 1 2802 0 is_stmt 1
 4728 009a B0F1FF3F 		cmp	r0, #-1
 4729 009e 04D1     		bne	.L420
 4730              		.loc 1 2802 0 is_stmt 0 discriminator 1
 4731 00a0 0120     		movs	r0, #1
 4732              	.LVL673:
 4733 00a2 84F80702 		strb	r0, [r4, #519]
 4734 00a6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4735              	.LVL674:
 4736              	.L420:
2803:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 4737              		.loc 1 2803 0 is_stmt 1
 4738 00aa C4F81402 		str	r0, [r4, #532]
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
 4739              		.loc 1 2804 0
 4740 00ae D4F81032 		ldr	r3, [r4, #528]
 4741 00b2 0BB9     		cbnz	r3, .L414
 4742              		.loc 1 2804 0 is_stmt 0 discriminator 1
 4743 00b4 C4F81002 		str	r0, [r4, #528]
 4744              	.LVL675:
 4745              	.L414:
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2806:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))	/* Write-back sector cache */
2808:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
2809:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2810:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
 4746              		.loc 1 2810 0 is_stmt 1
 4747 00b8 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4748 00bc 13F0400F 		tst	r3, #64
 4749 00c0 15D0     		beq	.L421
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 4750              		.loc 1 2811 0
 4751 00c2 D4F80032 		ldr	r3, [r4, #512]
 4752 00c6 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 4753 00ca 2146     		mov	r1, r4
 4754 00cc D4F81822 		ldr	r2, [r4, #536]
 4755 00d0 0123     		movs	r3, #1
 4756 00d2 FFF7FEFF 		bl	disk_write
 4757              	.LVL676:
ARM GAS  /tmp/cclwbenu.s 			page 141


 4758 00d6 20B1     		cbz	r0, .L422
2812:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4759              		.loc 1 2812 0
 4760 00d8 0120     		movs	r0, #1
 4761 00da 84F80702 		strb	r0, [r4, #519]
 4762 00de BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4763              	.LVL677:
 4764              	.L422:
2813:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 4765              		.loc 1 2813 0
 4766 00e2 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4767 00e6 23F04003 		bic	r3, r3, #64
 4768 00ea 84F80632 		strb	r3, [r4, #518]
 4769              	.L421:
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2815:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2816:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 4770              		.loc 1 2816 0
 4771 00ee D4F800A2 		ldr	r10, [r4, #512]
 4772 00f2 5046     		mov	r0, r10
 4773 00f4 D4F81412 		ldr	r1, [r4, #532]
 4774 00f8 FFF7FEFF 		bl	clust2sect
 4775              	.LVL678:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 4776              		.loc 1 2817 0
 4777 00fc 0546     		mov	r5, r0
 4778 00fe 20B9     		cbnz	r0, .L423
 4779              		.loc 1 2817 0 is_stmt 0 discriminator 1
 4780 0100 0220     		movs	r0, #2
 4781              	.LVL679:
 4782 0102 84F80702 		strb	r0, [r4, #519]
 4783 0106 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4784              	.LVL680:
 4785              	.L423:
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4786              		.loc 1 2818 0 is_stmt 1
 4787 010a 4D44     		add	r5, r5, r9
 4788              	.LVL681:
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
 4789              		.loc 1 2820 0
 4790 010c 5FEA562B 		lsrs	fp, r6, #9
 4791              	.LVL682:
 4792 0110 29D0     		beq	.L424
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 4793              		.loc 1 2821 0
 4794 0112 09EB0B03 		add	r3, r9, fp
 4795 0116 9AF80222 		ldrb	r2, [r10, #514]	@ zero_extendqisi2
 4796 011a 9342     		cmp	r3, r2
 4797 011c 01D9     		bls	.L425
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
 4798              		.loc 1 2822 0
 4799 011e C9EB020B 		rsb	fp, r9, r2
 4800              	.LVL683:
 4801              	.L425:
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
 4802              		.loc 1 2823 0
ARM GAS  /tmp/cclwbenu.s 			page 142


 4803 0122 9AF80102 		ldrb	r0, [r10, #513]	@ zero_extendqisi2
 4804 0126 4146     		mov	r1, r8
 4805 0128 2A46     		mov	r2, r5
 4806 012a 5B46     		mov	r3, fp
 4807 012c FFF7FEFF 		bl	disk_write
 4808              	.LVL684:
 4809 0130 20B1     		cbz	r0, .L426
2824:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4810              		.loc 1 2824 0
 4811 0132 0120     		movs	r0, #1
 4812 0134 84F80702 		strb	r0, [r4, #519]
 4813 0138 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4814              	.LVL685:
 4815              	.L426:
2825:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
2826:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct 
2828:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->fs->win.d8, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fs->wflag = 0;
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2831:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write 
 4816              		.loc 1 2832 0
 4817 013c D4F81812 		ldr	r1, [r4, #536]
 4818 0140 491B     		subs	r1, r1, r5
 4819 0142 5945     		cmp	r1, fp
 4820 0144 0CD2     		bcs	.L427
2833:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf.d8, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
 4821              		.loc 1 2833 0
 4822 0146 2046     		mov	r0, r4
 4823 0148 08EB4121 		add	r1, r8, r1, lsl #9
 4824 014c 4FF40072 		mov	r2, #512
 4825 0150 FFF7FEFF 		bl	mem_cpy
 4826              	.LVL686:
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
 4827              		.loc 1 2834 0
 4828 0154 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4829 0158 23F04003 		bic	r3, r3, #64
 4830 015c 84F80632 		strb	r3, [r4, #518]
 4831              	.L427:
2835:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2836:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2837:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
 4832              		.loc 1 2838 0
 4833 0160 4FEA4B25 		lsl	r5, fp, #9
 4834              	.LVL687:
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4835              		.loc 1 2839 0
 4836 0164 2CE0     		b	.L428
 4837              	.LVL688:
 4838              	.L424:
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2841:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fp->fs)) ABORT(fp->fs, FR_DISK_ERR);
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->winsect = sect;
ARM GAS  /tmp/cclwbenu.s 			page 143


2845:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2846:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2847:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->dsect != sect) {		/* Fill sector cache with file data */
 4839              		.loc 1 2847 0
 4840 0166 D4F81832 		ldr	r3, [r4, #536]
 4841 016a AB42     		cmp	r3, r5
 4842 016c 12D0     		beq	.L429
2848:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr < fp->fsize &&
 4843              		.loc 1 2848 0
 4844 016e D4F80822 		ldr	r2, [r4, #520]
 4845 0172 D4F80C32 		ldr	r3, [r4, #524]
 4846 0176 9A42     		cmp	r2, r3
 4847 0178 0CD2     		bcs	.L429
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)
 4848              		.loc 1 2849 0 discriminator 1
 4849 017a 9AF80102 		ldrb	r0, [r10, #513]	@ zero_extendqisi2
 4850 017e 2146     		mov	r1, r4
 4851 0180 2A46     		mov	r2, r5
 4852 0182 0123     		movs	r3, #1
 4853 0184 FFF7FEFF 		bl	disk_read
 4854              	.LVL689:
2848:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr < fp->fsize &&
 4855              		.loc 1 2848 0 discriminator 1
 4856 0188 20B1     		cbz	r0, .L429
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 4857              		.loc 1 2850 0
 4858 018a 0120     		movs	r0, #1
 4859 018c 84F80702 		strb	r0, [r4, #519]
 4860 0190 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4861              	.LVL690:
 4862              	.L429:
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2852:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = sect;
 4863              		.loc 1 2853 0
 4864 0194 C4F81852 		str	r5, [r4, #536]
 4865              	.LVL691:
 4866              	.L413:
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
 4867              		.loc 1 2855 0
 4868 0198 D4F80802 		ldr	r0, [r4, #520]
 4869 019c C0F30800 		ubfx	r0, r0, #0, #9
 4870 01a0 C0F50075 		rsb	r5, r0, #512
 4871              	.LVL692:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;
 4872              		.loc 1 2856 0
 4873 01a4 B542     		cmp	r5, r6
 4874 01a6 00D9     		bls	.L430
 4875 01a8 3546     		mov	r5, r6
 4876              	.LVL693:
 4877              	.L430:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, fp->dsect) != FR_OK)	/* Move sector window */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(&fp->fs->win.d8[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fs->wflag = 1;
ARM GAS  /tmp/cclwbenu.s 			page 144


2862:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(&fp->buf.d8[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
 4878              		.loc 1 2863 0
 4879 01aa 2044     		add	r0, r0, r4
 4880 01ac 4146     		mov	r1, r8
 4881 01ae 2A46     		mov	r2, r5
 4882 01b0 FFF7FEFF 		bl	mem_cpy
 4883              	.LVL694:
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA__DIRTY;
 4884              		.loc 1 2864 0
 4885 01b4 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4886 01b8 43F04003 		orr	r3, r3, #64
 4887 01bc 84F80632 		strb	r3, [r4, #518]
 4888              	.L428:
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 4889              		.loc 1 2784 0
 4890 01c0 A844     		add	r8, r8, r5
 4891              	.LVL695:
 4892 01c2 D4F80832 		ldr	r3, [r4, #520]
 4893 01c6 2B44     		add	r3, r3, r5
 4894 01c8 C4F80832 		str	r3, [r4, #520]
 4895 01cc 3B68     		ldr	r3, [r7]
 4896 01ce 2B44     		add	r3, r3, r5
 4897 01d0 3B60     		str	r3, [r7]
 4898 01d2 761B     		subs	r6, r6, r5
 4899              	.LVL696:
 4900              	.L412:
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
 4901              		.loc 1 2783 0
 4902 01d4 002E     		cmp	r6, #0
 4903 01d6 7FF432AF 		bne	.L431
 4904              	.L418:
2865:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
 4905              		.loc 1 2868 0
 4906 01da D4F80832 		ldr	r3, [r4, #520]
 4907 01de D4F80C22 		ldr	r2, [r4, #524]
 4908 01e2 9342     		cmp	r3, r2
 4909 01e4 01D9     		bls	.L432
 4910              		.loc 1 2868 0 is_stmt 0 discriminator 1
 4911 01e6 C4F80C32 		str	r3, [r4, #524]
 4912              	.L432:
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
 4913              		.loc 1 2869 0 is_stmt 1
 4914 01ea 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4915 01ee 43F02003 		orr	r3, r3, #32
 4916 01f2 84F80632 		strb	r3, [r4, #518]
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
 4917              		.loc 1 2871 0
 4918 01f6 0020     		movs	r0, #0
 4919 01f8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4920              	.LVL697:
 4921              	.L433:
 4922 01fc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /tmp/cclwbenu.s 			page 145


 4923              	.LVL698:
 4924              	.L435:
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
 4925              		.loc 1 2780 0
 4926 0200 0720     		movs	r0, #7
 4927              	.L410:
2872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4928              		.loc 1 2872 0
 4929 0202 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4930              		.cfi_endproc
 4931              	.LFE100:
 4933 0206 00BF     		.section	.text.putc_bfd,"ax",%progbits
 4934              		.align	2
 4935              		.thumb
 4936              		.thumb_func
 4938              	putc_bfd:
 4939              	.LFB117:
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 
2877:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2878:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 
2881:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** )
2884:Middlewares/Third_Party/FatFs/src/ff.c **** {
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);					/* Check validity of the object */
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write-back dirty buffer */
2894:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
2899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2900:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2901:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fp->fs, fp->dir_sect);
2903:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
2904:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fp->dir_ptr;
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, fp->sclust);					/* Update start cluster */
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();							/* Update updated time */
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_LstAccDate, 0);
2911:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__WRITTEN;
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->wflag = 1;
ARM GAS  /tmp/cclwbenu.s 			page 146


2913:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fp->fs);
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2916:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
2919:Middlewares/Third_Party/FatFs/src/ff.c **** }
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 
2921:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 
2926:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2927:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
2928:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 
2930:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp		/* Pointer to the file object to be closed */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** )
2933:Middlewares/Third_Party/FatFs/src/ff.c **** {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 
2937:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
2940:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(fp);				/* Lock volume */
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2944:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
2945:Middlewares/Third_Party/FatFs/src/ff.c **** 			FATFS *fs = fp->fs;
2946:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2947:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2948:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->lockid);	/* Decrement file open counter */
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs = 0;				/* Invalidate file object */
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
2954:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2958:Middlewares/Third_Party/FatFs/src/ff.c **** }
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** 
2961:Middlewares/Third_Party/FatFs/src/ff.c **** 
2962:Middlewares/Third_Party/FatFs/src/ff.c **** 
2963:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2964:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
2965:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 
2967:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
2968:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
2969:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
ARM GAS  /tmp/cclwbenu.s 			page 147


2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** )
2972:Middlewares/Third_Party/FatFs/src/ff.c **** {
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 
2979:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 
2981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
2983:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
2988:Middlewares/Third_Party/FatFs/src/ff.c **** )
2989:Middlewares/Third_Party/FatFs/src/ff.c **** {
2990:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
2992:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
2993:Middlewares/Third_Party/FatFs/src/ff.c **** 
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
2997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dj.dir) {
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->cdir = dj.sclust;	/* Start directory itself */
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.dir[DIR_Attr] & AM_DIR)	/* Reached to the directory */
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->cdir = ld_clust(dj.fs, dj.dir);
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3015:Middlewares/Third_Party/FatFs/src/ff.c **** }
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 
3018:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3019:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** )
3023:Middlewares/Third_Party/FatFs/src/ff.c **** {
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
ARM GAS  /tmp/cclwbenu.s 			page 148


3027:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, (const TCHAR**)&buff, 0);	/* Get current volume */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.sclust = dj.fs->cdir;			/* Start to follow upper directory from current directory */
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((ccl = dj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(&dj, 1);			/* Get parent directory */
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3043:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(&dj, 0);
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.sclust = ld_clust(dj.fs, dj.dir);	/* Goto parent directory */
3046:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(&dj, 0);
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {							/* Find the entry links to the child directory */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_read(&dj, 0);
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ccl == ld_clust(dj.fs, dj.dir)) break;	/* Found the entry */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(&dj, 0);	
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3056:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno.lfname = buff;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno.lfsize = i;
3059:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = fno.fname;
3062:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*buff) tp = buff;
3064:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (n = 0; tp[n]; n++) ;
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < n + 3) {
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE; break;
3068:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (n) buff[--i] = tp[--n];
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 			buff[--i] = '/';
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3074:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3077:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
ARM GAS  /tmp/cclwbenu.s 			page 149


3084:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3091:Middlewares/Third_Party/FatFs/src/ff.c **** }
3092:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 
3097:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3098:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3099:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3100:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 
3102:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* File pointer from top of file */
3105:Middlewares/Third_Party/FatFs/src/ff.c **** )
3106:Middlewares/Third_Party/FatFs/src/ff.c **** {
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect, ifptr;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 
3114:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);					/* Check validity of the object */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)						/* Check error */
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 
3119:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(fp->fs, cl);
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
ARM GAS  /tmp/cclwbenu.s 			page 150


3141:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen)
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->fsize)		/* Clip offset at the file size */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs = fp->fsize;
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fp->fs, fp->clust);
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3157:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 							ABORT(fp->fs, FR_DISK_ERR);
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= ~FA__DIRTY;
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fp->fs->drv, fp->buf.d8, dsc, 1) != RES_OK)	/* Load current sector */
3165:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
3166:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->dsect = dsc;
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3169:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3172:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
3177:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			 && !(fp->flag & FA_WRITE)
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 			) ofs = fp->fsize;
3181:Middlewares/Third_Party/FatFs/src/ff.c **** 
3182:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
3184:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
3187:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->sclust;						/* start from the first cluster */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(fp->fs, 0);
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
ARM GAS  /tmp/cclwbenu.s 			page 151


3198:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
3199:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3200:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3201:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3202:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
3204:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
3205:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* When disk gets full, clip file size */
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = bcs; break;
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3211:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3212:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3213:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
3216:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fptr += bcs;
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs;
3219:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fp->fs)) {
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3230:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fp->fs->drv, fp->buf.d8, nsect, 1) != RES_OK)	/* Fill sector cache */
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
3239:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = nsect;
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3242:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
3246:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3247:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3249:Middlewares/Third_Party/FatFs/src/ff.c **** 
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
3251:Middlewares/Third_Party/FatFs/src/ff.c **** }
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 
3253:Middlewares/Third_Party/FatFs/src/ff.c **** 
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 152


3255:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
3256:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3257:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
3258:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3263:Middlewares/Third_Party/FatFs/src/ff.c **** )
3264:Middlewares/Third_Party/FatFs/src/ff.c **** {
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs;
3267:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 
3272:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&fs, &path, 0);
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fs = fs;
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(*dp);
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
3280:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir) {						/* It is not the origin directory itself */
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sclust = ld_clust(fs, dp->dir);
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 				else							/* The object is a file */
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->id = fs->id;
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
3289:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dp->sclust) {
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!dp->lockid)
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = FR_TOO_MANY_OPEN_FILES;
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = 0;	/* Root directory need not to be locked */
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3299:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3301:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 
3306:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3307:Middlewares/Third_Party/FatFs/src/ff.c **** }
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 
3309:Middlewares/Third_Party/FatFs/src/ff.c **** 
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 153


3312:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3313:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
3314:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 
3316:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
3318:Middlewares/Third_Party/FatFs/src/ff.c **** )
3319:Middlewares/Third_Party/FatFs/src/ff.c **** {
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 
3322:Middlewares/Third_Party/FatFs/src/ff.c **** 
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(dp);
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3325:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 		FATFS *fs = dp->fs;
3327:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3328:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->lockid)				/* Decrement sub-directory open counter */
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->lockid);
3331:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
3332:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs = 0;				/* Invalidate directory object */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3337:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** }
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 
3341:Middlewares/Third_Party/FatFs/src/ff.c **** 
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 
3344:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3345:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
3346:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 
3348:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
3351:Middlewares/Third_Party/FatFs/src/ff.c **** )
3352:Middlewares/Third_Party/FatFs/src/ff.c **** {
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3354:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(dp);						/* Check validity of the object */
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_BUF(*dp);
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0;
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
ARM GAS  /tmp/cclwbenu.s 			page 154


3369:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0;
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_OK;
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_BUF();
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3378:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dp->fs, res);
3381:Middlewares/Third_Party/FatFs/src/ff.c **** }
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 
3385:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
3386:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3387:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find next file                                                        */
3388:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 
3390:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
3393:Middlewares/Third_Party/FatFs/src/ff.c **** )
3394:Middlewares/Third_Party/FatFs/src/ff.c **** {
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
3401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fno->lfname && pattern_matching(dp->pat, fno->lfname, 0, 0)) break;	/* Test for LFN if exist 
3403:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;	/* Test for SFN */
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 
3408:Middlewares/Third_Party/FatFs/src/ff.c **** }
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 
3412:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3413:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find first file                                                       */
3414:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 
3416:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
3419:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
3421:Middlewares/Third_Party/FatFs/src/ff.c **** )
3422:Middlewares/Third_Party/FatFs/src/ff.c **** {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 155


3426:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
3427:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3431:Middlewares/Third_Party/FatFs/src/ff.c **** }
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
3434:Middlewares/Third_Party/FatFs/src/ff.c **** 
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 
3437:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
3438:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3439:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 
3442:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
3443:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
3445:Middlewares/Third_Party/FatFs/src/ff.c **** )
3446:Middlewares/Third_Party/FatFs/src/ff.c **** {
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3448:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3450:Middlewares/Third_Party/FatFs/src/ff.c **** 
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.dir) {		/* Found an object */
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
3460:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3468:Middlewares/Third_Party/FatFs/src/ff.c **** }
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 
3472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3474:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
3475:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 
3477:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
3481:Middlewares/Third_Party/FatFs/src/ff.c **** )
3482:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/cclwbenu.s 			page 156


3483:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, sect, stat;
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fat, *p;
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(fatfs, &path, 0);
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = *fatfs;
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clust is valid, return it without full cluster scan */
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust <= fs->n_fatent - 2) {
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clust;
3497:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3498:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 			fat = fs->fs_type;
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = 0;
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fat == FS_FAT12) {
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2;
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(fs, clst);
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fs->n_fatent;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect = fs->fatbase;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; p = 0;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!i) {
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(fs, sect++);
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 						p = fs->win.d8;
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = SS(fs);
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fat == FS_FAT16) {
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (LD_WORD(p) == 0) n++;
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (--clst);
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust = n;
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = n;
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3535:Middlewares/Third_Party/FatFs/src/ff.c **** }
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 157


3540:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3541:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 
3544:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3546:Middlewares/Third_Party/FatFs/src/ff.c **** )
3547:Middlewares/Third_Party/FatFs/src/ff.c **** {
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);						/* Check validity of the object */
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->err) {						/* Check error */
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = (FRESULT)fp->err;
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(fp->flag & FA_WRITE))		/* Check access mode */
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DENIED;
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fsize > fp->fptr) {
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(fp->fs, fp->sclust);
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->sclust = 0;
3568:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = get_fat(fp->fs, fp->clust);
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
3576:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3578:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (fp->flag & FA__DIRTY)) {
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DISK_ERR;
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
3584:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3586:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) fp->err = (FRESULT)res;
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
3591:Middlewares/Third_Party/FatFs/src/ff.c **** }
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** 
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/cclwbenu.s 			page 158


3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File or Directory                                            */
3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** )
3603:Middlewares/Third_Party/FatFs/src/ff.c **** {
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3605:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open object */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_RDO)
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 				dclst = ld_clust(dj.fs, dir);
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dclst && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-directory ? */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == dj.fs->cdir) {		 		/* Is it the current directory? */
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3636:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(&sdj, &dj, sizeof (DIR));	/* Open the sub-directory */
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.sclust = dclst;
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 2);
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item (excluding dot entries) */
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? (cannot remove) */
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3650:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);		/* Remove the directory entry */
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst)	/* Remove the cluster chain if exist */
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(dj.fs);
ARM GAS  /tmp/cclwbenu.s 			page 159


3654:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** }
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 
3665:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3666:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
3667:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3668:Middlewares/Third_Party/FatFs/src/ff.c **** 
3669:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
3671:Middlewares/Third_Party/FatFs/src/ff.c **** )
3672:Middlewares/Third_Party/FatFs/src/ff.c **** {
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir, n;
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm = GET_FATTIME();
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3678:Middlewares/Third_Party/FatFs/src/ff.c **** 
3679:Middlewares/Third_Party/FatFs/src/ff.c **** 
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
3694:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_window(dj.fs);
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(dj.fs, dcl);
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.fs->win.d8;
3699:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(dj.fs));
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Name] = '.';
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dir + SZ_DIRE, dir, SZ_DIRE); 	/* Create ".." entry */
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[SZ_DIRE + 1] = '.'; pcl = dj.sclust;
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir + SZ_DIRE, pcl);
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
ARM GAS  /tmp/cclwbenu.s 			page 160


3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(dj.fs);
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(dj.fs));
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3717:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
3721:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);	/* Created time */
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);					/* Table start cluster */
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3732:Middlewares/Third_Party/FatFs/src/ff.c **** 
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3734:Middlewares/Third_Party/FatFs/src/ff.c **** }
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 
3737:Middlewares/Third_Party/FatFs/src/ff.c **** 
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 
3739:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3740:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
3741:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3742:Middlewares/Third_Party/FatFs/src/ff.c **** 
3743:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
3747:Middlewares/Third_Party/FatFs/src/ff.c **** )
3748:Middlewares/Third_Party/FatFs/src/ff.c **** {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Is it a root directory? */
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* File or sub directory */
ARM GAS  /tmp/cclwbenu.s 			page 161


3768:Middlewares/Third_Party/FatFs/src/ff.c **** 				mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = (attr & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3772:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3777:Middlewares/Third_Party/FatFs/src/ff.c **** }
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 
3782:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3783:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename File/Directory                                                 */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 
3786:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object to be renamed */
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
3789:Middlewares/Third_Party/FatFs/src/ff.c **** )
3790:Middlewares/Third_Party/FatFs/src/ff.c **** {
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[21], *dir;
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number of the source object */
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&djo.fs, &path_old, 1);
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 		djn.fs = djo.fs;
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(djo);
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NSFLAG] & NS_DOT))
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3806:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&djo, 2);
3808:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3809:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Old object is found */
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!djo.dir) {						/* Is root dir? */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_FILE;
3812:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about object except name */
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = follow_path(&djn, path_new);	/* and make sure if new object name is not conflicting */
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_INVALID_DRIVE;
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3823:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where any interruption can cause a cross-link */
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
ARM GAS  /tmp/cclwbenu.s 			page 162


3825:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 						djo.fs->wflag = 1;
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.sclust != djn.sclust) {	/* Update .. entry in the sub-dir
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(djo.fs, dw);
3834:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = djo.fs->win.d8 + SZ_DIRE * 1;	/* Ptr to .. entry */
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
3836:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 									djo.fs->wflag = 1;
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
3839:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
3840:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_remove(&djo);		/* Remove old entry */
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK)
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = sync_fs(djo.fs);
3845:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3846:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of critical section */
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 
3854:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(djo.fs, res);
3855:Middlewares/Third_Party/FatFs/src/ff.c **** }
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** 
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 
3860:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3861:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
3862:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 
3864:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
3867:Middlewares/Third_Party/FatFs/src/ff.c **** )
3868:Middlewares/Third_Party/FatFs/src/ff.c **** {
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
ARM GAS  /tmp/cclwbenu.s 			page 163


3882:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {					/* Root directory */
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* File or sub-directory */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtTime, fno->ftime);
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtDate, fno->fdate);
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3892:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3897:Middlewares/Third_Party/FatFs/src/ff.c **** }
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 
3899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3900:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
3901:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
3902:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 
3906:Middlewares/Third_Party/FatFs/src/ff.c **** 
3907:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
3908:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3909:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get volume label                                                      */
3910:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 
3912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
3913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
3914:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
3916:Middlewares/Third_Party/FatFs/src/ff.c **** )
3917:Middlewares/Third_Party/FatFs/src/ff.c **** {
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
3923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.sclust = 0;					/* Open root directory */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {			/* A volume label is exist */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = j = 0;
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
ARM GAS  /tmp/cclwbenu.s 			page 164


3939:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (i < 11) ? dj.dir[i++] : ' ';
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsDBCS1(w) && i < 11 && IsDBCS2(dj.dir[i]))
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = w << 8 | dj.dir[i++];
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[j++] = ff_convert(w, 1);	/* OEM -> Unicode */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (j < 11);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(label, dj.dir, 11);
3946:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				j = 11;
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[j] = 0;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!j) break;
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (label[--j] == ' ');
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {	/* No label, return nul string */
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				label[0] = 0;
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
3961:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dj.fs, dj.fs->volbase);
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3964:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = dj.fs->fs_type == FS_FAT32 ? BS_VolID32 : BS_VolID;
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = LD_DWORD(&dj.fs->win.d8[i]);
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3970:Middlewares/Third_Party/FatFs/src/ff.c **** }
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 
3972:Middlewares/Third_Party/FatFs/src/ff.c **** 
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 
3974:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3976:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set volume label                                                      */
3977:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3978:Middlewares/Third_Party/FatFs/src/ff.c **** 
3979:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
3980:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** )
3982:Middlewares/Third_Party/FatFs/src/ff.c **** {
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3985:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE vn[11];
3986:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, sl;
3987:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
3988:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** 
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &label, 1);
3993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res) LEAVE_FF(dj.fs, res);
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create a volume label in directory form */
ARM GAS  /tmp/cclwbenu.s 			page 165


3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	vn[0] = 0;
3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (sl = 0; label[sl]; sl++) ;				/* Get name length */
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ; sl && label[sl - 1] == ' '; sl--) ;	/* Remove trailing spaces */
3999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sl) {	/* Create volume label in directory form */
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = j = 0;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
4002:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(label[i++]), 0);
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4005:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (BYTE)label[i++];
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w))
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (j < 10 && i < sl && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
4008:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
4009:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
4010:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
4016:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4017:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4018:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("\"*+,.:;<=>\?[]|\x7F", w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) /* Reject i
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(dj.fs, FR_INVALID_NAME);
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w >= 0x100) vn[j++] = (BYTE)(w >> 8);
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 			vn[j++] = (BYTE)w;
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i < sl);
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j < 11) vn[j++] = ' ';	/* Fill remaining name field */
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (vn[0] == DDEM) LEAVE_FF(dj.fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.sclust = 0;					/* Open root directory */
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* A volume label is found */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (vn[0]) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir, vn, 11);	/* Change the volume label name */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dj.dir + DIR_WrtTime, tm);
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[0] = DDEM;			/* Remove the volume label */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.fs->wflag = 1;
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(dj.fs);
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {					/* No volume label is found or error */
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (vn[0]) {				/* Create volume label as new */
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry for volume label */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4049:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZ_DIRE);	/* Set volume label */
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dj.dir, vn, 11);
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.dir[DIR_Attr] = AM_VOL;
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						tm = GET_FATTIME();
ARM GAS  /tmp/cclwbenu.s 			page 166


4053:Middlewares/Third_Party/FatFs/src/ff.c **** 						ST_DWORD(dj.dir + DIR_WrtTime, tm);
4054:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->wflag = 1;
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(dj.fs);
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
4063:Middlewares/Third_Party/FatFs/src/ff.c **** }
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 
4065:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 
4070:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4071:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly (available on only tiny cfg)      */
4072:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4073:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD && _FS_TINY
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 
4075:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
4080:Middlewares/Third_Party/FatFs/src/ff.c **** )
4081:Middlewares/Third_Party/FatFs/src/ff.c **** {
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD remain, clst, sect;
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt;
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect;
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);								/* Check validity of the object */
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)									/* Check error */
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ))						/* Check access mode */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream becomes busy */
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {			/* On the sector boundary? */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {							/* On the cluster boundary? */
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust : get_fat(fp->fs, fp->clust);
4107:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fp->fs, FR_INT_ERR);
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
ARM GAS  /tmp/cclwbenu.s 			page 167


4110:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fp->fs, fp->clust);		/* Get current data sector */
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fp->fs, FR_INT_ERR);
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, sect) != FR_OK)		/* Move sector window */
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->dsect = sect;
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fp->fs) - (WORD)(fp->fptr % SS(fp->fs));	/* Forward data from sector window */
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(&fp->fs->win.d8[(WORD)fp->fptr % SS(fp->fs)], rcnt);
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fp->fs, FR_INT_ERR);
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
4125:Middlewares/Third_Party/FatFs/src/ff.c **** }
4126:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 
4130:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
4131:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4132:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create file system on the logical drive                               */
4133:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #define N_ROOTDIR	512		/* Number of root directory entries for FAT12/16 */
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #define N_FATS		1		/* Number of FATs (1 or 2) */
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 
4138:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT au				/* Size of allocation unit in unit of byte or sector */
4142:Middlewares/Third_Party/FatFs/src/ff.c **** )
4143:Middlewares/Third_Party/FatFs/src/ff.c **** {
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD vst[] = { 1024,   512,  256,  128,   64,    32,   16,    8,    4,    2,   0};
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {32768, 16384, 8192, 4096, 2048, 16384, 8192, 4096, 2048, 1024, 512};
4146:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
4147:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, md, sys, *tbl, pdrv, part;
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n_clst, vs, n, wsect;
4149:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_dir, b_data;	/* LBA */
4151:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n_vol, n_rsv, n_fat, n_dir;	/* Size */
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
4154:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD eb[2];
4156:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 
4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfd > 1) return FR_INVALID_PARAMETER;
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
ARM GAS  /tmp/cclwbenu.s 			page 168


4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get disk statics */
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK || SS(fs) > _MAX_SS || SS(fs) < _MIN_SS)
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
4176:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part) {
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, fs->win.d8, 0, 1) != RES_OK) return FR_DISK_ERR;
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl = &fs->win.d8[MBR_Table + (part - 1) * SZ_PTE];
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = LD_DWORD(tbl + 8);	/* Volume start sector */
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol = LD_DWORD(tbl + 12);	/* Volume size */
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a partition in this function */
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au & (au - 1)) au = 0;
4194:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 		vs = n_vol / (2000 / (SS(fs) / 512));
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; vs < vst[i]; i++) ;
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au >= _MIN_SS) au /= SS(fs);	/* Number of sectors per cluster */
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au > 128) au = 128;
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-compute number of clusters and FAT sub-type */
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 	n_clst = n_vol / au;
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine offset and size of FAT structure */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 32;
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = 0;
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 1;
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = (DWORD)N_ROOTDIR * SZ_DIRE / SS(fs);
4219:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_fat = b_vol + n_rsv;				/* FAT area start sector */
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_dir = b_fat + n_fat * N_FATS;		/* Directory area start sector */
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_data = b_dir + n_dir;				/* Data area start sector */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
ARM GAS  /tmp/cclwbenu.s 			page 169


4224:Middlewares/Third_Party/FatFs/src/ff.c **** 
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Align data start sector to erase block boundary (for flash memory media) */
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (n - b_data) / N_FATS;
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv += n;
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat += n;
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {					/* FAT12/16: Expand FAT size */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat += n;
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 
4236:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine number of clusters and final check of validity of the FAT sub-type */
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 
4242:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x0C;		/* FAT32X */
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT12 && n_vol < 0x10000) {
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
4250:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4251:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4252:Middlewares/Third_Party/FatFs/src/ff.c **** 
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part) {
4254:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl = &fs->win.d8[MBR_Table + (part - 1) * SZ_PTE];
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[4] = sys;
4257:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to teh MBR */
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 		md = 0xF8;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sfd) {	/* No partition table (SFD) */
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF0;
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {	/* Create partition table (FDISK) */
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win.d8, 0, SS(fs));
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fs->win.d8 + MBR_Table;	/* Create partition table for single partition in the drive */
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[1] = 1;						/* Partition start head */
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[2] = 1;						/* Partition start sector */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[3] = 0;						/* Partition start cylinder */
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[4] = sys;					/* System type */
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[5] = 254;					/* Partition end head */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + n_vol) / 63 / 255;
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[7] = (BYTE)n;				/* End cylinder */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 63);			/* Partition start in LBA */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 12, n_vol);		/* Partition size in LBA */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);	/* MBR signature */
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to the MBR */
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF8;
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/cclwbenu.s 			page 170


4281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create BPB in the VBR */
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fs->win.d8;							/* Clear sector */
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(tbl, 0, SS(fs));
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
4287:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SS(fs);								/* Sector size */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_BytsPerSec, i);
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RsvdSecCnt, n_rsv);	/* Reserved sectors */
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < 0x10000) {					/* Number of total sectors */
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_TotSec16, n_vol);
4296:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_TotSec32, n_vol);
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_Media] = md;					/* Media descriptor */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_SecPerTrk, 63);		/* Number of sectors per track */
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_NumHeads, 255);		/* Number of heads */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_DWORD(tbl + BPB_HiddSec, b_vol);		/* Hidden sectors */
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = GET_FATTIME();						/* Use current time as VSN */
4304:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID32, n);		/* VSN */
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_FATSz32, n_fat);	/* Number of sectors per FAT */
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_RootClus, 2);	/* Root directory start cluster (2) */
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FSInfo, 1);		/* FSINFO record offset (VBR + 1) */
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_BkBootSec, 6);	/* Backup boot record offset (VBR + 6) */
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID, n);		/* VSN */
4315:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum] = 0x80;				/* Drive number */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BS_55AA, 0xAA55);			/* Signature (Offset is fixed here regardless of sector size) */
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR + 6) */
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 6, 1);
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize FAT area */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	wsect = b_fat;
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < N_FATS; i++) {		/* Initialize each FAT copy */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = md;								/* Media descriptor byte */
4331:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt != FS_FAT32) {
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= 0xFFFFFF00;
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT32) */
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 4, 0xFFFFFFFF);
ARM GAS  /tmp/cclwbenu.s 			page 171


4338:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 0x0FFFFFFF);	/* Reserve cluster #2 for root directory */
4339:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4342:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize root directory */
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--i);
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 
4356:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM	/* Erase data area if needed */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 		eb[0] = wsect; eb[1] = wsect + (n_clst - ((fmt == FS_FAT32) ? 1 : 0)) * au - 1;
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, eb);
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4361:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create FSINFO if needed */
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_LeadSig, 0x41615252);
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_StrucSig, 0x61417272);
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BS_55AA, 0xAA55);
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR + 1) */
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR + 7) */
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4373:Middlewares/Third_Party/FatFs/src/ff.c **** 
4374:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
4375:Middlewares/Third_Party/FatFs/src/ff.c **** }
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** 
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 
4379:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
4380:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4381:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
4382:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 
4384:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD szt[],	/* Pointer to the size table for each partitions */
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
4388:Middlewares/Third_Party/FatFs/src/ff.c **** )
4389:Middlewares/Third_Party/FatFs/src/ff.c **** {
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 172


4395:Middlewares/Third_Party/FatFs/src/ff.c **** 
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine CHS in the table regardless of the drive geometry */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
4410:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
4427:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x06;						/* System type (temporary setting) */
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(p + 8, s_part);			/* Start sector in LBA */
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(p + 12, sz_part);			/* Partition size */
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(p, 0xAA55);
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
4443:Middlewares/Third_Party/FatFs/src/ff.c **** }
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 
4446:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
4447:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 173


4452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
4453:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
4455:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
4460:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
4461:Middlewares/Third_Party/FatFs/src/ff.c **** )
4462:Middlewares/Third_Party/FatFs/src/ff.c **** {
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
4466:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
4470:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4471:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
4472:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence */
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4492:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4493:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
4497:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
4500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
4501:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
ARM GAS  /tmp/cclwbenu.s 			page 174


4509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4510:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
4511:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
4512:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4513:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4516:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4517:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
4522:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
4524:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
4525:Middlewares/Third_Party/FatFs/src/ff.c **** }
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 
4530:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4531:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
4532:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4533:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 
4536:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
4537:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp;
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;
4539:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];
4540:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 
4543:Middlewares/Third_Party/FatFs/src/ff.c **** static
4544:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
4547:Middlewares/Third_Party/FatFs/src/ff.c **** )
4548:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4940              		.loc 1 4548 0
 4941              		.cfi_startproc
 4942              		@ args = 0, pretend = 0, frame = 8
 4943              		@ frame_needed = 0, uses_anonymous_args = 0
 4944              	.LVL699:
 4945 0000 70B5     		push	{r4, r5, r6, lr}
 4946              	.LCFI49:
 4947              		.cfi_def_cfa_offset 16
 4948              		.cfi_offset 4, -16
 4949              		.cfi_offset 5, -12
 4950              		.cfi_offset 6, -8
 4951              		.cfi_offset 14, -4
 4952 0002 82B0     		sub	sp, sp, #8
 4953              	.LCFI50:
 4954              		.cfi_def_cfa_offset 24
 4955 0004 0446     		mov	r4, r0
 4956 0006 0E46     		mov	r6, r1
ARM GAS  /tmp/cclwbenu.s 			page 175


4549:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n')	 /* LF -> CRLF conversion */
 4957              		.loc 1 4553 0
 4958 0008 0A29     		cmp	r1, #10
 4959 000a 02D1     		bne	.L440
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 4960              		.loc 1 4554 0
 4961 000c 0D21     		movs	r1, #13
 4962              	.LVL700:
 4963 000e FFF7F7FF 		bl	putc_bfd
 4964              	.LVL701:
 4965              	.L440:
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;	/* Buffer write index (-1:error) */
 4966              		.loc 1 4556 0
 4967 0012 6368     		ldr	r3, [r4, #4]
 4968              	.LVL702:
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 4969              		.loc 1 4557 0
 4970 0014 002B     		cmp	r3, #0
 4971 0016 16DB     		blt	.L439
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 
4559:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
4565:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4572:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
4574:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
4578:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4585:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
 4972              		.loc 1 4586 0
 4973 0018 5D1C     		adds	r5, r3, #1
 4974              	.LVL703:
 4975 001a 2344     		add	r3, r3, r4
ARM GAS  /tmp/cclwbenu.s 			page 176


 4976 001c 1E73     		strb	r6, [r3, #12]
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
 4977              		.loc 1 4589 0
 4978 001e 3C2D     		cmp	r5, #60
 4979 0020 0DDD     		ble	.L442
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 4980              		.loc 1 4590 0
 4981 0022 2068     		ldr	r0, [r4]
 4982 0024 04F10C01 		add	r1, r4, #12
 4983 0028 2A46     		mov	r2, r5
 4984 002a 01AB     		add	r3, sp, #4
 4985 002c FFF7FEFF 		bl	f_write
 4986              	.LVL704:
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 4987              		.loc 1 4591 0
 4988 0030 019B     		ldr	r3, [sp, #4]
 4989 0032 9D42     		cmp	r5, r3
 4990 0034 01D1     		bne	.L445
 4991 0036 0025     		movs	r5, #0
 4992              	.LVL705:
 4993 0038 01E0     		b	.L442
 4994              	.LVL706:
 4995              	.L445:
 4996 003a 4FF0FF35 		mov	r5, #-1
 4997              	.LVL707:
 4998              	.L442:
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
 4999              		.loc 1 4593 0
 5000 003e 6560     		str	r5, [r4, #4]
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 5001              		.loc 1 4594 0
 5002 0040 A368     		ldr	r3, [r4, #8]
 5003 0042 0133     		adds	r3, r3, #1
 5004 0044 A360     		str	r3, [r4, #8]
 5005              	.LVL708:
 5006              	.L439:
4595:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5007              		.loc 1 4595 0
 5008 0046 02B0     		add	sp, sp, #8
 5009              	.LCFI51:
 5010              		.cfi_def_cfa_offset 16
 5011              		@ sp needed
 5012 0048 70BD     		pop	{r4, r5, r6, pc}
 5013              		.cfi_endproc
 5014              	.LFE117:
 5016 004a 00BF     		.section	.text.f_sync,"ax",%progbits
 5017              		.align	2
 5018              		.global	f_sync
 5019              		.thumb
 5020              		.thumb_func
 5022              	f_sync:
 5023              	.LFB101:
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5024              		.loc 1 2884 0
ARM GAS  /tmp/cclwbenu.s 			page 177


 5025              		.cfi_startproc
 5026              		@ args = 0, pretend = 0, frame = 0
 5027              		@ frame_needed = 0, uses_anonymous_args = 0
 5028              	.LVL709:
 5029 0000 38B5     		push	{r3, r4, r5, lr}
 5030              	.LCFI52:
 5031              		.cfi_def_cfa_offset 16
 5032              		.cfi_offset 3, -16
 5033              		.cfi_offset 4, -12
 5034              		.cfi_offset 5, -8
 5035              		.cfi_offset 14, -4
 5036 0002 0446     		mov	r4, r0
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5037              		.loc 1 2890 0
 5038 0004 FFF7FEFF 		bl	validate
 5039              	.LVL710:
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
 5040              		.loc 1 2891 0
 5041 0008 0346     		mov	r3, r0
 5042 000a 0028     		cmp	r0, #0
 5043 000c 57D1     		bne	.L448
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write-back dirty buffer */
 5044              		.loc 1 2892 0
 5045 000e 94F80622 		ldrb	r2, [r4, #518]	@ zero_extendqisi2
 5046 0012 12F0200F 		tst	r2, #32
 5047 0016 52D0     		beq	.L448
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 5048              		.loc 1 2895 0
 5049 0018 12F0400F 		tst	r2, #64
 5050 001c 11D0     		beq	.L449
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
 5051              		.loc 1 2896 0
 5052 001e D4F80032 		ldr	r3, [r4, #512]
 5053 0022 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 5054              	.LVL711:
 5055 0026 2146     		mov	r1, r4
 5056 0028 D4F81822 		ldr	r2, [r4, #536]
 5057 002c 0123     		movs	r3, #1
 5058 002e FFF7FEFF 		bl	disk_write
 5059              	.LVL712:
 5060 0032 0028     		cmp	r0, #0
 5061 0034 45D1     		bne	.L451
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5062              		.loc 1 2898 0
 5063 0036 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5064 003a 23F04003 		bic	r3, r3, #64
 5065 003e 84F80632 		strb	r3, [r4, #518]
 5066              	.L449:
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
 5067              		.loc 1 2902 0
 5068 0042 D4F80002 		ldr	r0, [r4, #512]
 5069 0046 D4F81C12 		ldr	r1, [r4, #540]
 5070 004a FFF7FEFF 		bl	move_window
 5071              	.LVL713:
2903:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fp->dir_ptr;
 5072              		.loc 1 2903 0
 5073 004e 0346     		mov	r3, r0
ARM GAS  /tmp/cclwbenu.s 			page 178


 5074 0050 A8BB     		cbnz	r0, .L448
2904:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
 5075              		.loc 1 2904 0
 5076 0052 D4F82052 		ldr	r5, [r4, #544]
 5077              	.LVL714:
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
 5078              		.loc 1 2905 0
 5079 0056 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 5080 0058 43F02003 		orr	r3, r3, #32
 5081 005c EB72     		strb	r3, [r5, #11]
2906:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, fp->sclust);					/* Update start cluster */
 5082              		.loc 1 2906 0
 5083 005e 94F80C32 		ldrb	r3, [r4, #524]	@ zero_extendqisi2
 5084 0062 2B77     		strb	r3, [r5, #28]
 5085 0064 B4F80C32 		ldrh	r3, [r4, #524]
 5086 0068 1B0A     		lsrs	r3, r3, #8
 5087 006a 6B77     		strb	r3, [r5, #29]
 5088 006c 94F80E32 		ldrb	r3, [r4, #526]	@ zero_extendqisi2
 5089 0070 AB77     		strb	r3, [r5, #30]
 5090 0072 94F80F32 		ldrb	r3, [r4, #527]	@ zero_extendqisi2
 5091 0076 EB77     		strb	r3, [r5, #31]
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();							/* Update updated time */
 5092              		.loc 1 2907 0
 5093 0078 2846     		mov	r0, r5
 5094              	.LVL715:
 5095 007a D4F81012 		ldr	r1, [r4, #528]
 5096 007e FFF7FEFF 		bl	st_clust
 5097              	.LVL716:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
 5098              		.loc 1 2908 0
 5099 0082 FFF7FEFF 		bl	get_fattime
 5100              	.LVL717:
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_LstAccDate, 0);
 5101              		.loc 1 2909 0
 5102 0086 A875     		strb	r0, [r5, #22]
 5103 0088 C0F30723 		ubfx	r3, r0, #8, #8
 5104 008c EB75     		strb	r3, [r5, #23]
 5105 008e C0F30743 		ubfx	r3, r0, #16, #8
 5106 0092 2B76     		strb	r3, [r5, #24]
 5107 0094 000E     		lsrs	r0, r0, #24
 5108              	.LVL718:
 5109 0096 6876     		strb	r0, [r5, #25]
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__WRITTEN;
 5110              		.loc 1 2910 0
 5111 0098 0023     		movs	r3, #0
 5112 009a AB74     		strb	r3, [r5, #18]
 5113 009c EB74     		strb	r3, [r5, #19]
2911:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->wflag = 1;
 5114              		.loc 1 2911 0
 5115 009e 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5116 00a2 23F02003 		bic	r3, r3, #32
 5117 00a6 84F80632 		strb	r3, [r4, #518]
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fp->fs);
 5118              		.loc 1 2912 0
 5119 00aa D4F80032 		ldr	r3, [r4, #512]
 5120 00ae 0122     		movs	r2, #1
 5121 00b0 83F80422 		strb	r2, [r3, #516]
ARM GAS  /tmp/cclwbenu.s 			page 179


2913:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5122              		.loc 1 2913 0
 5123 00b4 D4F80002 		ldr	r0, [r4, #512]
 5124 00b8 FFF7FEFF 		bl	sync_fs
 5125              	.LVL719:
 5126 00bc 0346     		mov	r3, r0
 5127              	.LVL720:
 5128              	.L448:
2918:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5129              		.loc 1 2918 0
 5130 00be 1846     		mov	r0, r3
 5131 00c0 38BD     		pop	{r3, r4, r5, pc}
 5132              	.LVL721:
 5133              	.L451:
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 5134              		.loc 1 2897 0
 5135 00c2 0120     		movs	r0, #1
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5136              		.loc 1 2919 0
 5137 00c4 38BD     		pop	{r3, r4, r5, pc}
 5138              		.cfi_endproc
 5139              	.LFE101:
 5141 00c6 00BF     		.section	.text.f_close,"ax",%progbits
 5142              		.align	2
 5143              		.global	f_close
 5144              		.thumb
 5145              		.thumb_func
 5147              	f_close:
 5148              	.LFB102:
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5149              		.loc 1 2933 0
 5150              		.cfi_startproc
 5151              		@ args = 0, pretend = 0, frame = 0
 5152              		@ frame_needed = 0, uses_anonymous_args = 0
 5153              	.LVL722:
 5154 0000 10B5     		push	{r4, lr}
 5155              	.LCFI53:
 5156              		.cfi_def_cfa_offset 8
 5157              		.cfi_offset 4, -8
 5158              		.cfi_offset 14, -4
 5159 0002 0446     		mov	r4, r0
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5160              		.loc 1 2938 0
 5161 0004 FFF7FEFF 		bl	f_sync
 5162              	.LVL723:
2939:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5163              		.loc 1 2939 0
 5164 0008 0346     		mov	r3, r0
 5165 000a 68B9     		cbnz	r0, .L454
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5166              		.loc 1 2942 0
 5167 000c 2046     		mov	r0, r4
 5168              	.LVL724:
 5169 000e FFF7FEFF 		bl	validate
 5170              	.LVL725:
2943:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5171              		.loc 1 2943 0
ARM GAS  /tmp/cclwbenu.s 			page 180


 5172 0012 0346     		mov	r3, r0
 5173 0014 40B9     		cbnz	r0, .L454
2948:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5174              		.loc 1 2948 0
 5175 0016 D4F82802 		ldr	r0, [r4, #552]
 5176              	.LVL726:
 5177 001a FFF7FEFF 		bl	dec_lock
 5178              	.LVL727:
2949:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5179              		.loc 1 2949 0
 5180 001e 0346     		mov	r3, r0
 5181 0020 10B9     		cbnz	r0, .L454
2951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5182              		.loc 1 2951 0
 5183 0022 0022     		movs	r2, #0
 5184 0024 C4F80022 		str	r2, [r4, #512]
 5185              	.L454:
 5186              	.LVL728:
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5187              		.loc 1 2958 0
 5188 0028 1846     		mov	r0, r3
 5189 002a 10BD     		pop	{r4, pc}
 5190              		.cfi_endproc
 5191              	.LFE102:
 5193              		.section	.text.f_lseek,"ax",%progbits
 5194              		.align	2
 5195              		.global	f_lseek
 5196              		.thumb
 5197              		.thumb_func
 5199              	f_lseek:
 5200              	.LFB103:
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5201              		.loc 1 3106 0
 5202              		.cfi_startproc
 5203              		@ args = 0, pretend = 0, frame = 0
 5204              		@ frame_needed = 0, uses_anonymous_args = 0
 5205              	.LVL729:
 5206 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5207              	.LCFI54:
 5208              		.cfi_def_cfa_offset 40
 5209              		.cfi_offset 3, -40
 5210              		.cfi_offset 4, -36
 5211              		.cfi_offset 5, -32
 5212              		.cfi_offset 6, -28
 5213              		.cfi_offset 7, -24
 5214              		.cfi_offset 8, -20
 5215              		.cfi_offset 9, -16
 5216              		.cfi_offset 10, -12
 5217              		.cfi_offset 11, -8
 5218              		.cfi_offset 14, -4
 5219 0004 0446     		mov	r4, r0
 5220 0006 0E46     		mov	r6, r1
3114:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 5221              		.loc 1 3114 0
 5222 0008 FFF7FEFF 		bl	validate
 5223              	.LVL730:
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)						/* Check error */
ARM GAS  /tmp/cclwbenu.s 			page 181


 5224              		.loc 1 3115 0
 5225 000c 0546     		mov	r5, r0
 5226 000e 0028     		cmp	r0, #0
 5227 0010 40F07D81 		bne	.L492
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
 5228              		.loc 1 3116 0
 5229 0014 94F80702 		ldrb	r0, [r4, #519]	@ zero_extendqisi2
 5230              	.LVL731:
 5231 0018 0028     		cmp	r0, #0
 5232 001a 40F07881 		bne	.L457
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5233              		.loc 1 3120 0
 5234 001e D4F82432 		ldr	r3, [r4, #548]
 5235 0022 002B     		cmp	r3, #0
 5236 0024 00F0A080 		beq	.L458
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 5237              		.loc 1 3121 0
 5238 0028 B6F1FF3F 		cmp	r6, #-1
 5239 002c 45D1     		bne	.L459
 5240              	.LVL732:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
 5241              		.loc 1 3123 0
 5242 002e 03F1040B 		add	fp, r3, #4
 5243              	.LVL733:
 5244 0032 D3F800A0 		ldr	r10, [r3]
 5245              	.LVL734:
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 5246              		.loc 1 3124 0
 5247 0036 D4F81092 		ldr	r9, [r4, #528]
 5248              	.LVL735:
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 5249              		.loc 1 3125 0
 5250 003a B9F1000F 		cmp	r9, #0
 5251 003e 2FD0     		beq	.L494
 5252 0040 4FF00208 		mov	r8, #2
 5253 0044 00E0     		b	.L465
 5254              	.LVL736:
 5255              	.L495:
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 5256              		.loc 1 3131 0
 5257 0046 8146     		mov	r9, r0
 5258              	.LVL737:
 5259              	.L465:
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 5260              		.loc 1 3128 0
 5261 0048 08F10208 		add	r8, r8, #2
 5262              	.LVL738:
 5263 004c 4E46     		mov	r6, r9
 5264 004e 0027     		movs	r7, #0
 5265              	.LVL739:
 5266              	.L463:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(fp->fs, cl);
 5267              		.loc 1 3130 0
 5268 0050 0137     		adds	r7, r7, #1
 5269              	.LVL740:
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 5270              		.loc 1 3131 0
ARM GAS  /tmp/cclwbenu.s 			page 182


 5271 0052 D4F80002 		ldr	r0, [r4, #512]
 5272 0056 3146     		mov	r1, r6
 5273 0058 FFF7FEFF 		bl	get_fat
 5274              	.LVL741:
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5275              		.loc 1 3132 0
 5276 005c 0128     		cmp	r0, #1
 5277 005e 04D8     		bhi	.L461
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5278              		.loc 1 3132 0 is_stmt 0 discriminator 1
 5279 0060 0220     		movs	r0, #2
 5280              	.LVL742:
 5281 0062 84F80702 		strb	r0, [r4, #519]
 5282 0066 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5283              	.LVL743:
 5284              	.L461:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5285              		.loc 1 3133 0 is_stmt 1
 5286 006a B0F1FF3F 		cmp	r0, #-1
 5287 006e 04D1     		bne	.L462
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5288              		.loc 1 3133 0 is_stmt 0 discriminator 1
 5289 0070 0120     		movs	r0, #1
 5290              	.LVL744:
 5291 0072 84F80702 		strb	r0, [r4, #519]
 5292 0076 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5293              	.LVL745:
 5294              	.L462:
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5295              		.loc 1 3134 0 is_stmt 1
 5296 007a 731C     		adds	r3, r6, #1
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 5297              		.loc 1 3131 0
 5298 007c 0646     		mov	r6, r0
 5299              	.LVL746:
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5300              		.loc 1 3134 0
 5301 007e 8342     		cmp	r3, r0
 5302 0080 E6D0     		beq	.L463
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 5303              		.loc 1 3135 0
 5304 0082 D045     		cmp	r8, r10
 5305 0084 05D8     		bhi	.L464
 5306              	.LVL747:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5307              		.loc 1 3136 0
 5308 0086 5B46     		mov	r3, fp
 5309              	.LVL748:
 5310 0088 43F8087B 		str	r7, [r3], #8
 5311              	.LVL749:
 5312 008c CBF80490 		str	r9, [fp, #4]
 5313 0090 9B46     		mov	fp, r3
 5314              	.LVL750:
 5315              	.L464:
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5316              		.loc 1 3138 0
 5317 0092 D4F80032 		ldr	r3, [r4, #512]
ARM GAS  /tmp/cclwbenu.s 			page 183


 5318 0096 D3F81432 		ldr	r3, [r3, #532]
 5319 009a 8342     		cmp	r3, r0
 5320 009c D3D8     		bhi	.L495
 5321 009e 01E0     		b	.L460
 5322              	.LVL751:
 5323              	.L494:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
 5324              		.loc 1 3123 0
 5325 00a0 4FF00208 		mov	r8, #2
 5326              	.LVL752:
 5327              	.L460:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen)
 5328              		.loc 1 3140 0
 5329 00a4 D4F82432 		ldr	r3, [r4, #548]
 5330 00a8 C3F80080 		str	r8, [r3]
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 5331              		.loc 1 3141 0
 5332 00ac D045     		cmp	r8, r10
 5333 00ae 00F22A81 		bhi	.L496
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
 5334              		.loc 1 3142 0
 5335 00b2 0023     		movs	r3, #0
 5336 00b4 CBF80030 		str	r3, [fp]
 5337 00b8 26E1     		b	.L466
 5338              	.LVL753:
 5339              	.L459:
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs = fp->fsize;
 5340              		.loc 1 3147 0
 5341 00ba D4F80C72 		ldr	r7, [r4, #524]
 5342 00be B742     		cmp	r7, r6
 5343 00c0 00D3     		bcc	.L467
 5344 00c2 3746     		mov	r7, r6
 5345              	.L467:
 5346              	.LVL754:
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 5347              		.loc 1 3149 0
 5348 00c4 C4F80872 		str	r7, [r4, #520]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 5349              		.loc 1 3150 0
 5350 00c8 002F     		cmp	r7, #0
 5351 00ca 00F01D81 		beq	.L466
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fp->fs, fp->clust);
 5352              		.loc 1 3151 0
 5353 00ce 07F1FF38 		add	r8, r7, #-1
 5354 00d2 2046     		mov	r0, r4
 5355 00d4 4146     		mov	r1, r8
 5356 00d6 FFF7FEFF 		bl	clmt_clust
 5357              	.LVL755:
 5358 00da 0146     		mov	r1, r0
 5359 00dc C4F81402 		str	r0, [r4, #532]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
 5360              		.loc 1 3152 0
 5361 00e0 D4F80062 		ldr	r6, [r4, #512]
 5362 00e4 3046     		mov	r0, r6
 5363 00e6 FFF7FEFF 		bl	clust2sect
 5364              	.LVL756:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
ARM GAS  /tmp/cclwbenu.s 			page 184


 5365              		.loc 1 3153 0
 5366 00ea 20B9     		cbnz	r0, .L468
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
 5367              		.loc 1 3153 0 is_stmt 0 discriminator 1
 5368 00ec 0220     		movs	r0, #2
 5369              	.LVL757:
 5370 00ee 84F80702 		strb	r0, [r4, #519]
 5371 00f2 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5372              	.LVL758:
 5373              	.L468:
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
 5374              		.loc 1 3154 0 is_stmt 1
 5375 00f6 96F80232 		ldrb	r3, [r6, #514]	@ zero_extendqisi2
 5376 00fa 013B     		subs	r3, r3, #1
 5377 00fc 03EA5828 		and	r8, r3, r8, lsr #9
 5378 0100 8044     		add	r8, r8, r0
 5379              	.LVL759:
3155:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5380              		.loc 1 3155 0
 5381 0102 C7F30807 		ubfx	r7, r7, #0, #9
 5382              	.LVL760:
 5383 0106 002F     		cmp	r7, #0
 5384 0108 00F0FE80 		beq	.L466
3155:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5385              		.loc 1 3155 0 is_stmt 0 discriminator 1
 5386 010c D4F81822 		ldr	r2, [r4, #536]
 5387 0110 4245     		cmp	r2, r8
 5388 0112 00F0F980 		beq	.L466
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 5389              		.loc 1 3158 0 is_stmt 1
 5390 0116 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5391 011a 13F0400F 		tst	r3, #64
 5392 011e 11D0     		beq	.L469
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 							ABORT(fp->fs, FR_DISK_ERR);
 5393              		.loc 1 3159 0
 5394 0120 96F80102 		ldrb	r0, [r6, #513]	@ zero_extendqisi2
 5395 0124 2146     		mov	r1, r4
 5396 0126 0123     		movs	r3, #1
 5397 0128 FFF7FEFF 		bl	disk_write
 5398              	.LVL761:
 5399 012c 20B1     		cbz	r0, .L470
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= ~FA__DIRTY;
 5400              		.loc 1 3160 0
 5401 012e 0120     		movs	r0, #1
 5402 0130 84F80702 		strb	r0, [r4, #519]
 5403 0134 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5404              	.LVL762:
 5405              	.L470:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5406              		.loc 1 3161 0
 5407 0138 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5408 013c 23F04003 		bic	r3, r3, #64
 5409 0140 84F80632 		strb	r3, [r4, #518]
 5410              	.L469:
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 5411              		.loc 1 3164 0
 5412 0144 D4F80032 		ldr	r3, [r4, #512]
ARM GAS  /tmp/cclwbenu.s 			page 185


 5413 0148 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 5414 014c 2146     		mov	r1, r4
 5415 014e 4246     		mov	r2, r8
 5416 0150 0123     		movs	r3, #1
 5417 0152 FFF7FEFF 		bl	disk_read
 5418              	.LVL763:
 5419 0156 20B1     		cbz	r0, .L471
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5420              		.loc 1 3165 0
 5421 0158 0120     		movs	r0, #1
 5422 015a 84F80702 		strb	r0, [r4, #519]
 5423 015e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5424              	.LVL764:
 5425              	.L471:
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5426              		.loc 1 3167 0
 5427 0162 C4F81882 		str	r8, [r4, #536]
 5428 0166 CFE0     		b	.L466
 5429              	.LVL765:
 5430              	.L458:
3176:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5431              		.loc 1 3176 0
 5432 0168 D4F80C32 		ldr	r3, [r4, #524]
 5433 016c B342     		cmp	r3, r6
 5434 016e 05D2     		bcs	.L472
3178:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5435              		.loc 1 3178 0
 5436 0170 94F80622 		ldrb	r2, [r4, #518]	@ zero_extendqisi2
 5437 0174 12F0020F 		tst	r2, #2
 5438 0178 00D1     		bne	.L472
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5439              		.loc 1 3180 0
 5440 017a 1E46     		mov	r6, r3
 5441              	.LVL766:
 5442              	.L472:
3182:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 5443              		.loc 1 3182 0
 5444 017c D4F80832 		ldr	r3, [r4, #520]
 5445              	.LVL767:
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5446              		.loc 1 3183 0
 5447 0180 0022     		movs	r2, #0
 5448 0182 C4F80822 		str	r2, [r4, #520]
3184:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
 5449              		.loc 1 3184 0
 5450 0186 002E     		cmp	r6, #0
 5451 0188 78D0     		beq	.L498
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 5452              		.loc 1 3185 0
 5453 018a D4F80002 		ldr	r0, [r4, #512]
 5454 018e 90F80272 		ldrb	r7, [r0, #514]	@ zero_extendqisi2
 5455 0192 7F02     		lsls	r7, r7, #9
 5456              	.LVL768:
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5457              		.loc 1 3186 0
 5458 0194 7BB1     		cbz	r3, .L474
3187:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
ARM GAS  /tmp/cclwbenu.s 			page 186


 5459              		.loc 1 3187 0 discriminator 1
 5460 0196 721E     		subs	r2, r6, #1
 5461 0198 B2FBF7F2 		udiv	r2, r2, r7
 5462 019c 013B     		subs	r3, r3, #1
 5463              	.LVL769:
 5464 019e B3FBF7F1 		udiv	r1, r3, r7
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5465              		.loc 1 3186 0 discriminator 1
 5466 01a2 8A42     		cmp	r2, r1
 5467 01a4 07D3     		bcc	.L474
3188:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 5468              		.loc 1 3188 0
 5469 01a6 7A42     		negs	r2, r7
 5470 01a8 1340     		ands	r3, r3, r2
 5471              	.LVL770:
 5472 01aa C4F80832 		str	r3, [r4, #520]
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 5473              		.loc 1 3189 0
 5474 01ae F61A     		subs	r6, r6, r3
 5475              	.LVL771:
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 5476              		.loc 1 3190 0
 5477 01b0 D4F81412 		ldr	r1, [r4, #532]
 5478              	.LVL772:
 5479 01b4 18E0     		b	.L475
 5480              	.LVL773:
 5481              	.L474:
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5482              		.loc 1 3192 0
 5483 01b6 D4F81012 		ldr	r1, [r4, #528]
 5484              	.LVL774:
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(fp->fs, 0);
 5485              		.loc 1 3194 0
 5486 01ba 99B9     		cbnz	r1, .L476
3195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 5487              		.loc 1 3195 0
 5488 01bc FFF7FEFF 		bl	create_chain
 5489              	.LVL775:
 5490 01c0 0146     		mov	r1, r0
 5491              	.LVL776:
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5492              		.loc 1 3196 0
 5493 01c2 0128     		cmp	r0, #1
 5494 01c4 04D1     		bne	.L477
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5495              		.loc 1 3196 0 is_stmt 0 discriminator 1
 5496 01c6 0220     		movs	r0, #2
 5497              	.LVL777:
 5498 01c8 84F80702 		strb	r0, [r4, #519]
 5499 01cc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5500              	.LVL778:
 5501              	.L477:
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
 5502              		.loc 1 3197 0 is_stmt 1
 5503 01d0 B0F1FF3F 		cmp	r0, #-1
 5504 01d4 04D1     		bne	.L478
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
ARM GAS  /tmp/cclwbenu.s 			page 187


 5505              		.loc 1 3197 0 is_stmt 0 discriminator 1
 5506 01d6 0120     		movs	r0, #1
 5507              	.LVL779:
 5508 01d8 84F80702 		strb	r0, [r4, #519]
 5509 01dc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5510              	.LVL780:
 5511              	.L478:
3198:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5512              		.loc 1 3198 0 is_stmt 1
 5513 01e0 C4F81002 		str	r0, [r4, #528]
 5514              	.LVL781:
 5515              	.L476:
3201:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5516              		.loc 1 3201 0
 5517 01e4 C4F81412 		str	r1, [r4, #532]
 5518              	.L475:
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 5519              		.loc 1 3203 0
 5520 01e8 79BB     		cbnz	r1, .L479
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5521              		.loc 1 3183 0
 5522 01ea 0026     		movs	r6, #0
 5523              	.LVL782:
 5524 01ec 49E0     		b	.L473
 5525              	.LVL783:
 5526              	.L486:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
 5527              		.loc 1 3206 0
 5528 01ee 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5529 01f2 13F0020F 		tst	r3, #2
 5530 01f6 06D0     		beq	.L480
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* When disk gets full, clip file size */
 5531              		.loc 1 3207 0
 5532 01f8 D4F80002 		ldr	r0, [r4, #512]
 5533 01fc FFF7FEFF 		bl	create_chain
 5534              	.LVL784:
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = bcs; break;
 5535              		.loc 1 3208 0
 5536 0200 0146     		mov	r1, r0
 5537 0202 28B9     		cbnz	r0, .L482
 5538 0204 24E0     		b	.L499
 5539              	.LVL785:
 5540              	.L480:
3213:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5541              		.loc 1 3213 0
 5542 0206 D4F80002 		ldr	r0, [r4, #512]
 5543 020a FFF7FEFF 		bl	get_fat
 5544              	.LVL786:
 5545 020e 0146     		mov	r1, r0
 5546              	.LVL787:
 5547              	.L482:
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 5548              		.loc 1 3214 0
 5549 0210 B1F1FF3F 		cmp	r1, #-1
 5550 0214 04D1     		bne	.L483
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 5551              		.loc 1 3214 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cclwbenu.s 			page 188


 5552 0216 0120     		movs	r0, #1
 5553              	.LVL788:
 5554 0218 84F80702 		strb	r0, [r4, #519]
 5555 021c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5556              	.LVL789:
 5557              	.L483:
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5558              		.loc 1 3215 0 is_stmt 1
 5559 0220 0129     		cmp	r1, #1
 5560 0222 05D9     		bls	.L484
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5561              		.loc 1 3215 0 is_stmt 0 discriminator 2
 5562 0224 D4F80032 		ldr	r3, [r4, #512]
 5563 0228 D3F81432 		ldr	r3, [r3, #532]
 5564 022c 8B42     		cmp	r3, r1
 5565 022e 04D8     		bhi	.L485
 5566              	.L484:
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5567              		.loc 1 3215 0 discriminator 3
 5568 0230 0220     		movs	r0, #2
 5569              	.LVL790:
 5570 0232 84F80702 		strb	r0, [r4, #519]
 5571 0236 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5572              	.LVL791:
 5573              	.L485:
3216:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fptr += bcs;
 5574              		.loc 1 3216 0 is_stmt 1
 5575 023a C4F81412 		str	r1, [r4, #532]
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs;
 5576              		.loc 1 3217 0
 5577 023e D4F80832 		ldr	r3, [r4, #520]
 5578 0242 3B44     		add	r3, r3, r7
 5579 0244 C4F80832 		str	r3, [r4, #520]
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5580              		.loc 1 3218 0
 5581 0248 F61B     		subs	r6, r6, r7
 5582              	.LVL792:
 5583              	.L479:
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5584              		.loc 1 3204 0
 5585 024a BE42     		cmp	r6, r7
 5586 024c CFD8     		bhi	.L486
 5587 024e 00E0     		b	.L481
 5588              	.LVL793:
 5589              	.L499:
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 5590              		.loc 1 3209 0
 5591 0250 3E46     		mov	r6, r7
 5592              	.LVL794:
 5593              	.L481:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fp->fs)) {
 5594              		.loc 1 3220 0
 5595 0252 D4F80832 		ldr	r3, [r4, #520]
 5596 0256 3344     		add	r3, r3, r6
 5597 0258 C4F80832 		str	r3, [r4, #520]
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
 5598              		.loc 1 3221 0
ARM GAS  /tmp/cclwbenu.s 			page 189


 5599 025c C6F30803 		ubfx	r3, r6, #0, #9
 5600 0260 73B1     		cbz	r3, .L500
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
 5601              		.loc 1 3222 0
 5602 0262 D4F80002 		ldr	r0, [r4, #512]
 5603 0266 FFF7FEFF 		bl	clust2sect
 5604              	.LVL795:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
 5605              		.loc 1 3223 0
 5606 026a 20B9     		cbnz	r0, .L487
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
 5607              		.loc 1 3223 0 is_stmt 0 discriminator 1
 5608 026c 0220     		movs	r0, #2
 5609              	.LVL796:
 5610 026e 84F80702 		strb	r0, [r4, #519]
 5611 0272 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5612              	.LVL797:
 5613              	.L487:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5614              		.loc 1 3224 0 is_stmt 1
 5615 0276 00EB5626 		add	r6, r0, r6, lsr #9
 5616              	.LVL798:
 5617 027a 02E0     		b	.L473
 5618              	.LVL799:
 5619              	.L498:
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5620              		.loc 1 3183 0
 5621 027c 0026     		movs	r6, #0
 5622              	.LVL800:
 5623 027e 00E0     		b	.L473
 5624              	.LVL801:
 5625              	.L500:
 5626 0280 0026     		movs	r6, #0
 5627              	.LVL802:
 5628              	.L473:
3228:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5629              		.loc 1 3228 0
 5630 0282 D4F80832 		ldr	r3, [r4, #520]
 5631 0286 C3F30803 		ubfx	r3, r3, #0, #9
 5632 028a 6BB3     		cbz	r3, .L488
3228:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5633              		.loc 1 3228 0 is_stmt 0 discriminator 1
 5634 028c D4F81822 		ldr	r2, [r4, #536]
 5635 0290 B242     		cmp	r2, r6
 5636 0292 29D0     		beq	.L488
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 5637              		.loc 1 3231 0 is_stmt 1
 5638 0294 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5639 0298 13F0400F 		tst	r3, #64
 5640 029c 13D0     		beq	.L489
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 5641              		.loc 1 3232 0
 5642 029e D4F80032 		ldr	r3, [r4, #512]
 5643 02a2 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 5644 02a6 2146     		mov	r1, r4
 5645 02a8 0123     		movs	r3, #1
 5646 02aa FFF7FEFF 		bl	disk_write
ARM GAS  /tmp/cclwbenu.s 			page 190


 5647              	.LVL803:
 5648 02ae 20B1     		cbz	r0, .L490
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 5649              		.loc 1 3233 0
 5650 02b0 0120     		movs	r0, #1
 5651 02b2 84F80702 		strb	r0, [r4, #519]
 5652 02b6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5653              	.LVL804:
 5654              	.L490:
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5655              		.loc 1 3234 0
 5656 02ba 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5657 02be 23F04003 		bic	r3, r3, #64
 5658 02c2 84F80632 		strb	r3, [r4, #518]
 5659              	.L489:
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
 5660              		.loc 1 3237 0
 5661 02c6 D4F80032 		ldr	r3, [r4, #512]
 5662 02ca 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 5663 02ce 2146     		mov	r1, r4
 5664 02d0 3246     		mov	r2, r6
 5665 02d2 0123     		movs	r3, #1
 5666 02d4 FFF7FEFF 		bl	disk_read
 5667              	.LVL805:
 5668 02d8 20B1     		cbz	r0, .L491
3238:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5669              		.loc 1 3238 0
 5670 02da 0120     		movs	r0, #1
 5671 02dc 84F80702 		strb	r0, [r4, #519]
 5672 02e0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5673              	.LVL806:
 5674              	.L491:
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5675              		.loc 1 3240 0
 5676 02e4 C4F81862 		str	r6, [r4, #536]
 5677              	.L488:
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;
 5678              		.loc 1 3243 0
 5679 02e8 D4F80832 		ldr	r3, [r4, #520]
 5680 02ec D4F80C22 		ldr	r2, [r4, #524]
 5681 02f0 9342     		cmp	r3, r2
 5682 02f2 09D9     		bls	.L466
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
 5683              		.loc 1 3244 0
 5684 02f4 C4F80C32 		str	r3, [r4, #524]
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5685              		.loc 1 3245 0
 5686 02f8 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5687 02fc 43F02003 		orr	r3, r3, #32
 5688 0300 84F80632 		strb	r3, [r4, #518]
 5689 0304 00E0     		b	.L466
 5690              	.LVL807:
 5691              	.L496:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5692              		.loc 1 3144 0
 5693 0306 1125     		movs	r5, #17
 5694              	.LVL808:
ARM GAS  /tmp/cclwbenu.s 			page 191


 5695              	.L466:
3250:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5696              		.loc 1 3250 0
 5697 0308 2846     		mov	r0, r5
 5698 030a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5699              	.LVL809:
 5700              	.L492:
 5701              	.L457:
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5702              		.loc 1 3251 0
 5703 030e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5704              		.cfi_endproc
 5705              	.LFE103:
 5707 0312 00BF     		.section	.text.f_opendir,"ax",%progbits
 5708              		.align	2
 5709              		.global	f_opendir
 5710              		.thumb
 5711              		.thumb_func
 5713              	f_opendir:
 5714              	.LFB104:
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5715              		.loc 1 3264 0
 5716              		.cfi_startproc
 5717              		@ args = 0, pretend = 0, frame = 24
 5718              		@ frame_needed = 0, uses_anonymous_args = 0
 5719              	.LVL810:
 5720 0000 30B5     		push	{r4, r5, lr}
 5721              	.LCFI55:
 5722              		.cfi_def_cfa_offset 12
 5723              		.cfi_offset 4, -12
 5724              		.cfi_offset 5, -8
 5725              		.cfi_offset 14, -4
 5726 0002 87B0     		sub	sp, sp, #28
 5727              	.LCFI56:
 5728              		.cfi_def_cfa_offset 40
 5729 0004 0191     		str	r1, [sp, #4]
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5730              		.loc 1 3270 0
 5731 0006 0028     		cmp	r0, #0
 5732 0008 46D0     		beq	.L509
 5733 000a 0546     		mov	r5, r0
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5734              		.loc 1 3273 0
 5735 000c 05A8     		add	r0, sp, #20
 5736              	.LVL811:
 5737 000e 01A9     		add	r1, sp, #4
 5738              	.LVL812:
 5739 0010 0022     		movs	r2, #0
 5740 0012 FFF7FEFF 		bl	find_volume
 5741              	.LVL813:
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fs = fs;
 5742              		.loc 1 3274 0
 5743 0016 0446     		mov	r4, r0
 5744 0018 C0BB     		cbnz	r0, .L504
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(*dp);
 5745              		.loc 1 3275 0
 5746 001a 059B     		ldr	r3, [sp, #20]
ARM GAS  /tmp/cclwbenu.s 			page 192


 5747 001c C5F80032 		str	r3, [r5, #512]
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 5748              		.loc 1 3276 0
 5749 0020 02AB     		add	r3, sp, #8
 5750 0022 C5F81832 		str	r3, [r5, #536]
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 5751              		.loc 1 3277 0
 5752 0026 2846     		mov	r0, r5
 5753              	.LVL814:
 5754 0028 0199     		ldr	r1, [sp, #4]
 5755 002a FFF7FEFF 		bl	follow_path
 5756              	.LVL815:
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir) {						/* It is not the origin directory itself */
 5757              		.loc 1 3279 0
 5758 002e 0446     		mov	r4, r0
 5759 0030 48BB     		cbnz	r0, .L505
3280:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
 5760              		.loc 1 3280 0
 5761 0032 D5F81412 		ldr	r1, [r5, #532]
 5762 0036 51B1     		cbz	r1, .L506
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sclust = ld_clust(fs, dp->dir);
 5763              		.loc 1 3281 0
 5764 0038 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 5765 003a 13F0100F 		tst	r3, #16
 5766 003e 05D0     		beq	.L510
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 				else							/* The object is a file */
 5767              		.loc 1 3282 0
 5768 0040 0598     		ldr	r0, [sp, #20]
 5769              	.LVL816:
 5770 0042 FFF7FEFF 		bl	ld_clust
 5771              	.LVL817:
 5772 0046 C5F80802 		str	r0, [r5, #520]
 5773 004a 00E0     		b	.L506
 5774              	.LVL818:
 5775              	.L510:
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5776              		.loc 1 3284 0
 5777 004c 0524     		movs	r4, #5
 5778              	.LVL819:
 5779              	.L506:
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->id = fs->id;
 5780              		.loc 1 3286 0
 5781 004e D4B9     		cbnz	r4, .L505
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 5782              		.loc 1 3287 0
 5783 0050 059B     		ldr	r3, [sp, #20]
 5784 0052 B3F80632 		ldrh	r3, [r3, #518]
 5785 0056 A5F80432 		strh	r3, [r5, #516]	@ movhi
3288:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 5786              		.loc 1 3288 0
 5787 005a 2846     		mov	r0, r5
 5788 005c 0021     		movs	r1, #0
 5789 005e FFF7FEFF 		bl	dir_sdi
 5790              	.LVL820:
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dp->sclust) {
 5791              		.loc 1 3290 0
 5792 0062 0446     		mov	r4, r0
ARM GAS  /tmp/cclwbenu.s 			page 193


 5793 0064 78B9     		cbnz	r0, .L505
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 5794              		.loc 1 3291 0
 5795 0066 D5F80832 		ldr	r3, [r5, #520]
 5796 006a 3BB1     		cbz	r3, .L507
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!dp->lockid)
 5797              		.loc 1 3292 0
 5798 006c 2846     		mov	r0, r5
 5799              	.LVL821:
 5800 006e 0021     		movs	r1, #0
 5801 0070 FFF7FEFF 		bl	inc_lock
 5802              	.LVL822:
 5803 0074 C5F81C02 		str	r0, [r5, #540]
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = FR_TOO_MANY_OPEN_FILES;
 5804              		.loc 1 3293 0
 5805 0078 20B1     		cbz	r0, .L511
 5806 007a 04E0     		b	.L505
 5807              	.LVL823:
 5808              	.L507:
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5809              		.loc 1 3296 0
 5810 007c 0023     		movs	r3, #0
 5811 007e C5F81C32 		str	r3, [r5, #540]
 5812 0082 00E0     		b	.L505
 5813              	.LVL824:
 5814              	.L511:
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 5815              		.loc 1 3294 0
 5816 0084 1224     		movs	r4, #18
 5817              	.L505:
 5818              	.LVL825:
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5819              		.loc 1 3302 0
 5820 0086 042C     		cmp	r4, #4
 5821 0088 00D1     		bne	.L504
 5822 008a 0524     		movs	r4, #5
 5823              	.LVL826:
 5824              	.L504:
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5825              		.loc 1 3304 0
 5826 008c 14B1     		cbz	r4, .L508
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5827              		.loc 1 3304 0 is_stmt 0 discriminator 1
 5828 008e 0023     		movs	r3, #0
 5829 0090 C5F80032 		str	r3, [r5, #512]
 5830              	.L508:
3306:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5831              		.loc 1 3306 0 is_stmt 1
 5832 0094 2046     		mov	r0, r4
 5833 0096 00E0     		b	.L503
 5834              	.LVL827:
 5835              	.L509:
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5836              		.loc 1 3270 0
 5837 0098 0920     		movs	r0, #9
 5838              	.LVL828:
 5839              	.L503:
ARM GAS  /tmp/cclwbenu.s 			page 194


3307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5840              		.loc 1 3307 0
 5841 009a 07B0     		add	sp, sp, #28
 5842              	.LCFI57:
 5843              		.cfi_def_cfa_offset 12
 5844              		@ sp needed
 5845 009c 30BD     		pop	{r4, r5, pc}
 5846              		.cfi_endproc
 5847              	.LFE104:
 5849 009e 00BF     		.section	.text.f_closedir,"ax",%progbits
 5850              		.align	2
 5851              		.global	f_closedir
 5852              		.thumb
 5853              		.thumb_func
 5855              	f_closedir:
 5856              	.LFB105:
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5857              		.loc 1 3319 0
 5858              		.cfi_startproc
 5859              		@ args = 0, pretend = 0, frame = 0
 5860              		@ frame_needed = 0, uses_anonymous_args = 0
 5861              	.LVL829:
 5862 0000 10B5     		push	{r4, lr}
 5863              	.LCFI58:
 5864              		.cfi_def_cfa_offset 8
 5865              		.cfi_offset 4, -8
 5866              		.cfi_offset 14, -4
 5867 0002 0446     		mov	r4, r0
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5868              		.loc 1 3323 0
 5869 0004 FFF7FEFF 		bl	validate
 5870              	.LVL830:
3324:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5871              		.loc 1 3324 0
 5872 0008 0346     		mov	r3, r0
 5873 000a 48B9     		cbnz	r0, .L515
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->lockid);
 5874              		.loc 1 3329 0
 5875 000c D4F81C02 		ldr	r0, [r4, #540]
 5876              	.LVL831:
 5877 0010 10B1     		cbz	r0, .L516
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
 5878              		.loc 1 3330 0
 5879 0012 FFF7FEFF 		bl	dec_lock
 5880              	.LVL832:
 5881 0016 0346     		mov	r3, r0
 5882              	.LVL833:
 5883              	.L516:
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5884              		.loc 1 3331 0
 5885 0018 13B9     		cbnz	r3, .L515
3333:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5886              		.loc 1 3333 0
 5887 001a 0022     		movs	r2, #0
 5888 001c C4F80022 		str	r2, [r4, #512]
 5889              	.LVL834:
 5890              	.L515:
ARM GAS  /tmp/cclwbenu.s 			page 195


3339:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5891              		.loc 1 3339 0
 5892 0020 1846     		mov	r0, r3
 5893 0022 10BD     		pop	{r4, pc}
 5894              		.cfi_endproc
 5895              	.LFE105:
 5897              		.section	.text.f_readdir,"ax",%progbits
 5898              		.align	2
 5899              		.global	f_readdir
 5900              		.thumb
 5901              		.thumb_func
 5903              	f_readdir:
 5904              	.LFB106:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5905              		.loc 1 3352 0
 5906              		.cfi_startproc
 5907              		@ args = 0, pretend = 0, frame = 16
 5908              		@ frame_needed = 0, uses_anonymous_args = 0
 5909              	.LVL835:
 5910 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5911              	.LCFI59:
 5912              		.cfi_def_cfa_offset 20
 5913              		.cfi_offset 4, -20
 5914              		.cfi_offset 5, -16
 5915              		.cfi_offset 6, -12
 5916              		.cfi_offset 7, -8
 5917              		.cfi_offset 14, -4
 5918 0002 85B0     		sub	sp, sp, #20
 5919              	.LCFI60:
 5920              		.cfi_def_cfa_offset 40
 5921 0004 0546     		mov	r5, r0
 5922 0006 0F46     		mov	r7, r1
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5923              		.loc 1 3357 0
 5924 0008 FFF7FEFF 		bl	validate
 5925              	.LVL836:
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 5926              		.loc 1 3358 0
 5927 000c 0446     		mov	r4, r0
 5928 000e 30BB     		cbnz	r0, .L519
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 5929              		.loc 1 3359 0
 5930 0010 2FB9     		cbnz	r7, .L520
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 5931              		.loc 1 3360 0
 5932 0012 2846     		mov	r0, r5
 5933              	.LVL837:
 5934 0014 0021     		movs	r1, #0
 5935 0016 FFF7FEFF 		bl	dir_sdi
 5936              	.LVL838:
 5937 001a 0446     		mov	r4, r0
 5938              	.LVL839:
 5939 001c 1FE0     		b	.L519
 5940              	.LVL840:
 5941              	.L520:
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 5942              		.loc 1 3362 0
ARM GAS  /tmp/cclwbenu.s 			page 196


 5943 001e 01AB     		add	r3, sp, #4
 5944 0020 C5F81832 		str	r3, [r5, #536]
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
 5945              		.loc 1 3363 0
 5946 0024 2846     		mov	r0, r5
 5947              	.LVL841:
 5948 0026 0021     		movs	r1, #0
 5949 0028 FFF7FEFF 		bl	dir_read
 5950              	.LVL842:
 5951 002c 0646     		mov	r6, r0
 5952              	.LVL843:
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0;
 5953              		.loc 1 3364 0
 5954 002e 0428     		cmp	r0, #4
 5955 0030 03D1     		bne	.L521
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 5956              		.loc 1 3365 0
 5957 0032 0023     		movs	r3, #0
 5958 0034 C5F81032 		str	r3, [r5, #528]
 5959              	.LVL844:
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5960              		.loc 1 3366 0
 5961 0038 2646     		mov	r6, r4
 5962              	.LVL845:
 5963              	.L521:
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 5964              		.loc 1 3368 0
 5965 003a 7EB9     		cbnz	r6, .L522
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 5966              		.loc 1 3369 0
 5967 003c 2846     		mov	r0, r5
 5968 003e 3946     		mov	r1, r7
 5969 0040 FFF7FEFF 		bl	get_fileinfo
 5970              	.LVL846:
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
 5971              		.loc 1 3370 0
 5972 0044 2846     		mov	r0, r5
 5973 0046 0021     		movs	r1, #0
 5974 0048 FFF7FEFF 		bl	dir_next
 5975              	.LVL847:
 5976 004c 0446     		mov	r4, r0
 5977              	.LVL848:
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0;
 5978              		.loc 1 3371 0
 5979 004e 0428     		cmp	r0, #4
 5980 0050 05D1     		bne	.L519
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_OK;
 5981              		.loc 1 3372 0
 5982 0052 0023     		movs	r3, #0
 5983 0054 C5F81032 		str	r3, [r5, #528]
 5984              	.LVL849:
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5985              		.loc 1 3373 0
 5986 0058 3446     		mov	r4, r6
 5987 005a 00E0     		b	.L519
 5988              	.LVL850:
 5989              	.L522:
ARM GAS  /tmp/cclwbenu.s 			page 197


 5990 005c 3446     		mov	r4, r6
 5991              	.LVL851:
 5992              	.L519:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5993              		.loc 1 3381 0
 5994 005e 2046     		mov	r0, r4
 5995 0060 05B0     		add	sp, sp, #20
 5996              	.LCFI61:
 5997              		.cfi_def_cfa_offset 20
 5998              		@ sp needed
 5999 0062 F0BD     		pop	{r4, r5, r6, r7, pc}
 6000              		.cfi_endproc
 6001              	.LFE106:
 6003              		.section	.text.f_stat,"ax",%progbits
 6004              		.align	2
 6005              		.global	f_stat
 6006              		.thumb
 6007              		.thumb_func
 6009              	f_stat:
 6010              	.LFB107:
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6011              		.loc 1 3446 0
 6012              		.cfi_startproc
 6013              		@ args = 0, pretend = 0, frame = 568
 6014              		@ frame_needed = 0, uses_anonymous_args = 0
 6015              	.LVL852:
 6016 0000 30B5     		push	{r4, r5, lr}
 6017              	.LCFI62:
 6018              		.cfi_def_cfa_offset 12
 6019              		.cfi_offset 4, -12
 6020              		.cfi_offset 5, -8
 6021              		.cfi_offset 14, -4
 6022 0002 ADF50F7D 		sub	sp, sp, #572
 6023              	.LCFI63:
 6024              		.cfi_def_cfa_offset 584
 6025 0006 0190     		str	r0, [sp, #4]
 6026 0008 0D46     		mov	r5, r1
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6027              		.loc 1 3453 0
 6028 000a 86A8     		add	r0, sp, #536
 6029              	.LVL853:
 6030 000c 01A9     		add	r1, sp, #4
 6031              	.LVL854:
 6032 000e 0022     		movs	r2, #0
 6033 0010 FFF7FEFF 		bl	find_volume
 6034              	.LVL855:
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6035              		.loc 1 3454 0
 6036 0014 0446     		mov	r4, r0
 6037 0016 80B9     		cbnz	r0, .L525
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6038              		.loc 1 3455 0
 6039 0018 03AB     		add	r3, sp, #12
 6040 001a 8C93     		str	r3, [sp, #560]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6041              		.loc 1 3456 0
 6042 001c 06A8     		add	r0, sp, #24
ARM GAS  /tmp/cclwbenu.s 			page 198


 6043              	.LVL856:
 6044 001e 0199     		ldr	r1, [sp, #4]
 6045 0020 FFF7FEFF 		bl	follow_path
 6046              	.LVL857:
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.dir) {		/* Found an object */
 6047              		.loc 1 3457 0
 6048 0024 0446     		mov	r4, r0
 6049 0026 40B9     		cbnz	r0, .L525
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
 6050              		.loc 1 3458 0
 6051 0028 8B9B     		ldr	r3, [sp, #556]
 6052 002a 2BB1     		cbz	r3, .L526
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
 6053              		.loc 1 3459 0
 6054 002c 2DB1     		cbz	r5, .L525
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
 6055              		.loc 1 3459 0 is_stmt 0 discriminator 1
 6056 002e 06A8     		add	r0, sp, #24
 6057              	.LVL858:
 6058 0030 2946     		mov	r1, r5
 6059 0032 FFF7FEFF 		bl	get_fileinfo
 6060              	.LVL859:
 6061 0036 00E0     		b	.L525
 6062              	.LVL860:
 6063              	.L526:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6064              		.loc 1 3461 0 is_stmt 1
 6065 0038 0624     		movs	r4, #6
 6066              	.LVL861:
 6067              	.L525:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6068              		.loc 1 3468 0
 6069 003a 2046     		mov	r0, r4
 6070 003c 0DF50F7D 		add	sp, sp, #572
 6071              	.LCFI64:
 6072              		.cfi_def_cfa_offset 12
 6073              		@ sp needed
 6074 0040 30BD     		pop	{r4, r5, pc}
 6075              		.cfi_endproc
 6076              	.LFE107:
 6078 0042 00BF     		.section	.text.f_getfree,"ax",%progbits
 6079              		.align	2
 6080              		.global	f_getfree
 6081              		.thumb
 6082              		.thumb_func
 6084              	f_getfree:
 6085              	.LFB108:
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6086              		.loc 1 3482 0
 6087              		.cfi_startproc
 6088              		@ args = 0, pretend = 0, frame = 8
 6089              		@ frame_needed = 0, uses_anonymous_args = 0
 6090              	.LVL862:
 6091 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6092              	.LCFI65:
 6093              		.cfi_def_cfa_offset 32
 6094              		.cfi_offset 4, -32
ARM GAS  /tmp/cclwbenu.s 			page 199


 6095              		.cfi_offset 5, -28
 6096              		.cfi_offset 6, -24
 6097              		.cfi_offset 7, -20
 6098              		.cfi_offset 8, -16
 6099              		.cfi_offset 9, -12
 6100              		.cfi_offset 10, -8
 6101              		.cfi_offset 14, -4
 6102 0004 82B0     		sub	sp, sp, #8
 6103              	.LCFI66:
 6104              		.cfi_def_cfa_offset 40
 6105 0006 02AB     		add	r3, sp, #8
 6106 0008 43F8040D 		str	r0, [r3, #-4]!
 6107 000c 8946     		mov	r9, r1
 6108 000e 1446     		mov	r4, r2
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = *fatfs;
 6109              		.loc 1 3491 0
 6110 0010 1046     		mov	r0, r2
 6111              	.LVL863:
 6112 0012 1946     		mov	r1, r3
 6113              	.LVL864:
 6114 0014 0022     		movs	r2, #0
 6115              	.LVL865:
 6116 0016 FFF7FEFF 		bl	find_volume
 6117              	.LVL866:
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6118              		.loc 1 3492 0
 6119 001a 2568     		ldr	r5, [r4]
 6120              	.LVL867:
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clust is valid, return it without full cluster scan */
 6121              		.loc 1 3493 0
 6122 001c 8046     		mov	r8, r0
 6123 001e 0028     		cmp	r0, #0
 6124 0020 65D1     		bne	.L529
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clust;
 6125              		.loc 1 3495 0
 6126 0022 D5F81032 		ldr	r3, [r5, #528]
 6127 0026 D5F81442 		ldr	r4, [r5, #532]
 6128              	.LVL868:
 6129 002a A21E     		subs	r2, r4, #2
 6130 002c 9342     		cmp	r3, r2
 6131 002e 02D8     		bhi	.L530
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6132              		.loc 1 3496 0
 6133 0030 C9F80030 		str	r3, [r9]
 6134 0034 5BE0     		b	.L529
 6135              	.L530:
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = 0;
 6136              		.loc 1 3499 0
 6137 0036 95F80072 		ldrb	r7, [r5, #512]	@ zero_extendqisi2
 6138              	.LVL869:
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2;
 6139              		.loc 1 3501 0
 6140 003a 012F     		cmp	r7, #1
 6141 003c 12D1     		bne	.L531
 6142 003e 0224     		movs	r4, #2
 6143 0040 0026     		movs	r6, #0
 6144              	.LVL870:
ARM GAS  /tmp/cclwbenu.s 			page 200


 6145              	.L534:
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 6146              		.loc 1 3504 0
 6147 0042 2846     		mov	r0, r5
 6148 0044 2146     		mov	r1, r4
 6149 0046 FFF7FEFF 		bl	get_fat
 6150              	.LVL871:
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6151              		.loc 1 3505 0
 6152 004a B0F1FF3F 		cmp	r0, #-1
 6153 004e 3FD0     		beq	.L541
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
 6154              		.loc 1 3506 0
 6155 0050 0128     		cmp	r0, #1
 6156 0052 40D0     		beq	.L542
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6157              		.loc 1 3507 0
 6158 0054 00B9     		cbnz	r0, .L533
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6159              		.loc 1 3507 0 is_stmt 0 discriminator 1
 6160 0056 0136     		adds	r6, r6, #1
 6161              	.LVL872:
 6162              	.L533:
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6163              		.loc 1 3508 0 is_stmt 1
 6164 0058 0134     		adds	r4, r4, #1
 6165              	.LVL873:
 6166 005a D5F81432 		ldr	r3, [r5, #532]
 6167 005e 9C42     		cmp	r4, r3
 6168 0060 EFD3     		bcc	.L534
 6169 0062 3AE0     		b	.L532
 6170              	.LVL874:
 6171              	.L531:
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; p = 0;
 6172              		.loc 1 3511 0
 6173 0064 D5F82012 		ldr	r1, [r5, #544]
 6174              	.LVL875:
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6175              		.loc 1 3512 0
 6176 0068 0022     		movs	r2, #0
 6177 006a 1046     		mov	r0, r2
 6178              	.LVL876:
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fat == FS_FAT12) {
 6179              		.loc 1 3500 0
 6180 006c 1646     		mov	r6, r2
 6181              	.LVL877:
 6182              	.L540:
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(fs, sect++);
 6183              		.loc 1 3514 0
 6184 006e 50B9     		cbnz	r0, .L535
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
 6185              		.loc 1 3515 0
 6186 0070 01F1010A 		add	r10, r1, #1
 6187              	.LVL878:
 6188 0074 2846     		mov	r0, r5
 6189              	.LVL879:
 6190 0076 FFF7FEFF 		bl	move_window
ARM GAS  /tmp/cclwbenu.s 			page 201


 6191              	.LVL880:
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 						p = fs->win.d8;
 6192              		.loc 1 3516 0
 6193 007a 8046     		mov	r8, r0
 6194 007c 68BB     		cbnz	r0, .L532
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = SS(fs);
 6195              		.loc 1 3517 0
 6196 007e 2A46     		mov	r2, r5
 6197              	.LVL881:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
 6198              		.loc 1 3515 0
 6199 0080 5146     		mov	r1, r10
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6200              		.loc 1 3518 0
 6201 0082 4FF40070 		mov	r0, #512
 6202              	.LVL882:
 6203              	.L535:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (LD_WORD(p) == 0) n++;
 6204              		.loc 1 3520 0
 6205 0086 022F     		cmp	r7, #2
 6206 0088 09D1     		bne	.L536
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
 6207              		.loc 1 3521 0
 6208 008a 92F801E0 		ldrb	lr, [r2, #1]	@ zero_extendqisi2
 6209 008e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6210 0090 53EA0E23 		orrs	r3, r3, lr, lsl #8
 6211 0094 00D1     		bne	.L537
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
 6212              		.loc 1 3521 0 is_stmt 0 discriminator 1
 6213 0096 0136     		adds	r6, r6, #1
 6214              	.LVL883:
 6215              	.L537:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6216              		.loc 1 3522 0 is_stmt 1
 6217 0098 0232     		adds	r2, r2, #2
 6218              	.LVL884:
 6219 009a 0238     		subs	r0, r0, #2
 6220              	.LVL885:
 6221 009c 15E0     		b	.L538
 6222              	.L536:
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
 6223              		.loc 1 3524 0
 6224 009e 92F803E0 		ldrb	lr, [r2, #3]	@ zero_extendqisi2
 6225 00a2 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 6226 00a4 1B04     		lsls	r3, r3, #16
 6227 00a6 43EA0E63 		orr	r3, r3, lr, lsl #24
 6228 00aa 92F801E0 		ldrb	lr, [r2, #1]	@ zero_extendqisi2
 6229 00ae 43EA0E23 		orr	r3, r3, lr, lsl #8
 6230 00b2 92F800E0 		ldrb	lr, [r2]	@ zero_extendqisi2
 6231 00b6 23F07043 		bic	r3, r3, #-268435456
 6232 00ba 23F0FF03 		bic	r3, r3, #255
 6233 00be 53EA0E03 		orrs	r3, r3, lr
 6234 00c2 00D1     		bne	.L539
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
 6235              		.loc 1 3524 0 is_stmt 0 discriminator 1
 6236 00c4 0136     		adds	r6, r6, #1
 6237              	.LVL886:
ARM GAS  /tmp/cclwbenu.s 			page 202


 6238              	.L539:
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6239              		.loc 1 3525 0 is_stmt 1
 6240 00c6 0432     		adds	r2, r2, #4
 6241              	.LVL887:
 6242 00c8 0438     		subs	r0, r0, #4
 6243              	.LVL888:
 6244              	.L538:
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6245              		.loc 1 3527 0
 6246 00ca 013C     		subs	r4, r4, #1
 6247              	.LVL889:
 6248 00cc CFD1     		bne	.L540
 6249 00ce 04E0     		b	.L532
 6250              	.LVL890:
 6251              	.L541:
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6252              		.loc 1 3505 0
 6253 00d0 4FF00108 		mov	r8, #1
 6254 00d4 01E0     		b	.L532
 6255              	.L542:
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
 6256              		.loc 1 3506 0
 6257 00d6 4FF00208 		mov	r8, #2
 6258              	.LVL891:
 6259              	.L532:
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 6260              		.loc 1 3529 0
 6261 00da C5F81062 		str	r6, [r5, #528]
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = n;
 6262              		.loc 1 3530 0
 6263 00de 95F80532 		ldrb	r3, [r5, #517]	@ zero_extendqisi2
 6264 00e2 43F00103 		orr	r3, r3, #1
 6265 00e6 85F80532 		strb	r3, [r5, #517]
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6266              		.loc 1 3531 0
 6267 00ea C9F80060 		str	r6, [r9]
 6268              	.LVL892:
 6269              	.L529:
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6270              		.loc 1 3535 0
 6271 00ee 4046     		mov	r0, r8
 6272 00f0 02B0     		add	sp, sp, #8
 6273              	.LCFI67:
 6274              		.cfi_def_cfa_offset 32
 6275              	.LVL893:
 6276              		@ sp needed
 6277 00f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6278              		.cfi_endproc
 6279              	.LFE108:
 6281 00f6 00BF     		.section	.text.f_truncate,"ax",%progbits
 6282              		.align	2
 6283              		.global	f_truncate
 6284              		.thumb
 6285              		.thumb_func
 6287              	f_truncate:
 6288              	.LFB109:
ARM GAS  /tmp/cclwbenu.s 			page 203


3547:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6289              		.loc 1 3547 0
 6290              		.cfi_startproc
 6291              		@ args = 0, pretend = 0, frame = 0
 6292              		@ frame_needed = 0, uses_anonymous_args = 0
 6293              	.LVL894:
 6294 0000 70B5     		push	{r4, r5, r6, lr}
 6295              	.LCFI68:
 6296              		.cfi_def_cfa_offset 16
 6297              		.cfi_offset 4, -16
 6298              		.cfi_offset 5, -12
 6299              		.cfi_offset 6, -8
 6300              		.cfi_offset 14, -4
 6301 0002 0446     		mov	r4, r0
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6302              		.loc 1 3552 0
 6303 0004 FFF7FEFF 		bl	validate
 6304              	.LVL895:
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->err) {						/* Check error */
 6305              		.loc 1 3553 0
 6306 0008 0546     		mov	r5, r0
 6307 000a 58B9     		cbnz	r0, .L545
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = (FRESULT)fp->err;
 6308              		.loc 1 3554 0
 6309 000c 94F80732 		ldrb	r3, [r4, #519]	@ zero_extendqisi2
 6310 0010 2BB9     		cbnz	r3, .L552
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DENIED;
 6311              		.loc 1 3557 0
 6312 0012 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 6313 0016 13F0020F 		tst	r3, #2
 6314 001a 02D0     		beq	.L553
 6315 001c 02E0     		b	.L545
 6316              	.L552:
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6317              		.loc 1 3555 0
 6318 001e 1D46     		mov	r5, r3
 6319 0020 00E0     		b	.L545
 6320              	.L553:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6321              		.loc 1 3558 0
 6322 0022 0725     		movs	r5, #7
 6323              	.L545:
 6324              	.LVL896:
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fsize > fp->fptr) {
 6325              		.loc 1 3561 0
 6326 0024 002D     		cmp	r5, #0
 6327 0026 58D1     		bne	.L546
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
 6328              		.loc 1 3562 0
 6329 0028 D4F80C22 		ldr	r2, [r4, #524]
 6330 002c D4F80832 		ldr	r3, [r4, #520]
 6331 0030 9A42     		cmp	r2, r3
 6332 0032 4FD9     		bls	.L547
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
 6333              		.loc 1 3563 0
 6334 0034 C4F80C32 		str	r3, [r4, #524]
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
ARM GAS  /tmp/cclwbenu.s 			page 204


 6335              		.loc 1 3564 0
 6336 0038 94F80622 		ldrb	r2, [r4, #518]	@ zero_extendqisi2
 6337 003c 42F02002 		orr	r2, r2, #32
 6338 0040 84F80622 		strb	r2, [r4, #518]
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(fp->fs, fp->sclust);
 6339              		.loc 1 3565 0
 6340 0044 53B9     		cbnz	r3, .L548
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->sclust = 0;
 6341              		.loc 1 3566 0
 6342 0046 D4F80002 		ldr	r0, [r4, #512]
 6343 004a D4F81012 		ldr	r1, [r4, #528]
 6344 004e FFF7FEFF 		bl	remove_chain
 6345              	.LVL897:
 6346 0052 0546     		mov	r5, r0
 6347              	.LVL898:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
 6348              		.loc 1 3567 0
 6349 0054 0023     		movs	r3, #0
 6350 0056 C4F81032 		str	r3, [r4, #528]
 6351 005a 22E0     		b	.L549
 6352              	.L548:
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 6353              		.loc 1 3569 0
 6354 005c D4F80002 		ldr	r0, [r4, #512]
 6355 0060 D4F81412 		ldr	r1, [r4, #532]
 6356 0064 FFF7FEFF 		bl	get_fat
 6357              	.LVL899:
 6358 0068 0646     		mov	r6, r0
 6359              	.LVL900:
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
 6360              		.loc 1 3571 0
 6361 006a B0F1FF3F 		cmp	r0, #-1
 6362 006e 00D1     		bne	.L550
 6363 0070 0125     		movs	r5, #1
 6364              	.L550:
 6365              	.LVL901:
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 6366              		.loc 1 3572 0
 6367 0072 012E     		cmp	r6, #1
 6368 0074 00D1     		bne	.L551
 6369 0076 0225     		movs	r5, #2
 6370              	.LVL902:
 6371              	.L551:
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 6372              		.loc 1 3573 0
 6373 0078 9DB9     		cbnz	r5, .L549
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 6374              		.loc 1 3573 0 is_stmt 0 discriminator 1
 6375 007a D4F80002 		ldr	r0, [r4, #512]
 6376              	.LVL903:
 6377 007e D0F81432 		ldr	r3, [r0, #532]
 6378 0082 B342     		cmp	r3, r6
 6379 0084 0DD9     		bls	.L549
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
 6380              		.loc 1 3574 0 is_stmt 1
 6381 0086 D4F81412 		ldr	r1, [r4, #532]
 6382 008a 6FF07042 		mvn	r2, #-268435456
ARM GAS  /tmp/cclwbenu.s 			page 205


 6383 008e FFF7FEFF 		bl	put_fat
 6384              	.LVL904:
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6385              		.loc 1 3575 0
 6386 0092 0546     		mov	r5, r0
 6387 0094 28B9     		cbnz	r0, .L549
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6388              		.loc 1 3575 0 is_stmt 0 discriminator 1
 6389 0096 D4F80002 		ldr	r0, [r4, #512]
 6390              	.LVL905:
 6391 009a 3146     		mov	r1, r6
 6392 009c FFF7FEFF 		bl	remove_chain
 6393              	.LVL906:
 6394 00a0 0546     		mov	r5, r0
 6395              	.LVL907:
 6396              	.L549:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 6397              		.loc 1 3579 0 is_stmt 1
 6398 00a2 BDB9     		cbnz	r5, .L547
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 6399              		.loc 1 3579 0 is_stmt 0 discriminator 1
 6400 00a4 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 6401 00a8 13F0400F 		tst	r3, #64
 6402 00ac 12D0     		beq	.L547
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DISK_ERR;
 6403              		.loc 1 3580 0 is_stmt 1
 6404 00ae D4F80032 		ldr	r3, [r4, #512]
 6405 00b2 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 6406 00b6 2146     		mov	r1, r4
 6407 00b8 D4F81822 		ldr	r2, [r4, #536]
 6408 00bc 0123     		movs	r3, #1
 6409 00be FFF7FEFF 		bl	disk_write
 6410              	.LVL908:
 6411 00c2 30B9     		cbnz	r0, .L556
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6412              		.loc 1 3583 0
 6413 00c4 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 6414 00c8 23F04003 		bic	r3, r3, #64
 6415 00cc 84F80632 		strb	r3, [r4, #518]
 6416 00d0 00E0     		b	.L547
 6417              	.L556:
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
 6418              		.loc 1 3581 0
 6419 00d2 0125     		movs	r5, #1
 6420              	.LVL909:
 6421              	.L547:
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6422              		.loc 1 3587 0
 6423 00d4 0DB1     		cbz	r5, .L546
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6424              		.loc 1 3587 0 is_stmt 0 discriminator 1
 6425 00d6 84F80752 		strb	r5, [r4, #519]
 6426              	.L546:
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6427              		.loc 1 3591 0 is_stmt 1
 6428 00da 2846     		mov	r0, r5
 6429 00dc 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cclwbenu.s 			page 206


 6430              		.cfi_endproc
 6431              	.LFE109:
 6433 00de 00BF     		.section	.text.f_unlink,"ax",%progbits
 6434              		.align	2
 6435              		.global	f_unlink
 6436              		.thumb
 6437              		.thumb_func
 6439              	f_unlink:
 6440              	.LFB110:
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6441              		.loc 1 3603 0
 6442              		.cfi_startproc
 6443              		@ args = 0, pretend = 0, frame = 1112
 6444              		@ frame_needed = 0, uses_anonymous_args = 0
 6445              	.LVL910:
 6446 0000 70B5     		push	{r4, r5, r6, lr}
 6447              	.LCFI69:
 6448              		.cfi_def_cfa_offset 16
 6449              		.cfi_offset 4, -16
 6450              		.cfi_offset 5, -12
 6451              		.cfi_offset 6, -8
 6452              		.cfi_offset 14, -4
 6453 0002 ADF58B6D 		sub	sp, sp, #1112
 6454              	.LCFI70:
 6455              		.cfi_def_cfa_offset 1128
 6456 0006 0190     		str	r0, [sp, #4]
 6457              	.LVL911:
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6458              		.loc 1 3612 0
 6459 0008 0DF58760 		add	r0, sp, #1080
 6460              	.LVL912:
 6461 000c 01A9     		add	r1, sp, #4
 6462              	.LVL913:
 6463 000e 0122     		movs	r2, #1
 6464 0010 FFF7FEFF 		bl	find_volume
 6465              	.LVL914:
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6466              		.loc 1 3613 0
 6467 0014 0446     		mov	r4, r0
 6468 0016 0028     		cmp	r0, #0
 6469 0018 52D1     		bne	.L559
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 6470              		.loc 1 3614 0
 6471 001a 03AB     		add	r3, sp, #12
 6472 001c CDF85034 		str	r3, [sp, #1104]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
 6473              		.loc 1 3615 0
 6474 0020 8EA8     		add	r0, sp, #568
 6475              	.LVL915:
 6476 0022 0199     		ldr	r1, [sp, #4]
 6477 0024 FFF7FEFF 		bl	follow_path
 6478              	.LVL916:
3619:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6479              		.loc 1 3619 0
 6480 0028 0446     		mov	r4, r0
 6481 002a 20B9     		cbnz	r0, .L560
3619:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cclwbenu.s 			page 207


 6482              		.loc 1 3619 0 is_stmt 0 discriminator 1
 6483 002c 8EA8     		add	r0, sp, #568
 6484              	.LVL917:
 6485 002e 0221     		movs	r1, #2
 6486 0030 FFF7FEFF 		bl	chk_lock
 6487              	.LVL918:
 6488 0034 0446     		mov	r4, r0
 6489              	.LVL919:
 6490              	.L560:
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 6491              		.loc 1 3621 0 is_stmt 1
 6492 0036 002C     		cmp	r4, #0
 6493 0038 42D1     		bne	.L559
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {
 6494              		.loc 1 3622 0
 6495 003a DDF84C54 		ldr	r5, [sp, #1100]
 6496              	.LVL920:
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 6497              		.loc 1 3623 0
 6498 003e 25B1     		cbz	r5, .L565
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 6499              		.loc 1 3626 0
 6500 0040 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 6501 0042 13F0010F 		tst	r3, #1
 6502 0046 02D1     		bne	.L566
 6503 0048 02E0     		b	.L561
 6504              	.L565:
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6505              		.loc 1 3624 0
 6506 004a 0624     		movs	r4, #6
 6507              	.LVL921:
 6508 004c 00E0     		b	.L561
 6509              	.LVL922:
 6510              	.L566:
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6511              		.loc 1 3627 0
 6512 004e 0724     		movs	r4, #7
 6513              	.LVL923:
 6514              	.L561:
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 				dclst = ld_clust(dj.fs, dir);
 6515              		.loc 1 3629 0
 6516 0050 14BB     		cbnz	r4, .L567
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dclst && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-directory ? */
 6517              		.loc 1 3630 0
 6518 0052 DDF83804 		ldr	r0, [sp, #1080]
 6519 0056 2946     		mov	r1, r5
 6520 0058 FFF7FEFF 		bl	ld_clust
 6521              	.LVL924:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 6522              		.loc 1 3631 0
 6523 005c 0646     		mov	r6, r0
 6524 005e E0B1     		cbz	r0, .L562
3631:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 6525              		.loc 1 3631 0 is_stmt 0 discriminator 1
 6526 0060 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 6527 0062 13F0100F 		tst	r3, #16
 6528 0066 18D0     		beq	.L562
ARM GAS  /tmp/cclwbenu.s 			page 208


3638:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.sclust = dclst;
 6529              		.loc 1 3638 0 is_stmt 1
 6530 0068 06A8     		add	r0, sp, #24
 6531              	.LVL925:
 6532 006a 8EA9     		add	r1, sp, #568
 6533 006c 4FF40872 		mov	r2, #544
 6534 0070 FFF7FEFF 		bl	mem_cpy
 6535              	.LVL926:
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 2);
 6536              		.loc 1 3639 0
 6537 0074 8896     		str	r6, [sp, #544]
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 6538              		.loc 1 3640 0
 6539 0076 06A8     		add	r0, sp, #24
 6540 0078 0221     		movs	r1, #2
 6541 007a FFF7FEFF 		bl	dir_sdi
 6542              	.LVL927:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item (excluding dot entries) */
 6543              		.loc 1 3641 0
 6544 007e 0446     		mov	r4, r0
 6545 0080 58B9     		cbnz	r0, .L562
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? (cannot remove) */
 6546              		.loc 1 3642 0
 6547 0082 06A8     		add	r0, sp, #24
 6548              	.LVL928:
 6549 0084 0021     		movs	r1, #0
 6550 0086 FFF7FEFF 		bl	dir_read
 6551              	.LVL929:
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
 6552              		.loc 1 3643 0
 6553 008a 0346     		mov	r3, r0
 6554 008c 00B9     		cbnz	r0, .L563
 6555 008e 0723     		movs	r3, #7
 6556              	.L563:
 6557              	.LVL930:
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6558              		.loc 1 3644 0
 6559 0090 042B     		cmp	r3, #4
 6560 0092 02D0     		beq	.L562
 6561 0094 1C46     		mov	r4, r3
 6562 0096 00E0     		b	.L562
 6563              	.LVL931:
 6564              	.L567:
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
 6565              		.loc 1 3607 0
 6566 0098 0026     		movs	r6, #0
 6567              	.LVL932:
 6568              	.L562:
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);		/* Remove the directory entry */
 6569              		.loc 1 3649 0
 6570 009a 8CB9     		cbnz	r4, .L559
3650:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst)	/* Remove the cluster chain if exist */
 6571              		.loc 1 3650 0
 6572 009c 8EA8     		add	r0, sp, #568
 6573 009e FFF7FEFF 		bl	dir_remove
 6574              	.LVL933:
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
ARM GAS  /tmp/cclwbenu.s 			page 209


 6575              		.loc 1 3651 0
 6576 00a2 0446     		mov	r4, r0
 6577 00a4 30B9     		cbnz	r0, .L564
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
 6578              		.loc 1 3651 0 is_stmt 0 discriminator 1
 6579 00a6 2EB1     		cbz	r6, .L564
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(dj.fs);
 6580              		.loc 1 3652 0 is_stmt 1
 6581 00a8 DDF83804 		ldr	r0, [sp, #1080]
 6582              	.LVL934:
 6583 00ac 3146     		mov	r1, r6
 6584 00ae FFF7FEFF 		bl	remove_chain
 6585              	.LVL935:
 6586 00b2 0446     		mov	r4, r0
 6587              	.LVL936:
 6588              	.L564:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6589              		.loc 1 3653 0
 6590 00b4 24B9     		cbnz	r4, .L559
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6591              		.loc 1 3653 0 is_stmt 0 discriminator 1
 6592 00b6 DDF83804 		ldr	r0, [sp, #1080]
 6593 00ba FFF7FEFF 		bl	sync_fs
 6594              	.LVL937:
 6595 00be 0446     		mov	r4, r0
 6596              	.LVL938:
 6597              	.L559:
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6598              		.loc 1 3660 0 is_stmt 1
 6599 00c0 2046     		mov	r0, r4
 6600 00c2 0DF58B6D 		add	sp, sp, #1112
 6601              	.LCFI71:
 6602              		.cfi_def_cfa_offset 16
 6603              		@ sp needed
 6604 00c6 70BD     		pop	{r4, r5, r6, pc}
 6605              		.cfi_endproc
 6606              	.LFE110:
 6608              		.section	.text.f_mkdir,"ax",%progbits
 6609              		.align	2
 6610              		.global	f_mkdir
 6611              		.thumb
 6612              		.thumb_func
 6614              	f_mkdir:
 6615              	.LFB111:
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6616              		.loc 1 3672 0
 6617              		.cfi_startproc
 6618              		@ args = 0, pretend = 0, frame = 568
 6619              		@ frame_needed = 0, uses_anonymous_args = 0
 6620              	.LVL939:
 6621 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6622              	.LCFI72:
 6623              		.cfi_def_cfa_offset 36
 6624              		.cfi_offset 4, -36
 6625              		.cfi_offset 5, -32
 6626              		.cfi_offset 6, -28
 6627              		.cfi_offset 7, -24
ARM GAS  /tmp/cclwbenu.s 			page 210


 6628              		.cfi_offset 8, -20
 6629              		.cfi_offset 9, -16
 6630              		.cfi_offset 10, -12
 6631              		.cfi_offset 11, -8
 6632              		.cfi_offset 14, -4
 6633 0004 ADF50F7D 		sub	sp, sp, #572
 6634              	.LCFI73:
 6635              		.cfi_def_cfa_offset 608
 6636 0008 0190     		str	r0, [sp, #4]
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
 6637              		.loc 1 3676 0
 6638 000a FFF7FEFF 		bl	get_fattime
 6639              	.LVL940:
 6640 000e 0546     		mov	r5, r0
 6641              	.LVL941:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6642              		.loc 1 3681 0
 6643 0010 86A8     		add	r0, sp, #536
 6644              	.LVL942:
 6645 0012 01A9     		add	r1, sp, #4
 6646              	.LVL943:
 6647 0014 0122     		movs	r2, #1
 6648 0016 FFF7FEFF 		bl	find_volume
 6649              	.LVL944:
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6650              		.loc 1 3682 0
 6651 001a 0446     		mov	r4, r0
 6652 001c 0028     		cmp	r0, #0
 6653 001e 40F09C80 		bne	.L571
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 6654              		.loc 1 3683 0
 6655 0022 03AB     		add	r3, sp, #12
 6656 0024 8C93     		str	r3, [sp, #560]
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 6657              		.loc 1 3684 0
 6658 0026 06A8     		add	r0, sp, #24
 6659              	.LVL945:
 6660 0028 0199     		ldr	r1, [sp, #4]
 6661 002a FFF7FEFF 		bl	follow_path
 6662              	.LVL946:
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
 6663              		.loc 1 3685 0
 6664 002e 0346     		mov	r3, r0
 6665 0030 00B9     		cbnz	r0, .L572
 6666 0032 0823     		movs	r3, #8
 6667              	.L572:
 6668              	.LVL947:
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
 6669              		.loc 1 3688 0
 6670 0034 042B     		cmp	r3, #4
 6671 0036 40F08F80 		bne	.L584
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 6672              		.loc 1 3689 0
 6673 003a 8698     		ldr	r0, [sp, #536]
 6674 003c 0021     		movs	r1, #0
 6675 003e FFF7FEFF 		bl	create_chain
 6676              	.LVL948:
ARM GAS  /tmp/cclwbenu.s 			page 211


3691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 6677              		.loc 1 3691 0
 6678 0042 8146     		mov	r9, r0
 6679 0044 00B9     		cbnz	r0, .L573
 6680 0046 0724     		movs	r4, #7
 6681              	.L573:
 6682              	.LVL949:
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 6683              		.loc 1 3692 0
 6684 0048 B9F1010F 		cmp	r9, #1
 6685 004c 00D1     		bne	.L574
 6686 004e 0224     		movs	r4, #2
 6687              	.LVL950:
 6688              	.L574:
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
 6689              		.loc 1 3693 0
 6690 0050 B9F1FF3F 		cmp	r9, #-1
 6691 0054 00D1     		bne	.L575
 6692 0056 0124     		movs	r4, #1
 6693              	.LVL951:
 6694              	.L575:
3694:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_window(dj.fs);
 6695              		.loc 1 3694 0
 6696 0058 1CB9     		cbnz	r4, .L576
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 6697              		.loc 1 3695 0
 6698 005a 8698     		ldr	r0, [sp, #536]
 6699              	.LVL952:
 6700 005c FFF7FEFF 		bl	sync_window
 6701              	.LVL953:
 6702 0060 0446     		mov	r4, r0
 6703              	.LVL954:
 6704              	.L576:
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(dj.fs, dcl);
 6705              		.loc 1 3696 0
 6706 0062 002C     		cmp	r4, #0
 6707 0064 56D1     		bne	.L577
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.fs->win.d8;
 6708              		.loc 1 3697 0
 6709 0066 869E     		ldr	r6, [sp, #536]
 6710 0068 3046     		mov	r0, r6
 6711 006a 4946     		mov	r1, r9
 6712 006c FFF7FEFF 		bl	clust2sect
 6713              	.LVL955:
 6714 0070 0746     		mov	r7, r0
 6715              	.LVL956:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(dj.fs));
 6716              		.loc 1 3698 0
 6717 0072 B246     		mov	r10, r6
 6718              	.LVL957:
3699:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
 6719              		.loc 1 3699 0
 6720 0074 3046     		mov	r0, r6
 6721              	.LVL958:
 6722 0076 0021     		movs	r1, #0
 6723 0078 4FF40072 		mov	r2, #512
 6724 007c FFF7FEFF 		bl	mem_set
ARM GAS  /tmp/cclwbenu.s 			page 212


 6725              	.LVL959:
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Name] = '.';
 6726              		.loc 1 3700 0
 6727 0080 3046     		mov	r0, r6
 6728 0082 2021     		movs	r1, #32
 6729 0084 0B22     		movs	r2, #11
 6730 0086 FFF7FEFF 		bl	mem_set
 6731              	.LVL960:
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;
 6732              		.loc 1 3701 0
 6733 008a 4FF02E0B 		mov	fp, #46
 6734 008e 86F800B0 		strb	fp, [r6]
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
 6735              		.loc 1 3702 0
 6736 0092 1023     		movs	r3, #16
 6737 0094 F372     		strb	r3, [r6, #11]
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);
 6738              		.loc 1 3703 0
 6739 0096 B575     		strb	r5, [r6, #22]
 6740 0098 C5F30723 		ubfx	r3, r5, #8, #8
 6741 009c F375     		strb	r3, [r6, #23]
 6742 009e C5F30743 		ubfx	r3, r5, #16, #8
 6743 00a2 3376     		strb	r3, [r6, #24]
 6744 00a4 2B0E     		lsrs	r3, r5, #24
 6745 00a6 7376     		strb	r3, [r6, #25]
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dir + SZ_DIRE, dir, SZ_DIRE); 	/* Create ".." entry */
 6746              		.loc 1 3704 0
 6747 00a8 3046     		mov	r0, r6
 6748 00aa 4946     		mov	r1, r9
 6749 00ac FFF7FEFF 		bl	st_clust
 6750              	.LVL961:
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[SZ_DIRE + 1] = '.'; pcl = dj.sclust;
 6751              		.loc 1 3705 0
 6752 00b0 06F12008 		add	r8, r6, #32
 6753 00b4 4046     		mov	r0, r8
 6754 00b6 3146     		mov	r1, r6
 6755 00b8 2022     		movs	r2, #32
 6756 00ba FFF7FEFF 		bl	mem_cpy
 6757              	.LVL962:
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
 6758              		.loc 1 3706 0
 6759 00be 86F821B0 		strb	fp, [r6, #33]
 6760 00c2 8899     		ldr	r1, [sp, #544]
 6761              	.LVL963:
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
 6762              		.loc 1 3707 0
 6763 00c4 869B     		ldr	r3, [sp, #536]
 6764 00c6 93F80022 		ldrb	r2, [r3, #512]	@ zero_extendqisi2
 6765 00ca 032A     		cmp	r2, #3
 6766 00cc 04D1     		bne	.L578
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
 6767              		.loc 1 3707 0 is_stmt 0 discriminator 1
 6768 00ce D3F82432 		ldr	r3, [r3, #548]
 6769 00d2 8B42     		cmp	r3, r1
 6770 00d4 00D1     		bne	.L578
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir + SZ_DIRE, pcl);
 6771              		.loc 1 3708 0 is_stmt 1
ARM GAS  /tmp/cclwbenu.s 			page 213


 6772 00d6 0021     		movs	r1, #0
 6773              	.LVL964:
 6774              	.L578:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 6775              		.loc 1 3709 0
 6776 00d8 4046     		mov	r0, r8
 6777 00da FFF7FEFF 		bl	st_clust
 6778              	.LVL965:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 6779              		.loc 1 3710 0
 6780 00de 869B     		ldr	r3, [sp, #536]
 6781 00e0 93F80262 		ldrb	r6, [r3, #514]	@ zero_extendqisi2
 6782              	.LVL966:
 6783 00e4 14E0     		b	.L579
 6784              	.L580:
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
 6785              		.loc 1 3711 0
 6786 00e6 8698     		ldr	r0, [sp, #536]
 6787 00e8 07F10108 		add	r8, r7, #1
 6788              	.LVL967:
 6789 00ec C0F82C72 		str	r7, [r0, #556]
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(dj.fs);
 6790              		.loc 1 3712 0
 6791 00f0 0123     		movs	r3, #1
 6792 00f2 80F80432 		strb	r3, [r0, #516]
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 6793              		.loc 1 3713 0
 6794 00f6 FFF7FEFF 		bl	sync_window
 6795              	.LVL968:
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(dj.fs));
 6796              		.loc 1 3714 0
 6797 00fa 0446     		mov	r4, r0
 6798 00fc 50B9     		cbnz	r0, .L577
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6799              		.loc 1 3715 0 discriminator 2
 6800 00fe 5046     		mov	r0, r10
 6801              	.LVL969:
 6802 0100 0021     		movs	r1, #0
 6803 0102 4FF40072 		mov	r2, #512
 6804 0106 FFF7FEFF 		bl	mem_set
 6805              	.LVL970:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 6806              		.loc 1 3710 0 discriminator 2
 6807 010a 013E     		subs	r6, r6, #1
 6808              	.LVL971:
 6809 010c F6B2     		uxtb	r6, r6
 6810              	.LVL972:
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
 6811              		.loc 1 3711 0 discriminator 2
 6812 010e 4746     		mov	r7, r8
 6813              	.LVL973:
 6814              	.L579:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 6815              		.loc 1 3710 0 discriminator 1
 6816 0110 002E     		cmp	r6, #0
 6817 0112 E8D1     		bne	.L580
 6818              	.LVL974:
ARM GAS  /tmp/cclwbenu.s 			page 214


 6819              	.L577:
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
 6820              		.loc 1 3718 0
 6821 0114 1CB9     		cbnz	r4, .L581
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
 6822              		.loc 1 3718 0 is_stmt 0 discriminator 1
 6823 0116 06A8     		add	r0, sp, #24
 6824 0118 FFF7FEFF 		bl	dir_register
 6825              	.LVL975:
 6826 011c 0446     		mov	r4, r0
 6827              	.LVL976:
 6828              	.L581:
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
 6829              		.loc 1 3719 0 is_stmt 1
 6830 011e 24B1     		cbz	r4, .L582
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6831              		.loc 1 3720 0
 6832 0120 8698     		ldr	r0, [sp, #536]
 6833 0122 4946     		mov	r1, r9
 6834 0124 FFF7FEFF 		bl	remove_chain
 6835              	.LVL977:
 6836 0128 17E0     		b	.L571
 6837              	.L582:
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
 6838              		.loc 1 3722 0
 6839 012a 8B98     		ldr	r0, [sp, #556]
 6840              	.LVL978:
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);	/* Created time */
 6841              		.loc 1 3723 0
 6842 012c 1023     		movs	r3, #16
 6843 012e C372     		strb	r3, [r0, #11]
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);					/* Table start cluster */
 6844              		.loc 1 3724 0
 6845 0130 8575     		strb	r5, [r0, #22]
 6846 0132 C5F30723 		ubfx	r3, r5, #8, #8
 6847 0136 C375     		strb	r3, [r0, #23]
 6848 0138 C5F30743 		ubfx	r3, r5, #16, #8
 6849 013c 0376     		strb	r3, [r0, #24]
 6850 013e 2D0E     		lsrs	r5, r5, #24
 6851              	.LVL979:
 6852 0140 4576     		strb	r5, [r0, #25]
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 6853              		.loc 1 3725 0
 6854 0142 4946     		mov	r1, r9
 6855 0144 FFF7FEFF 		bl	st_clust
 6856              	.LVL980:
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 6857              		.loc 1 3726 0
 6858 0148 8698     		ldr	r0, [sp, #536]
 6859 014a 0123     		movs	r3, #1
 6860 014c 80F80432 		strb	r3, [r0, #516]
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6861              		.loc 1 3727 0
 6862 0150 FFF7FEFF 		bl	sync_fs
 6863              	.LVL981:
 6864 0154 0446     		mov	r4, r0
 6865              	.LVL982:
ARM GAS  /tmp/cclwbenu.s 			page 215


 6866 0156 00E0     		b	.L571
 6867              	.LVL983:
 6868              	.L584:
 6869 0158 1C46     		mov	r4, r3
 6870              	.LVL984:
 6871              	.L571:
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6872              		.loc 1 3734 0
 6873 015a 2046     		mov	r0, r4
 6874 015c 0DF50F7D 		add	sp, sp, #572
 6875              	.LCFI74:
 6876              		.cfi_def_cfa_offset 36
 6877              		@ sp needed
 6878 0160 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6879              		.cfi_endproc
 6880              	.LFE111:
 6882              		.section	.text.f_chmod,"ax",%progbits
 6883              		.align	2
 6884              		.global	f_chmod
 6885              		.thumb
 6886              		.thumb_func
 6888              	f_chmod:
 6889              	.LFB112:
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6890              		.loc 1 3748 0
 6891              		.cfi_startproc
 6892              		@ args = 0, pretend = 0, frame = 568
 6893              		@ frame_needed = 0, uses_anonymous_args = 0
 6894              	.LVL985:
 6895 0000 30B5     		push	{r4, r5, lr}
 6896              	.LCFI75:
 6897              		.cfi_def_cfa_offset 12
 6898              		.cfi_offset 4, -12
 6899              		.cfi_offset 5, -8
 6900              		.cfi_offset 14, -4
 6901 0002 ADF50F7D 		sub	sp, sp, #572
 6902              	.LCFI76:
 6903              		.cfi_def_cfa_offset 584
 6904 0006 0190     		str	r0, [sp, #4]
 6905 0008 0D46     		mov	r5, r1
 6906 000a 1446     		mov	r4, r2
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6907              		.loc 1 3756 0
 6908 000c 86A8     		add	r0, sp, #536
 6909              	.LVL986:
 6910 000e 01A9     		add	r1, sp, #4
 6911              	.LVL987:
 6912 0010 0122     		movs	r2, #1
 6913              	.LVL988:
 6914 0012 FFF7FEFF 		bl	find_volume
 6915              	.LVL989:
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6916              		.loc 1 3757 0
 6917 0016 0346     		mov	r3, r0
 6918 0018 D8B9     		cbnz	r0, .L591
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 6919              		.loc 1 3758 0
ARM GAS  /tmp/cclwbenu.s 			page 216


 6920 001a 03AB     		add	r3, sp, #12
 6921 001c 8C93     		str	r3, [sp, #560]
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 6922              		.loc 1 3759 0
 6923 001e 06A8     		add	r0, sp, #24
 6924              	.LVL990:
 6925 0020 0199     		ldr	r1, [sp, #4]
 6926 0022 FFF7FEFF 		bl	follow_path
 6927              	.LVL991:
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 6928              		.loc 1 3763 0
 6929 0026 0346     		mov	r3, r0
 6930 0028 98B9     		cbnz	r0, .L591
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Is it a root directory? */
 6931              		.loc 1 3764 0
 6932 002a 8B9A     		ldr	r2, [sp, #556]
 6933              	.LVL992:
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6934              		.loc 1 3765 0
 6935 002c 82B1     		cbz	r2, .L592
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = (attr & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
 6936              		.loc 1 3768 0
 6937 002e 04F02704 		and	r4, r4, #39
 6938              	.LVL993:
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 6939              		.loc 1 3769 0
 6940 0032 D17A     		ldrb	r1, [r2, #11]	@ zero_extendqisi2
 6941 0034 84F0FF03 		eor	r3, r4, #255
 6942 0038 2C40     		ands	r4, r4, r5
 6943              	.LVL994:
 6944 003a 0B40     		ands	r3, r3, r1
 6945              	.LVL995:
 6946 003c 1C43     		orrs	r4, r4, r3
 6947 003e D472     		strb	r4, [r2, #11]
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 6948              		.loc 1 3770 0
 6949 0040 8698     		ldr	r0, [sp, #536]
 6950              	.LVL996:
 6951 0042 0123     		movs	r3, #1
 6952 0044 80F80432 		strb	r3, [r0, #516]
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6953              		.loc 1 3771 0
 6954 0048 FFF7FEFF 		bl	sync_fs
 6955              	.LVL997:
 6956 004c 0346     		mov	r3, r0
 6957              	.LVL998:
 6958 004e 00E0     		b	.L591
 6959              	.LVL999:
 6960              	.L592:
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* File or sub directory */
 6961              		.loc 1 3766 0
 6962 0050 0623     		movs	r3, #6
 6963              	.LVL1000:
 6964              	.L591:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6965              		.loc 1 3777 0
 6966 0052 1846     		mov	r0, r3
ARM GAS  /tmp/cclwbenu.s 			page 217


 6967 0054 0DF50F7D 		add	sp, sp, #572
 6968              	.LCFI77:
 6969              		.cfi_def_cfa_offset 12
 6970              		@ sp needed
 6971 0058 30BD     		pop	{r4, r5, pc}
 6972              		.cfi_endproc
 6973              	.LFE112:
 6975 005a 00BF     		.section	.text.f_rename,"ax",%progbits
 6976              		.align	2
 6977              		.global	f_rename
 6978              		.thumb
 6979              		.thumb_func
 6981              	f_rename:
 6982              	.LFB113:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6983              		.loc 1 3790 0
 6984              		.cfi_startproc
 6985              		@ args = 0, pretend = 0, frame = 1136
 6986              		@ frame_needed = 0, uses_anonymous_args = 0
 6987              	.LVL1001:
 6988 0000 70B5     		push	{r4, r5, r6, lr}
 6989              	.LCFI78:
 6990              		.cfi_def_cfa_offset 16
 6991              		.cfi_offset 4, -16
 6992              		.cfi_offset 5, -12
 6993              		.cfi_offset 6, -8
 6994              		.cfi_offset 14, -4
 6995 0002 ADF58E6D 		sub	sp, sp, #1136
 6996              	.LCFI79:
 6997              		.cfi_def_cfa_offset 1152
 6998 0006 0190     		str	r0, [sp, #4]
 6999 0008 0091     		str	r1, [sp]
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7000              		.loc 1 3799 0
 7001 000a 0DF58A60 		add	r0, sp, #1104
 7002              	.LVL1002:
 7003 000e 01A9     		add	r1, sp, #4
 7004              	.LVL1003:
 7005 0010 0122     		movs	r2, #1
 7006 0012 FFF7FEFF 		bl	find_volume
 7007              	.LVL1004:
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 		djn.fs = djo.fs;
 7008              		.loc 1 3800 0
 7009 0016 0446     		mov	r4, r0
 7010 0018 0028     		cmp	r0, #0
 7011 001a 40F08280 		bne	.L595
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(djo);
 7012              		.loc 1 3801 0
 7013 001e DDF85034 		ldr	r3, [sp, #1104]
 7014 0022 8C93     		str	r3, [sp, #560]
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 7015              		.loc 1 3802 0
 7016 0024 03AB     		add	r3, sp, #12
 7017 0026 CDF86834 		str	r3, [sp, #1128]
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NSFLAG] & NS_DOT))
 7018              		.loc 1 3803 0
 7019 002a 94A8     		add	r0, sp, #592
ARM GAS  /tmp/cclwbenu.s 			page 218


 7020              	.LVL1005:
 7021 002c 0199     		ldr	r1, [sp, #4]
 7022 002e FFF7FEFF 		bl	follow_path
 7023              	.LVL1006:
3807:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7024              		.loc 1 3807 0
 7025 0032 0446     		mov	r4, r0
 7026 0034 20B9     		cbnz	r0, .L596
3807:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7027              		.loc 1 3807 0 is_stmt 0 discriminator 1
 7028 0036 94A8     		add	r0, sp, #592
 7029              	.LVL1007:
 7030 0038 0221     		movs	r1, #2
 7031 003a FFF7FEFF 		bl	chk_lock
 7032              	.LVL1008:
 7033 003e 0446     		mov	r4, r0
 7034              	.LVL1009:
 7035              	.L596:
3809:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!djo.dir) {						/* Is root dir? */
 7036              		.loc 1 3809 0 is_stmt 1
 7037 0040 002C     		cmp	r4, #0
 7038 0042 6ED1     		bne	.L595
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_FILE;
 7039              		.loc 1 3810 0
 7040 0044 DDF86414 		ldr	r1, [sp, #1124]
 7041 0048 0029     		cmp	r1, #0
 7042 004a 69D0     		beq	.L600
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7043              		.loc 1 3813 0
 7044 004c 06A8     		add	r0, sp, #24
 7045 004e 0B31     		adds	r1, r1, #11
 7046 0050 1522     		movs	r2, #21
 7047 0052 FFF7FEFF 		bl	mem_cpy
 7048              	.LVL1010:
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
 7049              		.loc 1 3814 0
 7050 0056 0CA8     		add	r0, sp, #48
 7051 0058 94A9     		add	r1, sp, #592
 7052 005a 4FF40872 		mov	r2, #544
 7053 005e FFF7FEFF 		bl	mem_cpy
 7054              	.LVL1011:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = follow_path(&djn, path_new);	/* and make sure if new object name is not conflicting */
 7055              		.loc 1 3815 0
 7056 0062 6846     		mov	r0, sp
 7057 0064 FFF7FEFF 		bl	get_ldnumber
 7058              	.LVL1012:
 7059 0068 0028     		cmp	r0, #0
 7060 006a 05DB     		blt	.L601
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
 7061              		.loc 1 3816 0
 7062 006c 0CA8     		add	r0, sp, #48
 7063 006e 0099     		ldr	r1, [sp]
 7064 0070 FFF7FEFF 		bl	follow_path
 7065              	.LVL1013:
 7066 0074 0446     		mov	r4, r0
 7067              	.LVL1014:
 7068 0076 00E0     		b	.L597
ARM GAS  /tmp/cclwbenu.s 			page 219


 7069              	.L601:
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
 7070              		.loc 1 3818 0
 7071 0078 0B24     		movs	r4, #11
 7072              	.LVL1015:
 7073              	.L597:
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
 7074              		.loc 1 3819 0
 7075 007a 04B9     		cbnz	r4, .L598
 7076 007c 0824     		movs	r4, #8
 7077              	.LVL1016:
 7078              	.L598:
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7079              		.loc 1 3820 0
 7080 007e 042C     		cmp	r4, #4
 7081 0080 4FD1     		bne	.L595
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 7082              		.loc 1 3821 0
 7083 0082 0CA8     		add	r0, sp, #48
 7084 0084 FFF7FEFF 		bl	dir_register
 7085              	.LVL1017:
3822:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where any interruption can cause a cross-link */
 7086              		.loc 1 3822 0
 7087 0088 0446     		mov	r4, r0
 7088 008a 0028     		cmp	r0, #0
 7089 008c 49D1     		bne	.L595
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 7090              		.loc 1 3824 0
 7091 008e 919D     		ldr	r5, [sp, #580]
 7092              	.LVL1018:
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 7093              		.loc 1 3825 0
 7094 0090 05F10D00 		add	r0, r5, #13
 7095              	.LVL1019:
 7096 0094 0DF11A01 		add	r1, sp, #26
 7097 0098 1322     		movs	r2, #19
 7098 009a FFF7FEFF 		bl	mem_cpy
 7099              	.LVL1020:
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 						djo.fs->wflag = 1;
 7100              		.loc 1 3826 0
 7101 009e 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 7102 00a2 43F02003 		orr	r3, r3, #32
 7103 00a6 EB72     		strb	r3, [r5, #11]
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.sclust != djn.sclust) {	/* Update .. entry in the sub-dir
 7104              		.loc 1 3827 0
 7105 00a8 DDF85064 		ldr	r6, [sp, #1104]
 7106 00ac 0123     		movs	r3, #1
 7107 00ae 86F80432 		strb	r3, [r6, #516]
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
 7108              		.loc 1 3828 0
 7109 00b2 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 7110 00b4 13F0100F 		tst	r3, #16
 7111 00b8 26D0     		beq	.L599
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
 7112              		.loc 1 3828 0 is_stmt 0 discriminator 1
 7113 00ba 8E9B     		ldr	r3, [sp, #568]
 7114 00bc DDF85824 		ldr	r2, [sp, #1112]
ARM GAS  /tmp/cclwbenu.s 			page 220


 7115 00c0 9A42     		cmp	r2, r3
 7116 00c2 21D0     		beq	.L599
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 7117              		.loc 1 3829 0 is_stmt 1
 7118 00c4 3046     		mov	r0, r6
 7119 00c6 2946     		mov	r1, r5
 7120 00c8 FFF7FEFF 		bl	ld_clust
 7121              	.LVL1021:
 7122 00cc 0146     		mov	r1, r0
 7123 00ce 3046     		mov	r0, r6
 7124 00d0 FFF7FEFF 		bl	clust2sect
 7125              	.LVL1022:
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 7126              		.loc 1 3830 0
 7127 00d4 0146     		mov	r1, r0
 7128 00d6 B0B1     		cbz	r0, .L603
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = djo.fs->win.d8 + SZ_DIRE * 1;	/* Ptr to .. entry */
 7129              		.loc 1 3833 0
 7130 00d8 3046     		mov	r0, r6
 7131              	.LVL1023:
 7132 00da FFF7FEFF 		bl	move_window
 7133              	.LVL1024:
3834:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 7134              		.loc 1 3834 0
 7135 00de DDF85034 		ldr	r3, [sp, #1104]
 7136 00e2 03F12002 		add	r2, r3, #32
 7137              	.LVL1025:
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
 7138              		.loc 1 3835 0
 7139 00e6 0446     		mov	r4, r0
 7140 00e8 70B9     		cbnz	r0, .L599
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
 7141              		.loc 1 3835 0 is_stmt 0 discriminator 1
 7142 00ea 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 7143 00ee 2E2B     		cmp	r3, #46
 7144 00f0 0AD1     		bne	.L599
3836:Middlewares/Third_Party/FatFs/src/ff.c **** 									djo.fs->wflag = 1;
 7145              		.loc 1 3836 0 is_stmt 1
 7146 00f2 1046     		mov	r0, r2
 7147              	.LVL1026:
 7148 00f4 8E99     		ldr	r1, [sp, #568]
 7149 00f6 FFF7FEFF 		bl	st_clust
 7150              	.LVL1027:
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 7151              		.loc 1 3837 0
 7152 00fa 0122     		movs	r2, #1
 7153 00fc DDF85034 		ldr	r3, [sp, #1104]
 7154 0100 83F80422 		strb	r2, [r3, #516]
 7155 0104 00E0     		b	.L599
 7156              	.LVL1028:
 7157              	.L603:
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 7158              		.loc 1 3831 0
 7159 0106 0224     		movs	r4, #2
 7160              	.LVL1029:
 7161              	.L599:
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_remove(&djo);		/* Remove old entry */
ARM GAS  /tmp/cclwbenu.s 			page 221


 7162              		.loc 1 3841 0
 7163 0108 5CB9     		cbnz	r4, .L595
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK)
 7164              		.loc 1 3842 0
 7165 010a 94A8     		add	r0, sp, #592
 7166 010c FFF7FEFF 		bl	dir_remove
 7167              	.LVL1030:
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = sync_fs(djo.fs);
 7168              		.loc 1 3843 0
 7169 0110 0446     		mov	r4, r0
 7170 0112 30B9     		cbnz	r0, .L595
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7171              		.loc 1 3844 0
 7172 0114 DDF85004 		ldr	r0, [sp, #1104]
 7173              	.LVL1031:
 7174 0118 FFF7FEFF 		bl	sync_fs
 7175              	.LVL1032:
 7176 011c 0446     		mov	r4, r0
 7177              	.LVL1033:
 7178 011e 00E0     		b	.L595
 7179              	.L600:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7180              		.loc 1 3811 0
 7181 0120 0424     		movs	r4, #4
 7182              	.LVL1034:
 7183              	.L595:
3855:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7184              		.loc 1 3855 0
 7185 0122 2046     		mov	r0, r4
 7186 0124 0DF58E6D 		add	sp, sp, #1136
 7187              	.LCFI80:
 7188              		.cfi_def_cfa_offset 16
 7189              	.LVL1035:
 7190              		@ sp needed
 7191 0128 70BD     		pop	{r4, r5, r6, pc}
 7192              		.cfi_endproc
 7193              	.LFE113:
 7195 012a 00BF     		.section	.text.f_utime,"ax",%progbits
 7196              		.align	2
 7197              		.global	f_utime
 7198              		.thumb
 7199              		.thumb_func
 7201              	f_utime:
 7202              	.LFB114:
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7203              		.loc 1 3868 0
 7204              		.cfi_startproc
 7205              		@ args = 0, pretend = 0, frame = 568
 7206              		@ frame_needed = 0, uses_anonymous_args = 0
 7207              	.LVL1036:
 7208 0000 10B5     		push	{r4, lr}
 7209              	.LCFI81:
 7210              		.cfi_def_cfa_offset 8
 7211              		.cfi_offset 4, -8
 7212              		.cfi_offset 14, -4
 7213 0002 ADF50E7D 		sub	sp, sp, #568
 7214              	.LCFI82:
ARM GAS  /tmp/cclwbenu.s 			page 222


 7215              		.cfi_def_cfa_offset 576
 7216 0006 0190     		str	r0, [sp, #4]
 7217 0008 0C46     		mov	r4, r1
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7218              		.loc 1 3876 0
 7219 000a 86A8     		add	r0, sp, #536
 7220              	.LVL1037:
 7221 000c 01A9     		add	r1, sp, #4
 7222              	.LVL1038:
 7223 000e 0122     		movs	r2, #1
 7224 0010 FFF7FEFF 		bl	find_volume
 7225              	.LVL1039:
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 7226              		.loc 1 3877 0
 7227 0014 0346     		mov	r3, r0
 7228 0016 E0B9     		cbnz	r0, .L606
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 7229              		.loc 1 3878 0
 7230 0018 03AB     		add	r3, sp, #12
 7231 001a 8C93     		str	r3, [sp, #560]
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 7232              		.loc 1 3879 0
 7233 001c 06A8     		add	r0, sp, #24
 7234              	.LVL1040:
 7235 001e 0199     		ldr	r1, [sp, #4]
 7236 0020 FFF7FEFF 		bl	follow_path
 7237              	.LVL1041:
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 7238              		.loc 1 3883 0
 7239 0024 0346     		mov	r3, r0
 7240 0026 A0B9     		cbnz	r0, .L606
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {					/* Root directory */
 7241              		.loc 1 3884 0
 7242 0028 8B9B     		ldr	r3, [sp, #556]
 7243              	.LVL1042:
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 7244              		.loc 1 3885 0
 7245 002a 8BB1     		cbz	r3, .L607
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtDate, fno->fdate);
 7246              		.loc 1 3888 0
 7247 002c A279     		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 7248 002e 9A75     		strb	r2, [r3, #22]
 7249 0030 E288     		ldrh	r2, [r4, #6]
 7250 0032 120A     		lsrs	r2, r2, #8
 7251 0034 DA75     		strb	r2, [r3, #23]
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 7252              		.loc 1 3889 0
 7253 0036 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 7254 0038 1A76     		strb	r2, [r3, #24]
 7255 003a A288     		ldrh	r2, [r4, #4]
 7256 003c 120A     		lsrs	r2, r2, #8
 7257 003e 5A76     		strb	r2, [r3, #25]
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 7258              		.loc 1 3890 0
 7259 0040 8698     		ldr	r0, [sp, #536]
 7260              	.LVL1043:
 7261 0042 0123     		movs	r3, #1
ARM GAS  /tmp/cclwbenu.s 			page 223


 7262              	.LVL1044:
 7263 0044 80F80432 		strb	r3, [r0, #516]
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7264              		.loc 1 3891 0
 7265 0048 FFF7FEFF 		bl	sync_fs
 7266              	.LVL1045:
 7267 004c 0346     		mov	r3, r0
 7268              	.LVL1046:
 7269 004e 00E0     		b	.L606
 7270              	.LVL1047:
 7271              	.L607:
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* File or sub-directory */
 7272              		.loc 1 3886 0
 7273 0050 0623     		movs	r3, #6
 7274              	.LVL1048:
 7275              	.L606:
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7276              		.loc 1 3897 0
 7277 0052 1846     		mov	r0, r3
 7278 0054 0DF50E7D 		add	sp, sp, #568
 7279              	.LCFI83:
 7280              		.cfi_def_cfa_offset 8
 7281              		@ sp needed
 7282 0058 10BD     		pop	{r4, pc}
 7283              		.cfi_endproc
 7284              	.LFE114:
 7286 005a 00BF     		.section	.text.f_mkfs,"ax",%progbits
 7287              		.align	2
 7288              		.global	f_mkfs
 7289              		.thumb
 7290              		.thumb_func
 7292              	f_mkfs:
 7293              	.LFB115:
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD vst[] = { 1024,   512,  256,  128,   64,    32,   16,    8,    4,    2,   0};
 7294              		.loc 1 4143 0
 7295              		.cfi_startproc
 7296              		@ args = 0, pretend = 0, frame = 32
 7297              		@ frame_needed = 0, uses_anonymous_args = 0
 7298              	.LVL1049:
 7299 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7300              	.LCFI84:
 7301              		.cfi_def_cfa_offset 36
 7302              		.cfi_offset 4, -36
 7303              		.cfi_offset 5, -32
 7304              		.cfi_offset 6, -28
 7305              		.cfi_offset 7, -24
 7306              		.cfi_offset 8, -20
 7307              		.cfi_offset 9, -16
 7308              		.cfi_offset 10, -12
 7309              		.cfi_offset 11, -8
 7310              		.cfi_offset 14, -4
 7311 0004 89B0     		sub	sp, sp, #36
 7312              	.LCFI85:
 7313              		.cfi_def_cfa_offset 72
 7314 0006 0590     		str	r0, [sp, #20]
 7315 0008 0C46     		mov	r4, r1
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
ARM GAS  /tmp/cclwbenu.s 			page 224


 7316              		.loc 1 4160 0
 7317 000a 0129     		cmp	r1, #1
 7318 000c 00F2BA82 		bhi	.L651
 7319 0010 1546     		mov	r5, r2
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 7320              		.loc 1 4161 0
 7321 0012 05A8     		add	r0, sp, #20
 7322              	.LVL1050:
 7323 0014 FFF7FEFF 		bl	get_ldnumber
 7324              	.LVL1051:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
 7325              		.loc 1 4162 0
 7326 0018 0028     		cmp	r0, #0
 7327 001a C0F2B582 		blt	.L652
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;
 7328              		.loc 1 4163 0
 7329 001e A94B     		ldr	r3, .L680
 7330 0020 53F82060 		ldr	r6, [r3, r0, lsl #2]
 7331              	.LVL1052:
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
 7332              		.loc 1 4164 0
 7333 0024 002E     		cmp	r6, #0
 7334 0026 00F0B182 		beq	.L653
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 7335              		.loc 1 4165 0
 7336 002a 0023     		movs	r3, #0
 7337 002c 86F80032 		strb	r3, [r6, #512]
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/
 7338              		.loc 1 4166 0
 7339 0030 C7B2     		uxtb	r7, r0
 7340              	.LVL1053:
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 7341              		.loc 1 4170 0
 7342 0032 3846     		mov	r0, r7
 7343              	.LVL1054:
 7344 0034 FFF7FEFF 		bl	disk_initialize
 7345              	.LVL1055:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 7346              		.loc 1 4171 0
 7347 0038 10F0010F 		tst	r0, #1
 7348 003c 40F0A882 		bne	.L654
4172:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
 7349              		.loc 1 4172 0
 7350 0040 10F0040F 		tst	r0, #4
 7351 0044 40F0A682 		bne	.L655
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 7352              		.loc 1 4187 0
 7353 0048 3846     		mov	r0, r7
 7354              	.LVL1056:
 7355 004a 0121     		movs	r1, #1
 7356 004c 06AA     		add	r2, sp, #24
 7357 004e FFF7FEFF 		bl	disk_ioctl
 7358              	.LVL1057:
 7359 0052 0028     		cmp	r0, #0
 7360 0054 40F0A082 		bne	.L656
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 7361              		.loc 1 4187 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cclwbenu.s 			page 225


 7362 0058 069A     		ldr	r2, [sp, #24]
 7363 005a 7F2A     		cmp	r2, #127
 7364 005c 40F29E82 		bls	.L657
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
 7365              		.loc 1 4189 0 is_stmt 1
 7366 0060 14B1     		cbz	r4, .L658
 7367 0062 0023     		movs	r3, #0
 7368 0064 0193     		str	r3, [sp, #4]
 7369 0066 01E0     		b	.L611
 7370              	.L658:
 7371 0068 3F23     		movs	r3, #63
 7372 006a 0193     		str	r3, [sp, #4]
 7373              	.L611:
 7374              	.LVL1058:
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7375              		.loc 1 4190 0 discriminator 4
 7376 006c 019B     		ldr	r3, [sp, #4]
 7377 006e D21A     		subs	r2, r2, r3
 7378 0070 0692     		str	r2, [sp, #24]
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
 7379              		.loc 1 4193 0 discriminator 4
 7380 0072 6B1E     		subs	r3, r5, #1
 7381 0074 2B42     		tst	r3, r5
 7382 0076 00D0     		beq	.L612
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
 7383              		.loc 1 4193 0 is_stmt 0
 7384 0078 0025     		movs	r5, #0
 7385              	.LVL1059:
 7386              	.L612:
4194:Middlewares/Third_Party/FatFs/src/ff.c **** 		vs = n_vol / (2000 / (SS(fs) / 512));
 7387              		.loc 1 4194 0 is_stmt 1
 7388 007a 75B9     		cbnz	r5, .L613
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; vs < vst[i]; i++) ;
 7389              		.loc 1 4195 0
 7390 007c 4FF4FA61 		mov	r1, #2000
 7391 0080 B2FBF1F1 		udiv	r1, r2, r1
 7392              	.LVL1060:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 7393              		.loc 1 4196 0
 7394 0084 0023     		movs	r3, #0
 7395 0086 00E0     		b	.L614
 7396              	.LVL1061:
 7397              	.L615:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 7398              		.loc 1 4196 0 is_stmt 0 discriminator 3
 7399 0088 0133     		adds	r3, r3, #1
 7400              	.LVL1062:
 7401              	.L614:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 7402              		.loc 1 4196 0 discriminator 1
 7403 008a 8F48     		ldr	r0, .L680+4
 7404 008c 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 7405 0090 8842     		cmp	r0, r1
 7406 0092 F9D8     		bhi	.L615
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7407              		.loc 1 4197 0 is_stmt 1
 7408 0094 8D49     		ldr	r1, .L680+8
ARM GAS  /tmp/cclwbenu.s 			page 226


 7409              	.LVL1063:
 7410 0096 31F81350 		ldrh	r5, [r1, r3, lsl #1]
 7411              	.LVL1064:
 7412              	.L613:
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
 7413              		.loc 1 4199 0
 7414 009a B5F5007F 		cmp	r5, #512
 7415 009e 00D3     		bcc	.L616
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
 7416              		.loc 1 4199 0 is_stmt 0 discriminator 1
 7417 00a0 6D0A     		lsrs	r5, r5, #9
 7418              	.LVL1065:
 7419              	.L616:
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au > 128) au = 128;
 7420              		.loc 1 4200 0 is_stmt 1
 7421 00a2 05B9     		cbnz	r5, .L617
 7422 00a4 0125     		movs	r5, #1
 7423              	.LVL1066:
 7424              	.L617:
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7425              		.loc 1 4201 0
 7426 00a6 802D     		cmp	r5, #128
 7427 00a8 00D9     		bls	.L618
 7428 00aa 8025     		movs	r5, #128
 7429              	.LVL1067:
 7430              	.L618:
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 7431              		.loc 1 4204 0
 7432 00ac B2FBF5F3 		udiv	r3, r2, r5
 7433              	.LVL1068:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
 7434              		.loc 1 4206 0
 7435 00b0 40F6F571 		movw	r1, #4085
 7436 00b4 8B42     		cmp	r3, r1
 7437 00b6 02D8     		bhi	.L662
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
 7438              		.loc 1 4205 0
 7439 00b8 4FF00109 		mov	r9, #1
 7440 00bc 01E0     		b	.L619
 7441              	.L662:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
 7442              		.loc 1 4206 0
 7443 00be 4FF00209 		mov	r9, #2
 7444              	.L619:
 7445              	.LVL1069:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7446              		.loc 1 4207 0
 7447 00c2 4FF6F571 		movw	r1, #65525
 7448 00c6 8B42     		cmp	r3, r1
 7449 00c8 01D9     		bls	.L620
 7450 00ca 4FF00309 		mov	r9, #3
 7451              	.LVL1070:
 7452              	.L620:
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
 7453              		.loc 1 4210 0
 7454 00ce B9F1030F 		cmp	r9, #3
 7455 00d2 0AD1     		bne	.L621
ARM GAS  /tmp/cclwbenu.s 			page 227


4211:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 32;
 7456              		.loc 1 4211 0
 7457 00d4 4FEA8308 		lsl	r8, r3, #2
 7458 00d8 08F20728 		addw	r8, r8, #519
 7459 00dc 4FEA5828 		lsr	r8, r8, #9
 7460              	.LVL1071:
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 7461              		.loc 1 4213 0
 7462 00e0 0023     		movs	r3, #0
 7463              	.LVL1072:
 7464 00e2 0393     		str	r3, [sp, #12]
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = 0;
 7465              		.loc 1 4212 0
 7466 00e4 4FF0200A 		mov	r10, #32
 7467 00e8 12E0     		b	.L622
 7468              	.LVL1073:
 7469              	.L621:
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 7470              		.loc 1 4215 0
 7471 00ea B9F1010F 		cmp	r9, #1
 7472 00ee 05D1     		bne	.L623
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 7473              		.loc 1 4215 0 is_stmt 0 discriminator 1
 7474 00f0 03EB4303 		add	r3, r3, r3, lsl #1
 7475              	.LVL1074:
 7476 00f4 0133     		adds	r3, r3, #1
 7477 00f6 5B08     		lsrs	r3, r3, #1
 7478 00f8 0333     		adds	r3, r3, #3
 7479 00fa 01E0     		b	.L624
 7480              	.LVL1075:
 7481              	.L623:
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 7482              		.loc 1 4215 0 discriminator 2
 7483 00fc 0233     		adds	r3, r3, #2
 7484              	.LVL1076:
 7485 00fe 5B00     		lsls	r3, r3, #1
 7486              	.LVL1077:
 7487              	.L624:
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 1;
 7488              		.loc 1 4216 0 is_stmt 1 discriminator 4
 7489 0100 03F2FF13 		addw	r3, r3, #511
 7490              	.LVL1078:
 7491 0104 4FEA5328 		lsr	r8, r3, #9
 7492              	.LVL1079:
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7493              		.loc 1 4218 0 discriminator 4
 7494 0108 2023     		movs	r3, #32
 7495 010a 0393     		str	r3, [sp, #12]
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = (DWORD)N_ROOTDIR * SZ_DIRE / SS(fs);
 7496              		.loc 1 4217 0 discriminator 4
 7497 010c 4FF0010A 		mov	r10, #1
 7498              	.LVL1080:
 7499              	.L622:
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_dir = b_fat + n_fat * N_FATS;		/* Directory area start sector */
 7500              		.loc 1 4220 0
 7501 0110 0199     		ldr	r1, [sp, #4]
 7502 0112 0AEB0103 		add	r3, r10, r1
ARM GAS  /tmp/cclwbenu.s 			page 228


 7503 0116 0093     		str	r3, [sp]
 7504              	.LVL1081:
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_data = b_dir + n_dir;				/* Data area start sector */
 7505              		.loc 1 4221 0
 7506 0118 03EB080B 		add	fp, r3, r8
 7507              	.LVL1082:
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
 7508              		.loc 1 4222 0
 7509 011c 039B     		ldr	r3, [sp, #12]
 7510              	.LVL1083:
 7511 011e 9B44     		add	fp, fp, r3
 7512              	.LVL1084:
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7513              		.loc 1 4223 0
 7514 0120 0BEB0503 		add	r3, fp, r5
 7515 0124 5B1A     		subs	r3, r3, r1
 7516 0126 9A42     		cmp	r2, r3
 7517 0128 C0F03A82 		bcc	.L664
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 7518              		.loc 1 4226 0
 7519 012c 3846     		mov	r0, r7
 7520 012e 0321     		movs	r1, #3
 7521 0130 07AA     		add	r2, sp, #28
 7522              	.LVL1085:
 7523 0132 FFF7FEFF 		bl	disk_ioctl
 7524              	.LVL1086:
 7525 0136 20B9     		cbnz	r0, .L625
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 7526              		.loc 1 4226 0 is_stmt 0 discriminator 2
 7527 0138 079B     		ldr	r3, [sp, #28]
 7528 013a 13B1     		cbz	r3, .L625
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 7529              		.loc 1 4226 0 discriminator 4
 7530 013c B3F5004F 		cmp	r3, #32768
 7531 0140 01D9     		bls	.L626
 7532              	.L625:
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 7533              		.loc 1 4226 0 discriminator 5
 7534 0142 0123     		movs	r3, #1
 7535 0144 0793     		str	r3, [sp, #28]
 7536              	.L626:
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (n - b_data) / N_FATS;
 7537              		.loc 1 4227 0 is_stmt 1
 7538 0146 079B     		ldr	r3, [sp, #28]
 7539 0148 0BEB0302 		add	r2, fp, r3
 7540 014c 013A     		subs	r2, r2, #1
 7541 014e 5B42     		negs	r3, r3
 7542 0150 1340     		ands	r3, r3, r2
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
 7543              		.loc 1 4228 0
 7544 0152 CBEB0303 		rsb	r3, fp, r3
 7545 0156 0793     		str	r3, [sp, #28]
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv += n;
 7546              		.loc 1 4229 0
 7547 0158 B9F1030F 		cmp	r9, #3
 7548 015c 04D1     		bne	.L627
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat += n;
ARM GAS  /tmp/cclwbenu.s 			page 229


 7549              		.loc 1 4230 0
 7550 015e 9A44     		add	r10, r10, r3
 7551              	.LVL1087:
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {					/* FAT12/16: Expand FAT size */
 7552              		.loc 1 4231 0
 7553 0160 009A     		ldr	r2, [sp]
 7554 0162 1A44     		add	r2, r2, r3
 7555 0164 0092     		str	r2, [sp]
 7556              	.LVL1088:
 7557 0166 00E0     		b	.L628
 7558              	.LVL1089:
 7559              	.L627:
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7560              		.loc 1 4233 0
 7561 0168 9844     		add	r8, r8, r3
 7562              	.LVL1090:
 7563              	.L628:
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
 7564              		.loc 1 4237 0
 7565 016a 069A     		ldr	r2, [sp, #24]
 7566 016c CAEB0203 		rsb	r3, r10, r2
 7567 0170 C8EB0303 		rsb	r3, r8, r3
 7568 0174 0399     		ldr	r1, [sp, #12]
 7569 0176 5B1A     		subs	r3, r3, r1
 7570 0178 B3FBF5F3 		udiv	r3, r3, r5
 7571 017c 0493     		str	r3, [sp, #16]
 7572              	.LVL1091:
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
 7573              		.loc 1 4238 0
 7574 017e B9F1020F 		cmp	r9, #2
 7575 0182 05D1     		bne	.L629
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
 7576              		.loc 1 4238 0 is_stmt 0 discriminator 1
 7577 0184 40F6F573 		movw	r3, #4085
 7578              	.LVL1092:
 7579 0188 0499     		ldr	r1, [sp, #16]
 7580 018a 9942     		cmp	r1, r3
 7581 018c 40F20A82 		bls	.L665
 7582              	.L629:
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
 7583              		.loc 1 4239 0 is_stmt 1
 7584 0190 B9F1030F 		cmp	r9, #3
 7585 0194 05D1     		bne	.L630
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
 7586              		.loc 1 4239 0 is_stmt 0 discriminator 1
 7587 0196 4FF6F573 		movw	r3, #65525
 7588 019a 0499     		ldr	r1, [sp, #16]
 7589 019c 9942     		cmp	r1, r3
 7590 019e 40F20382 		bls	.L666
 7591              	.L630:
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x0C;		/* FAT32X */
 7592              		.loc 1 4243 0 is_stmt 1
 7593 01a2 B9F1030F 		cmp	r9, #3
 7594 01a6 0ED0     		beq	.L667
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
 7595              		.loc 1 4246 0
 7596 01a8 B9F1010F 		cmp	r9, #1
ARM GAS  /tmp/cclwbenu.s 			page 230


 7597 01ac 02D1     		bne	.L632
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
 7598              		.loc 1 4246 0 is_stmt 0 discriminator 1
 7599 01ae B2F5803F 		cmp	r2, #65536
 7600 01b2 0BD3     		bcc	.L668
 7601              	.L632:
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7602              		.loc 1 4249 0 is_stmt 1
 7603 01b4 B2F5803F 		cmp	r2, #65536
 7604 01b8 02D2     		bcs	.L669
 7605 01ba 4FF0040B 		mov	fp, #4
 7606              	.LVL1093:
 7607 01be 07E0     		b	.L631
 7608              	.LVL1094:
 7609              	.L669:
 7610 01c0 4FF0060B 		mov	fp, #6
 7611              	.LVL1095:
 7612 01c4 04E0     		b	.L631
 7613              	.LVL1096:
 7614              	.L667:
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 7615              		.loc 1 4244 0
 7616 01c6 4FF00C0B 		mov	fp, #12
 7617              	.LVL1097:
 7618 01ca 01E0     		b	.L631
 7619              	.LVL1098:
 7620              	.L668:
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 7621              		.loc 1 4247 0
 7622 01cc 4FF0010B 		mov	fp, #1
 7623              	.LVL1099:
 7624              	.L631:
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF0;
 7625              		.loc 1 4261 0
 7626 01d0 002C     		cmp	r4, #0
 7627 01d2 47D1     		bne	.L670
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fs->win.d8 + MBR_Table;	/* Create partition table for single partition in the drive */
 7628              		.loc 1 4264 0
 7629 01d4 3046     		mov	r0, r6
 7630 01d6 0021     		movs	r1, #0
 7631 01d8 4FF40072 		mov	r2, #512
 7632 01dc FFF7FEFF 		bl	mem_set
 7633              	.LVL1100:
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[2] = 1;						/* Partition start sector */
 7634              		.loc 1 4266 0
 7635 01e0 0123     		movs	r3, #1
 7636 01e2 86F8BF31 		strb	r3, [r6, #447]
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[3] = 0;						/* Partition start cylinder */
 7637              		.loc 1 4267 0
 7638 01e6 86F8C031 		strb	r3, [r6, #448]
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[4] = sys;					/* System type */
 7639              		.loc 1 4268 0
 7640 01ea 0022     		movs	r2, #0
 7641 01ec 86F8C121 		strb	r2, [r6, #449]
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[5] = 254;					/* Partition end head */
 7642              		.loc 1 4269 0
 7643 01f0 86F8C2B1 		strb	fp, [r6, #450]
ARM GAS  /tmp/cclwbenu.s 			page 231


4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + n_vol) / 63 / 255;
 7644              		.loc 1 4270 0
 7645 01f4 FE21     		movs	r1, #254
 7646 01f6 86F8C311 		strb	r1, [r6, #451]
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
 7647              		.loc 1 4271 0
 7648 01fa 0699     		ldr	r1, [sp, #24]
 7649 01fc 0198     		ldr	r0, [sp, #4]
 7650 01fe 0844     		add	r0, r0, r1
 7651 0200 43F6C164 		movw	r4, #16065
 7652 0204 B0FBF4F0 		udiv	r0, r0, r4
 7653 0208 0790     		str	r0, [sp, #28]
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[7] = (BYTE)n;				/* End cylinder */
 7654              		.loc 1 4272 0
 7655 020a 8408     		lsrs	r4, r0, #2
 7656 020c 44F03F04 		orr	r4, r4, #63
 7657 0210 86F8C441 		strb	r4, [r6, #452]
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 63);			/* Partition start in LBA */
 7658              		.loc 1 4273 0
 7659 0214 86F8C501 		strb	r0, [r6, #453]
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 12, n_vol);		/* Partition size in LBA */
 7660              		.loc 1 4274 0
 7661 0218 3F20     		movs	r0, #63
 7662 021a 86F8C601 		strb	r0, [r6, #454]
 7663 021e 86F8C721 		strb	r2, [r6, #455]
 7664 0222 86F8C821 		strb	r2, [r6, #456]
 7665 0226 86F8C921 		strb	r2, [r6, #457]
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);	/* MBR signature */
 7666              		.loc 1 4275 0
 7667 022a 86F8CA11 		strb	r1, [r6, #458]
 7668 022e C1F30720 		ubfx	r0, r1, #8, #8
 7669 0232 86F8CB01 		strb	r0, [r6, #459]
 7670 0236 C1F30740 		ubfx	r0, r1, #16, #8
 7671 023a 86F8CC01 		strb	r0, [r6, #460]
 7672 023e 090E     		lsrs	r1, r1, #24
 7673 0240 86F8CD11 		strb	r1, [r6, #461]
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to the MBR */
 7674              		.loc 1 4276 0
 7675 0244 5521     		movs	r1, #85
 7676 0246 86F8FE11 		strb	r1, [r6, #510]
 7677 024a AA21     		movs	r1, #170
 7678 024c 86F8FF11 		strb	r1, [r6, #511]
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 7679              		.loc 1 4277 0
 7680 0250 3846     		mov	r0, r7
 7681 0252 3146     		mov	r1, r6
 7682 0254 FFF7FEFF 		bl	disk_write
 7683              	.LVL1101:
 7684 0258 0028     		cmp	r0, #0
 7685 025a 40F0A781 		bne	.L671
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7686              		.loc 1 4279 0
 7687 025e 4FF0F80B 		mov	fp, #248
 7688              	.LVL1102:
 7689 0262 01E0     		b	.L634
 7690              	.LVL1103:
 7691              	.L670:
ARM GAS  /tmp/cclwbenu.s 			page 232


4262:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {	/* Create partition table (FDISK) */
 7692              		.loc 1 4262 0
 7693 0264 4FF0F00B 		mov	fp, #240
 7694              	.LVL1104:
 7695              	.L634:
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(tbl, 0, SS(fs));
 7696              		.loc 1 4284 0
 7697 0268 0296     		str	r6, [sp, #8]
 7698              	.LVL1105:
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
 7699              		.loc 1 4285 0
 7700 026a 3046     		mov	r0, r6
 7701 026c 0021     		movs	r1, #0
 7702 026e 4FF40072 		mov	r2, #512
 7703 0272 FFF7FEFF 		bl	mem_set
 7704              	.LVL1106:
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SS(fs);								/* Sector size */
 7705              		.loc 1 4286 0
 7706 0276 3046     		mov	r0, r6
 7707 0278 1549     		ldr	r1, .L680+12
 7708 027a 0B22     		movs	r2, #11
 7709 027c FFF7FEFF 		bl	mem_cpy
 7710              	.LVL1107:
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
 7711              		.loc 1 4288 0
 7712 0280 0023     		movs	r3, #0
 7713 0282 F372     		strb	r3, [r6, #11]
 7714 0284 0223     		movs	r3, #2
 7715 0286 3373     		strb	r3, [r6, #12]
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RsvdSecCnt, n_rsv);	/* Reserved sectors */
 7716              		.loc 1 4289 0
 7717 0288 7573     		strb	r5, [r6, #13]
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
 7718              		.loc 1 4290 0
 7719 028a 86F80EA0 		strb	r10, [r6, #14]
 7720 028e CAF3072A 		ubfx	r10, r10, #8, #8
 7721              	.LVL1108:
 7722 0292 86F80FA0 		strb	r10, [r6, #15]
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
 7723              		.loc 1 4291 0
 7724 0296 0123     		movs	r3, #1
 7725 0298 3374     		strb	r3, [r6, #16]
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
 7726              		.loc 1 4292 0
 7727 029a B9F1030F 		cmp	r9, #3
 7728 029e 01D1     		bne	.L672
 7729              	.LVL1109:
 7730 02a0 0023     		movs	r3, #0
 7731 02a2 01E0     		b	.L635
 7732              	.L672:
 7733 02a4 4FF40073 		mov	r3, #512
 7734              	.L635:
 7735              	.LVL1110:
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < 0x10000) {					/* Number of total sectors */
 7736              		.loc 1 4293 0 discriminator 4
 7737 02a8 0022     		movs	r2, #0
 7738 02aa 7274     		strb	r2, [r6, #17]
ARM GAS  /tmp/cclwbenu.s 			page 233


 7739 02ac 9BB2     		uxth	r3, r3
 7740              	.LVL1111:
 7741 02ae 1B0A     		lsrs	r3, r3, #8
 7742 02b0 B374     		strb	r3, [r6, #18]
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_TotSec16, n_vol);
 7743              		.loc 1 4294 0 discriminator 4
 7744 02b2 069B     		ldr	r3, [sp, #24]
 7745 02b4 B3F5803F 		cmp	r3, #65536
 7746 02b8 0CD2     		bcs	.L636
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 7747              		.loc 1 4295 0
 7748 02ba F374     		strb	r3, [r6, #19]
 7749 02bc C3F30723 		ubfx	r3, r3, #8, #8
 7750 02c0 3375     		strb	r3, [r6, #20]
 7751 02c2 14E0     		b	.L637
 7752              	.L681:
 7753              		.align	2
 7754              	.L680:
 7755 02c4 00000000 		.word	.LANCHOR2
 7756 02c8 00000000 		.word	.LANCHOR4
 7757 02cc 00000000 		.word	.LANCHOR5
 7758 02d0 10000000 		.word	.LC1
 7759              	.L636:
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7760              		.loc 1 4297 0
 7761 02d4 86F82030 		strb	r3, [r6, #32]
 7762 02d8 C3F30722 		ubfx	r2, r3, #8, #8
 7763 02dc 86F82120 		strb	r2, [r6, #33]
 7764 02e0 C3F30742 		ubfx	r2, r3, #16, #8
 7765 02e4 86F82220 		strb	r2, [r6, #34]
 7766 02e8 1B0E     		lsrs	r3, r3, #24
 7767 02ea 86F82330 		strb	r3, [r6, #35]
 7768              	.L637:
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_SecPerTrk, 63);		/* Number of sectors per track */
 7769              		.loc 1 4299 0
 7770 02ee 86F815B0 		strb	fp, [r6, #21]
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_NumHeads, 255);		/* Number of heads */
 7771              		.loc 1 4300 0
 7772 02f2 3F23     		movs	r3, #63
 7773 02f4 3376     		strb	r3, [r6, #24]
 7774 02f6 0023     		movs	r3, #0
 7775 02f8 7376     		strb	r3, [r6, #25]
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_DWORD(tbl + BPB_HiddSec, b_vol);		/* Hidden sectors */
 7776              		.loc 1 4301 0
 7777 02fa FF22     		movs	r2, #255
 7778 02fc B276     		strb	r2, [r6, #26]
 7779 02fe F376     		strb	r3, [r6, #27]
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = GET_FATTIME();						/* Use current time as VSN */
 7780              		.loc 1 4302 0
 7781 0300 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 7782 0304 3277     		strb	r2, [r6, #28]
 7783 0306 7377     		strb	r3, [r6, #29]
 7784 0308 B377     		strb	r3, [r6, #30]
 7785 030a F377     		strb	r3, [r6, #31]
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
 7786              		.loc 1 4303 0
 7787 030c FFF7FEFF 		bl	get_fattime
ARM GAS  /tmp/cclwbenu.s 			page 234


 7788              	.LVL1112:
 7789 0310 0790     		str	r0, [sp, #28]
4304:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID32, n);		/* VSN */
 7790              		.loc 1 4304 0
 7791 0312 B9F1030F 		cmp	r9, #3
 7792 0316 3BD1     		bne	.L638
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_FATSz32, n_fat);	/* Number of sectors per FAT */
 7793              		.loc 1 4305 0
 7794 0318 86F84300 		strb	r0, [r6, #67]
 7795 031c C0F30723 		ubfx	r3, r0, #8, #8
 7796 0320 86F84430 		strb	r3, [r6, #68]
 7797 0324 C0F30743 		ubfx	r3, r0, #16, #8
 7798 0328 86F84530 		strb	r3, [r6, #69]
 7799 032c 000E     		lsrs	r0, r0, #24
 7800 032e 86F84600 		strb	r0, [r6, #70]
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_RootClus, 2);	/* Root directory start cluster (2) */
 7801              		.loc 1 4306 0
 7802 0332 86F82480 		strb	r8, [r6, #36]
 7803 0336 C8F30723 		ubfx	r3, r8, #8, #8
 7804 033a 86F82530 		strb	r3, [r6, #37]
 7805 033e C8F30743 		ubfx	r3, r8, #16, #8
 7806 0342 86F82630 		strb	r3, [r6, #38]
 7807 0346 4FEA1863 		lsr	r3, r8, #24
 7808 034a 86F82730 		strb	r3, [r6, #39]
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FSInfo, 1);		/* FSINFO record offset (VBR + 1) */
 7809              		.loc 1 4307 0
 7810 034e 0223     		movs	r3, #2
 7811 0350 86F82C30 		strb	r3, [r6, #44]
 7812 0354 0023     		movs	r3, #0
 7813 0356 86F82D30 		strb	r3, [r6, #45]
 7814 035a 86F82E30 		strb	r3, [r6, #46]
 7815 035e 86F82F30 		strb	r3, [r6, #47]
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_BkBootSec, 6);	/* Backup boot record offset (VBR + 6) */
 7816              		.loc 1 4308 0
 7817 0362 0122     		movs	r2, #1
 7818 0364 86F83020 		strb	r2, [r6, #48]
 7819 0368 86F83130 		strb	r3, [r6, #49]
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
 7820              		.loc 1 4309 0
 7821 036c 0622     		movs	r2, #6
 7822 036e 86F83220 		strb	r2, [r6, #50]
 7823 0372 86F83330 		strb	r3, [r6, #51]
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
 7824              		.loc 1 4310 0
 7825 0376 8023     		movs	r3, #128
 7826 0378 86F84030 		strb	r3, [r6, #64]
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 7827              		.loc 1 4311 0
 7828 037c 2923     		movs	r3, #41
 7829 037e 86F84230 		strb	r3, [r6, #66]
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 7830              		.loc 1 4312 0
 7831 0382 06F14700 		add	r0, r6, #71
 7832 0386 8F49     		ldr	r1, .L682
 7833 0388 1322     		movs	r2, #19
 7834 038a FFF7FEFF 		bl	mem_cpy
 7835              	.LVL1113:
ARM GAS  /tmp/cclwbenu.s 			page 235


 7836 038e 1DE0     		b	.L639
 7837              	.L638:
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
 7838              		.loc 1 4314 0
 7839 0390 86F82700 		strb	r0, [r6, #39]
 7840 0394 C0F30723 		ubfx	r3, r0, #8, #8
 7841 0398 86F82830 		strb	r3, [r6, #40]
 7842 039c C0F30743 		ubfx	r3, r0, #16, #8
 7843 03a0 86F82930 		strb	r3, [r6, #41]
 7844 03a4 000E     		lsrs	r0, r0, #24
 7845 03a6 86F82A00 		strb	r0, [r6, #42]
4315:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum] = 0x80;				/* Drive number */
 7846              		.loc 1 4315 0
 7847 03aa 86F81680 		strb	r8, [r6, #22]
 7848 03ae C8F30723 		ubfx	r3, r8, #8, #8
 7849 03b2 F375     		strb	r3, [r6, #23]
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
 7850              		.loc 1 4316 0
 7851 03b4 8023     		movs	r3, #128
 7852 03b6 86F82430 		strb	r3, [r6, #36]
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 7853              		.loc 1 4317 0
 7854 03ba 2923     		movs	r3, #41
 7855 03bc 86F82630 		strb	r3, [r6, #38]
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7856              		.loc 1 4318 0
 7857 03c0 06F12B00 		add	r0, r6, #43
 7858 03c4 8049     		ldr	r1, .L682+4
 7859 03c6 1322     		movs	r2, #19
 7860 03c8 FFF7FEFF 		bl	mem_cpy
 7861              	.LVL1114:
 7862              	.L639:
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
 7863              		.loc 1 4320 0
 7864 03cc 5523     		movs	r3, #85
 7865 03ce 86F8FE31 		strb	r3, [r6, #510]
 7866 03d2 AA23     		movs	r3, #170
 7867 03d4 86F8FF31 		strb	r3, [r6, #511]
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
 7868              		.loc 1 4321 0
 7869 03d8 3846     		mov	r0, r7
 7870 03da 3146     		mov	r1, r6
 7871 03dc 019A     		ldr	r2, [sp, #4]
 7872 03de 0123     		movs	r3, #1
 7873 03e0 FFF7FEFF 		bl	disk_write
 7874              	.LVL1115:
 7875 03e4 0028     		cmp	r0, #0
 7876 03e6 40F0E380 		bne	.L673
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 6, 1);
 7877              		.loc 1 4323 0
 7878 03ea B9F1030F 		cmp	r9, #3
 7879 03ee 06D1     		bne	.L640
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7880              		.loc 1 4324 0
 7881 03f0 3846     		mov	r0, r7
 7882 03f2 3146     		mov	r1, r6
 7883 03f4 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/cclwbenu.s 			page 236


 7884 03f6 9A1D     		adds	r2, r3, #6
 7885 03f8 0123     		movs	r3, #1
 7886 03fa FFF7FEFF 		bl	disk_write
 7887              	.LVL1116:
 7888              	.L640:
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
 7889              		.loc 1 4328 0
 7890 03fe 4FF0000A 		mov	r10, #0
 7891 0402 5FE0     		b	.L641
 7892              	.LVL1117:
 7893              	.L647:
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = md;								/* Media descriptor byte */
 7894              		.loc 1 4329 0
 7895 0404 0298     		ldr	r0, [sp, #8]
 7896 0406 0021     		movs	r1, #0
 7897 0408 4FF40072 		mov	r2, #512
 7898 040c FFF7FEFF 		bl	mem_set
 7899              	.LVL1118:
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt != FS_FAT32) {
 7900              		.loc 1 4330 0
 7901 0410 5B46     		mov	r3, fp
4331:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
 7902              		.loc 1 4331 0
 7903 0412 B9F1030F 		cmp	r9, #3
 7904 0416 14D0     		beq	.L642
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
 7905              		.loc 1 4332 0
 7906 0418 B9F1010F 		cmp	r9, #1
 7907 041c 01D1     		bne	.L674
 7908 041e 6B4A     		ldr	r2, .L682+8
 7909 0420 01E0     		b	.L643
 7910              	.L674:
 7911 0422 6FF0FF02 		mvn	r2, #255
 7912              	.L643:
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
 7913              		.loc 1 4332 0 is_stmt 0 discriminator 4
 7914 0426 1343     		orrs	r3, r3, r2
 7915 0428 0793     		str	r3, [sp, #28]
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 7916              		.loc 1 4333 0 is_stmt 1 discriminator 4
 7917 042a 3370     		strb	r3, [r6]
 7918 042c BDF81C30 		ldrh	r3, [sp, #28]
 7919 0430 1B0A     		lsrs	r3, r3, #8
 7920 0432 7370     		strb	r3, [r6, #1]
 7921 0434 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 7922 0438 B370     		strb	r3, [r6, #2]
 7923 043a 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 7924 043e F370     		strb	r3, [r6, #3]
 7925 0440 17E0     		b	.L644
 7926              	.L642:
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT32) */
 7927              		.loc 1 4335 0
 7928 0442 6BF0FF03 		orn	r3, fp, #255
 7929 0446 0793     		str	r3, [sp, #28]
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 4, 0xFFFFFFFF);
 7930              		.loc 1 4336 0
 7931 0448 3370     		strb	r3, [r6]
ARM GAS  /tmp/cclwbenu.s 			page 237


 7932 044a BDF81C30 		ldrh	r3, [sp, #28]
 7933 044e 1B0A     		lsrs	r3, r3, #8
 7934 0450 7370     		strb	r3, [r6, #1]
 7935 0452 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 7936 0456 B370     		strb	r3, [r6, #2]
 7937 0458 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 7938 045c F370     		strb	r3, [r6, #3]
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 0x0FFFFFFF);	/* Reserve cluster #2 for root directory */
 7939              		.loc 1 4337 0
 7940 045e FF23     		movs	r3, #255
 7941 0460 3371     		strb	r3, [r6, #4]
 7942 0462 7371     		strb	r3, [r6, #5]
 7943 0464 B371     		strb	r3, [r6, #6]
 7944 0466 F371     		strb	r3, [r6, #7]
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7945              		.loc 1 4338 0
 7946 0468 3372     		strb	r3, [r6, #8]
 7947 046a 7372     		strb	r3, [r6, #9]
 7948 046c B372     		strb	r3, [r6, #10]
 7949 046e 0F23     		movs	r3, #15
 7950 0470 F372     		strb	r3, [r6, #11]
 7951              	.L644:
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 7952              		.loc 1 4340 0
 7953 0472 009B     		ldr	r3, [sp]
 7954 0474 5C1C     		adds	r4, r3, #1
 7955              	.LVL1119:
 7956 0476 3846     		mov	r0, r7
 7957 0478 0299     		ldr	r1, [sp, #8]
 7958 047a 1A46     		mov	r2, r3
 7959 047c 0123     		movs	r3, #1
 7960 047e FFF7FEFF 		bl	disk_write
 7961              	.LVL1120:
 7962 0482 0028     		cmp	r0, #0
 7963 0484 40F09680 		bne	.L675
4342:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
 7964              		.loc 1 4342 0
 7965 0488 0298     		ldr	r0, [sp, #8]
 7966 048a 0021     		movs	r1, #0
 7967 048c 4FF40072 		mov	r2, #512
 7968 0490 FFF7FEFF 		bl	mem_set
 7969              	.LVL1121:
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 7970              		.loc 1 4343 0
 7971 0494 0123     		movs	r3, #1
 7972 0496 0793     		str	r3, [sp, #28]
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 7973              		.loc 1 4340 0
 7974 0498 0094     		str	r4, [sp]
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 7975              		.loc 1 4343 0
 7976 049a 0EE0     		b	.L645
 7977              	.LVL1122:
 7978              	.L646:
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 7979              		.loc 1 4344 0
 7980 049c 009B     		ldr	r3, [sp]
ARM GAS  /tmp/cclwbenu.s 			page 238


 7981 049e 5C1C     		adds	r4, r3, #1
 7982              	.LVL1123:
 7983 04a0 3846     		mov	r0, r7
 7984 04a2 0299     		ldr	r1, [sp, #8]
 7985 04a4 1A46     		mov	r2, r3
 7986 04a6 0123     		movs	r3, #1
 7987 04a8 FFF7FEFF 		bl	disk_write
 7988              	.LVL1124:
 7989 04ac 0028     		cmp	r0, #0
 7990 04ae 40F08380 		bne	.L676
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 7991              		.loc 1 4343 0 discriminator 2
 7992 04b2 079B     		ldr	r3, [sp, #28]
 7993 04b4 0133     		adds	r3, r3, #1
 7994 04b6 0793     		str	r3, [sp, #28]
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 7995              		.loc 1 4344 0 discriminator 2
 7996 04b8 0094     		str	r4, [sp]
 7997              	.L645:
 7998              	.LVL1125:
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 7999              		.loc 1 4343 0 discriminator 1
 8000 04ba 079B     		ldr	r3, [sp, #28]
 8001 04bc 4345     		cmp	r3, r8
 8002 04be EDD3     		bcc	.L646
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
 8003              		.loc 1 4328 0 discriminator 2
 8004 04c0 0AF1010A 		add	r10, r10, #1
 8005              	.LVL1126:
 8006              	.L641:
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
 8007              		.loc 1 4328 0 is_stmt 0 discriminator 1
 8008 04c4 BAF1000F 		cmp	r10, #0
 8009 04c8 9CD0     		beq	.L647
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 8010              		.loc 1 4350 0 is_stmt 1
 8011 04ca B9F1030F 		cmp	r9, #3
 8012 04ce 01D1     		bne	.L678
 8013 04d0 2C46     		mov	r4, r5
 8014              	.LVL1127:
 8015 04d2 00E0     		b	.L649
 8016              	.LVL1128:
 8017              	.L678:
 8018 04d4 039C     		ldr	r4, [sp, #12]
 8019              	.LVL1129:
 8020              	.L649:
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 8021              		.loc 1 4352 0
 8022 04d6 009B     		ldr	r3, [sp]
 8023 04d8 5D1C     		adds	r5, r3, #1
 8024              	.LVL1130:
 8025 04da 3846     		mov	r0, r7
 8026 04dc 0299     		ldr	r1, [sp, #8]
 8027 04de 1A46     		mov	r2, r3
 8028 04e0 0123     		movs	r3, #1
 8029 04e2 FFF7FEFF 		bl	disk_write
 8030              	.LVL1131:
ARM GAS  /tmp/cclwbenu.s 			page 239


 8031 04e6 0028     		cmp	r0, #0
 8032 04e8 68D1     		bne	.L677
 8033              	.LVL1132:
 8034 04ea 0095     		str	r5, [sp]
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8035              		.loc 1 4354 0
 8036 04ec 013C     		subs	r4, r4, #1
 8037              	.LVL1133:
 8038 04ee F2D1     		bne	.L649
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_LeadSig, 0x41615252);
 8039              		.loc 1 4364 0
 8040 04f0 B9F1030F 		cmp	r9, #3
 8041 04f4 3DD1     		bne	.L650
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_StrucSig, 0x61417272);
 8042              		.loc 1 4365 0
 8043 04f6 5223     		movs	r3, #82
 8044 04f8 3370     		strb	r3, [r6]
 8045 04fa 7370     		strb	r3, [r6, #1]
 8046 04fc 6123     		movs	r3, #97
 8047 04fe B370     		strb	r3, [r6, #2]
 8048 0500 4122     		movs	r2, #65
 8049 0502 F270     		strb	r2, [r6, #3]
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8050              		.loc 1 4366 0
 8051 0504 7221     		movs	r1, #114
 8052 0506 86F8E411 		strb	r1, [r6, #484]
 8053 050a 86F8E511 		strb	r1, [r6, #485]
 8054 050e 86F8E621 		strb	r2, [r6, #486]
 8055 0512 86F8E731 		strb	r3, [r6, #487]
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8056              		.loc 1 4367 0
 8057 0516 049A     		ldr	r2, [sp, #16]
 8058 0518 531E     		subs	r3, r2, #1
 8059 051a 86F8E831 		strb	r3, [r6, #488]
 8060 051e 531E     		subs	r3, r2, #1
 8061 0520 C3F30723 		ubfx	r3, r3, #8, #8
 8062 0524 86F8E931 		strb	r3, [r6, #489]
 8063 0528 531E     		subs	r3, r2, #1
 8064 052a C3F30742 		ubfx	r2, r3, #16, #8
 8065 052e 86F8EA21 		strb	r2, [r6, #490]
 8066 0532 1B0E     		lsrs	r3, r3, #24
 8067 0534 86F8EB31 		strb	r3, [r6, #491]
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BS_55AA, 0xAA55);
 8068              		.loc 1 4368 0
 8069 0538 0223     		movs	r3, #2
 8070 053a 86F8EC31 		strb	r3, [r6, #492]
 8071 053e 0023     		movs	r3, #0
 8072 0540 86F8ED31 		strb	r3, [r6, #493]
 8073 0544 86F8EE31 		strb	r3, [r6, #494]
 8074 0548 86F8EF31 		strb	r3, [r6, #495]
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR + 1) */
 8075              		.loc 1 4369 0
 8076 054c 5523     		movs	r3, #85
 8077 054e 86F8FE31 		strb	r3, [r6, #510]
 8078 0552 AA23     		movs	r3, #170
 8079 0554 86F8FF31 		strb	r3, [r6, #511]
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR + 7) */
ARM GAS  /tmp/cclwbenu.s 			page 240


 8080              		.loc 1 4370 0
 8081 0558 3846     		mov	r0, r7
 8082 055a 3146     		mov	r1, r6
 8083 055c 019C     		ldr	r4, [sp, #4]
 8084              	.LVL1134:
 8085 055e 621C     		adds	r2, r4, #1
 8086 0560 0123     		movs	r3, #1
 8087 0562 FFF7FEFF 		bl	disk_write
 8088              	.LVL1135:
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8089              		.loc 1 4371 0
 8090 0566 3846     		mov	r0, r7
 8091 0568 3146     		mov	r1, r6
 8092 056a E21D     		adds	r2, r4, #7
 8093 056c 0123     		movs	r3, #1
 8094 056e FFF7FEFF 		bl	disk_write
 8095              	.LVL1136:
 8096              	.L650:
4374:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8097              		.loc 1 4374 0
 8098 0572 3846     		mov	r0, r7
 8099 0574 0021     		movs	r1, #0
 8100 0576 0A46     		mov	r2, r1
 8101 0578 FFF7FEFF 		bl	disk_ioctl
 8102              	.LVL1137:
 8103 057c 0030     		adds	r0, r0, #0
 8104 057e 18BF     		it	ne
 8105 0580 0120     		movne	r0, #1
 8106 0582 1CE0     		b	.L610
 8107              	.LVL1138:
 8108              	.L651:
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
 8109              		.loc 1 4160 0
 8110 0584 1320     		movs	r0, #19
 8111              	.LVL1139:
 8112 0586 1AE0     		b	.L610
 8113              	.LVL1140:
 8114              	.L652:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
 8115              		.loc 1 4162 0
 8116 0588 0B20     		movs	r0, #11
 8117              	.LVL1141:
 8118 058a 18E0     		b	.L610
 8119              	.LVL1142:
 8120              	.L653:
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
 8121              		.loc 1 4164 0
 8122 058c 0C20     		movs	r0, #12
 8123              	.LVL1143:
 8124 058e 16E0     		b	.L610
 8125              	.LVL1144:
 8126              	.L654:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 8127              		.loc 1 4171 0
 8128 0590 0320     		movs	r0, #3
 8129              	.LVL1145:
 8130 0592 14E0     		b	.L610
ARM GAS  /tmp/cclwbenu.s 			page 241


 8131              	.LVL1146:
 8132              	.L655:
4172:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
 8133              		.loc 1 4172 0
 8134 0594 0A20     		movs	r0, #10
 8135              	.LVL1147:
 8136 0596 12E0     		b	.L610
 8137              	.L656:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
 8138              		.loc 1 4188 0
 8139 0598 0120     		movs	r0, #1
 8140 059a 10E0     		b	.L610
 8141              	.L657:
 8142 059c 0120     		movs	r0, #1
 8143 059e 0EE0     		b	.L610
 8144              	.LVL1148:
 8145              	.L664:
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8146              		.loc 1 4223 0
 8147 05a0 0E20     		movs	r0, #14
 8148 05a2 0CE0     		b	.L610
 8149              	.LVL1149:
 8150              	.L665:
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8151              		.loc 1 4240 0
 8152 05a4 0E20     		movs	r0, #14
 8153 05a6 0AE0     		b	.L610
 8154              	.LVL1150:
 8155              	.L666:
 8156 05a8 0E20     		movs	r0, #14
 8157 05aa 08E0     		b	.L610
 8158              	.LVL1151:
 8159              	.L671:
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF8;
 8160              		.loc 1 4278 0
 8161 05ac 0120     		movs	r0, #1
 8162 05ae 06E0     		b	.L610
 8163              	.LVL1152:
 8164              	.L673:
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR + 6) */
 8165              		.loc 1 4322 0
 8166 05b0 0120     		movs	r0, #1
 8167 05b2 04E0     		b	.L610
 8168              	.LVL1153:
 8169              	.L675:
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
 8170              		.loc 1 4341 0
 8171 05b4 0120     		movs	r0, #1
 8172 05b6 02E0     		b	.L610
 8173              	.L676:
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8174              		.loc 1 4345 0
 8175 05b8 0120     		movs	r0, #1
 8176 05ba 00E0     		b	.L610
 8177              	.LVL1154:
 8178              	.L677:
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--i);
ARM GAS  /tmp/cclwbenu.s 			page 242


 8179              		.loc 1 4353 0
 8180 05bc 0120     		movs	r0, #1
 8181              	.LVL1155:
 8182              	.L610:
4375:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8183              		.loc 1 4375 0
 8184 05be 09B0     		add	sp, sp, #36
 8185              	.LCFI86:
 8186              		.cfi_def_cfa_offset 36
 8187              		@ sp needed
 8188 05c0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8189              	.LVL1156:
 8190              	.L683:
 8191              		.align	2
 8192              	.L682:
 8193 05c4 1C000000 		.word	.LC2
 8194 05c8 30000000 		.word	.LC3
 8195 05cc 00FFFF00 		.word	16776960
 8196              		.cfi_endproc
 8197              	.LFE115:
 8199              		.section	.text.f_gets,"ax",%progbits
 8200              		.align	2
 8201              		.global	f_gets
 8202              		.thumb
 8203              		.thumb_func
 8205              	f_gets:
 8206              	.LFB116:
4462:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 8207              		.loc 1 4462 0
 8208              		.cfi_startproc
 8209              		@ args = 0, pretend = 0, frame = 8
 8210              		@ frame_needed = 0, uses_anonymous_args = 0
 8211              	.LVL1157:
 8212 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8213              	.LCFI87:
 8214              		.cfi_def_cfa_offset 24
 8215              		.cfi_offset 4, -24
 8216              		.cfi_offset 5, -20
 8217              		.cfi_offset 6, -16
 8218              		.cfi_offset 7, -12
 8219              		.cfi_offset 8, -8
 8220              		.cfi_offset 14, -4
 8221 0004 82B0     		sub	sp, sp, #8
 8222              	.LCFI88:
 8223              		.cfi_def_cfa_offset 32
 8224 0006 8046     		mov	r8, r0
 8225 0008 0E46     		mov	r6, r1
 8226 000a 1746     		mov	r7, r2
 8227              	.LVL1158:
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 8228              		.loc 1 4464 0
 8229 000c 0546     		mov	r5, r0
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 8230              		.loc 1 4463 0
 8231 000e 0024     		movs	r4, #0
4469:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
 8232              		.loc 1 4469 0
ARM GAS  /tmp/cclwbenu.s 			page 243


 8233 0010 12E0     		b	.L685
 8234              	.LVL1159:
 8235              	.L688:
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 8236              		.loc 1 4514 0
 8237 0012 3846     		mov	r0, r7
 8238 0014 01A9     		add	r1, sp, #4
 8239 0016 0122     		movs	r2, #1
 8240 0018 6B46     		mov	r3, sp
 8241 001a FFF7FEFF 		bl	f_read
 8242              	.LVL1160:
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 8243              		.loc 1 4515 0
 8244 001e 009B     		ldr	r3, [sp]
 8245 0020 012B     		cmp	r3, #1
 8246 0022 0ED1     		bne	.L686
4516:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8247              		.loc 1 4516 0
 8248 0024 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 8249              	.LVL1161:
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 8250              		.loc 1 4518 0
 8251 0028 0D2B     		cmp	r3, #13
 8252 002a 05D0     		beq	.L685
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8253              		.loc 1 4519 0
 8254 002c 6A1C     		adds	r2, r5, #1
 8255              	.LVL1162:
 8256 002e 2B70     		strb	r3, [r5]
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 8257              		.loc 1 4520 0
 8258 0030 0134     		adds	r4, r4, #1
 8259              	.LVL1163:
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8260              		.loc 1 4521 0
 8261 0032 0A2B     		cmp	r3, #10
 8262 0034 04D0     		beq	.L690
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8263              		.loc 1 4519 0
 8264 0036 1546     		mov	r5, r2
 8265              	.LVL1164:
 8266              	.L685:
4469:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
 8267              		.loc 1 4469 0
 8268 0038 731E     		subs	r3, r6, #1
 8269 003a A342     		cmp	r3, r4
 8270 003c E9DC     		bgt	.L688
 8271 003e 00E0     		b	.L686
 8272              	.LVL1165:
 8273              	.L690:
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8274              		.loc 1 4519 0
 8275 0040 1546     		mov	r5, r2
 8276              	.LVL1166:
 8277              	.L686:
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 8278              		.loc 1 4523 0
ARM GAS  /tmp/cclwbenu.s 			page 244


 8279 0042 0023     		movs	r3, #0
 8280 0044 2B70     		strb	r3, [r5]
4524:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8281              		.loc 1 4524 0
 8282 0046 0CB9     		cbnz	r4, .L691
 8283 0048 1846     		mov	r0, r3
 8284 004a 00E0     		b	.L689
 8285              	.L691:
 8286 004c 4046     		mov	r0, r8
 8287              	.L689:
4525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8288              		.loc 1 4525 0 discriminator 4
 8289 004e 02B0     		add	sp, sp, #8
 8290              	.LCFI89:
 8291              		.cfi_def_cfa_offset 24
 8292              		@ sp needed
 8293 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8294              		.cfi_endproc
 8295              	.LFE116:
 8297              		.section	.text.f_putc,"ax",%progbits
 8298              		.align	2
 8299              		.global	f_putc
 8300              		.thumb
 8301              		.thumb_func
 8303              	f_putc:
 8304              	.LFB118:
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
4599:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4602:Middlewares/Third_Party/FatFs/src/ff.c **** )
4603:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8305              		.loc 1 4603 0
 8306              		.cfi_startproc
 8307              		@ args = 0, pretend = 0, frame = 80
 8308              		@ frame_needed = 0, uses_anonymous_args = 0
 8309              	.LVL1167:
 8310 0000 00B5     		push	{lr}
 8311              	.LCFI90:
 8312              		.cfi_def_cfa_offset 4
 8313              		.cfi_offset 14, -4
 8314 0002 95B0     		sub	sp, sp, #84
 8315              	.LCFI91:
 8316              		.cfi_def_cfa_offset 88
 8317 0004 0246     		mov	r2, r0
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4605:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
4606:Middlewares/Third_Party/FatFs/src/ff.c **** 
4607:Middlewares/Third_Party/FatFs/src/ff.c **** 
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;			/* Initialize output buffer */
 8318              		.loc 1 4608 0
 8319 0006 0191     		str	r1, [sp, #4]
4609:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 8320              		.loc 1 4609 0
 8321 0008 0023     		movs	r3, #0
ARM GAS  /tmp/cclwbenu.s 			page 245


 8322 000a 0293     		str	r3, [sp, #8]
 8323 000c 0393     		str	r3, [sp, #12]
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 
4611:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put a character */
 8324              		.loc 1 4611 0
 8325 000e 01A8     		add	r0, sp, #4
 8326              	.LVL1168:
 8327 0010 1146     		mov	r1, r2
 8328              	.LVL1169:
 8329 0012 FFF7FEFF 		bl	putc_bfd
 8330              	.LVL1170:
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0	/* Flush buffered characters to the file */
 8331              		.loc 1 4613 0
 8332 0016 029A     		ldr	r2, [sp, #8]
 8333 0018 002A     		cmp	r2, #0
 8334 001a 0BDB     		blt	.L695
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 8335              		.loc 1 4614 0
 8336 001c 0198     		ldr	r0, [sp, #4]
 8337 001e 04A9     		add	r1, sp, #16
 8338 0020 6B46     		mov	r3, sp
 8339 0022 FFF7FEFF 		bl	f_write
 8340              	.LVL1171:
 8341 0026 40B9     		cbnz	r0, .L696
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 8342              		.loc 1 4615 0
 8343 0028 009B     		ldr	r3, [sp]
 8344 002a 029A     		ldr	r2, [sp, #8]
 8345 002c 9A42     		cmp	r2, r3
 8346 002e 07D1     		bne	.L697
 8347              		.loc 1 4615 0 is_stmt 0 discriminator 1
 8348 0030 0398     		ldr	r0, [sp, #12]
 8349 0032 07E0     		b	.L694
 8350              	.L695:
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 8351              		.loc 1 4616 0 is_stmt 1
 8352 0034 4FF0FF30 		mov	r0, #-1
 8353 0038 04E0     		b	.L694
 8354              	.L696:
 8355 003a 4FF0FF30 		mov	r0, #-1
 8356 003e 01E0     		b	.L694
 8357              	.L697:
 8358 0040 4FF0FF30 		mov	r0, #-1
 8359              	.L694:
4617:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8360              		.loc 1 4617 0
 8361 0044 15B0     		add	sp, sp, #84
 8362              	.LCFI92:
 8363              		.cfi_def_cfa_offset 4
 8364              		@ sp needed
 8365 0046 5DF804FB 		ldr	pc, [sp], #4
 8366              		.cfi_endproc
 8367              	.LFE118:
 8369 004a 00BF     		.section	.text.f_puts,"ax",%progbits
 8370              		.align	2
 8371              		.global	f_puts
ARM GAS  /tmp/cclwbenu.s 			page 246


 8372              		.thumb
 8373              		.thumb_func
 8375              	f_puts:
 8376              	.LFB119:
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4623:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
4624:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 
4626:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** )
4630:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8377              		.loc 1 4630 0
 8378              		.cfi_startproc
 8379              		@ args = 0, pretend = 0, frame = 80
 8380              		@ frame_needed = 0, uses_anonymous_args = 0
 8381              	.LVL1172:
 8382 0000 10B5     		push	{r4, lr}
 8383              	.LCFI93:
 8384              		.cfi_def_cfa_offset 8
 8385              		.cfi_offset 4, -8
 8386              		.cfi_offset 14, -4
 8387 0002 94B0     		sub	sp, sp, #80
 8388              	.LCFI94:
 8389              		.cfi_def_cfa_offset 88
 8390 0004 0446     		mov	r4, r0
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;				/* Initialize output buffer */
 8391              		.loc 1 4635 0
 8392 0006 0191     		str	r1, [sp, #4]
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 8393              		.loc 1 4636 0
 8394 0008 0023     		movs	r3, #0
 8395 000a 0293     		str	r3, [sp, #8]
 8396 000c 0393     		str	r3, [sp, #12]
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str)			/* Put the string */
 8397              		.loc 1 4638 0
 8398 000e 03E0     		b	.L700
 8399              	.LVL1173:
 8400              	.L701:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(&pb, *str++);
 8401              		.loc 1 4639 0
 8402 0010 0134     		adds	r4, r4, #1
 8403              	.LVL1174:
 8404 0012 01A8     		add	r0, sp, #4
 8405 0014 FFF7FEFF 		bl	putc_bfd
 8406              	.LVL1175:
 8407              	.L700:
ARM GAS  /tmp/cclwbenu.s 			page 247


4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(&pb, *str++);
 8408              		.loc 1 4638 0
 8409 0018 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 8410 001a 0029     		cmp	r1, #0
 8411 001c F8D1     		bne	.L701
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0		/* Flush buffered characters to the file */
 8412              		.loc 1 4641 0
 8413 001e 029A     		ldr	r2, [sp, #8]
 8414 0020 002A     		cmp	r2, #0
 8415 0022 0BDB     		blt	.L703
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 8416              		.loc 1 4642 0
 8417 0024 0198     		ldr	r0, [sp, #4]
 8418 0026 04A9     		add	r1, sp, #16
 8419 0028 6B46     		mov	r3, sp
 8420 002a FFF7FEFF 		bl	f_write
 8421              	.LVL1176:
 8422 002e 40B9     		cbnz	r0, .L704
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 8423              		.loc 1 4643 0
 8424 0030 009B     		ldr	r3, [sp]
 8425 0032 029A     		ldr	r2, [sp, #8]
 8426 0034 9A42     		cmp	r2, r3
 8427 0036 07D1     		bne	.L705
 8428              		.loc 1 4643 0 is_stmt 0 discriminator 1
 8429 0038 0398     		ldr	r0, [sp, #12]
 8430 003a 07E0     		b	.L702
 8431              	.L703:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 8432              		.loc 1 4644 0 is_stmt 1
 8433 003c 4FF0FF30 		mov	r0, #-1
 8434 0040 04E0     		b	.L702
 8435              	.L704:
 8436 0042 4FF0FF30 		mov	r0, #-1
 8437 0046 01E0     		b	.L702
 8438              	.L705:
 8439 0048 4FF0FF30 		mov	r0, #-1
 8440              	.L702:
4645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8441              		.loc 1 4645 0
 8442 004c 14B0     		add	sp, sp, #80
 8443              	.LCFI95:
 8444              		.cfi_def_cfa_offset 8
 8445              		@ sp needed
 8446 004e 10BD     		pop	{r4, pc}
 8447              		.cfi_endproc
 8448              	.LFE119:
 8450              		.section	.text.f_printf,"ax",%progbits
 8451              		.align	2
 8452              		.global	f_printf
 8453              		.thumb
 8454              		.thumb_func
 8456              	f_printf:
 8457              	.LFB120:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 248


4648:Middlewares/Third_Party/FatFs/src/ff.c **** 
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 
4650:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4651:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 
4654:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
4658:Middlewares/Third_Party/FatFs/src/ff.c **** )
4659:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8458              		.loc 1 4659 0
 8459              		.cfi_startproc
 8460              		@ args = 4, pretend = 12, frame = 104
 8461              		@ frame_needed = 0, uses_anonymous_args = 1
 8462              	.LVL1177:
 8463 0000 0EB4     		push	{r1, r2, r3}
 8464              	.LCFI96:
 8465              		.cfi_def_cfa_offset 12
 8466              		.cfi_offset 1, -12
 8467              		.cfi_offset 2, -8
 8468              		.cfi_offset 3, -4
 8469 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 8470              	.LCFI97:
 8471              		.cfi_def_cfa_offset 44
 8472              		.cfi_offset 4, -44
 8473              		.cfi_offset 5, -40
 8474              		.cfi_offset 6, -36
 8475              		.cfi_offset 7, -32
 8476              		.cfi_offset 8, -28
 8477              		.cfi_offset 9, -24
 8478              		.cfi_offset 10, -20
 8479              		.cfi_offset 14, -16
 8480 0006 9BB0     		sub	sp, sp, #108
 8481              	.LCFI98:
 8482              		.cfi_def_cfa_offset 152
 8483 0008 23AB     		add	r3, sp, #140
 8484 000a 53F8046B 		ldr	r6, [r3], #4
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw, i, j, w;
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, s[16], *p;
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;				/* Initialize output buffer */
 8485              		.loc 1 4668 0
 8486 000e 0190     		str	r0, [sp, #4]
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 8487              		.loc 1 4669 0
 8488 0010 0022     		movs	r2, #0
 8489 0012 0292     		str	r2, [sp, #8]
 8490 0014 0392     		str	r2, [sp, #12]
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
ARM GAS  /tmp/cclwbenu.s 			page 249


 8491              		.loc 1 4671 0
 8492 0016 1993     		str	r3, [sp, #100]
 8493              	.LVL1178:
 8494              	.L708:
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 8495              		.loc 1 4674 0
 8496 0018 741C     		adds	r4, r6, #1
 8497              	.LVL1179:
 8498 001a 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 8499              	.LVL1180:
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 8500              		.loc 1 4675 0
 8501 001c 0029     		cmp	r1, #0
 8502 001e 00F00281 		beq	.L709
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 8503              		.loc 1 4676 0
 8504 0022 2529     		cmp	r1, #37
 8505 0024 04D0     		beq	.L710
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 8506              		.loc 1 4677 0
 8507 0026 01A8     		add	r0, sp, #4
 8508 0028 FFF7FEFF 		bl	putc_bfd
 8509              	.LVL1181:
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 8510              		.loc 1 4674 0
 8511 002c 2646     		mov	r6, r4
4678:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 8512              		.loc 1 4678 0
 8513 002e F3E7     		b	.L708
 8514              	.LVL1182:
 8515              	.L710:
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 8516              		.loc 1 4681 0
 8517 0030 B31C     		adds	r3, r6, #2
 8518              	.LVL1183:
 8519 0032 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 8520              	.LVL1184:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 8521              		.loc 1 4682 0
 8522 0034 3029     		cmp	r1, #48
 8523 0036 03D1     		bne	.L712
 8524              	.LVL1185:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 8525              		.loc 1 4683 0
 8526 0038 F31C     		adds	r3, r6, #3
 8527              	.LVL1186:
 8528 003a B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 8529              	.LVL1187:
 8530 003c 0127     		movs	r7, #1
 8531 003e 06E0     		b	.L713
 8532              	.LVL1188:
 8533              	.L712:
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
ARM GAS  /tmp/cclwbenu.s 			page 250


4685:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 8534              		.loc 1 4685 0
 8535 0040 2D29     		cmp	r1, #45
 8536 0042 03D1     		bne	.L754
 8537              	.LVL1189:
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 8538              		.loc 1 4686 0
 8539 0044 F31C     		adds	r3, r6, #3
 8540              	.LVL1190:
 8541 0046 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 8542              	.LVL1191:
 8543 0048 0227     		movs	r7, #2
 8544 004a 00E0     		b	.L713
 8545              	.LVL1192:
 8546              	.L754:
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 8547              		.loc 1 4680 0
 8548 004c 0027     		movs	r7, #0
 8549              	.LVL1193:
 8550              	.L713:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8551              		.loc 1 4683 0
 8552 004e 1E46     		mov	r6, r3
 8553 0050 0024     		movs	r4, #0
 8554 0052 06E0     		b	.L714
 8555              	.LVL1194:
 8556              	.L715:
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 8557              		.loc 1 4690 0
 8558 0054 04EB8404 		add	r4, r4, r4, lsl #2
 8559              	.LVL1195:
 8560 0058 6400     		lsls	r4, r4, #1
 8561 005a 0C44     		add	r4, r4, r1
 8562 005c 303C     		subs	r4, r4, #48
 8563              	.LVL1196:
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 8564              		.loc 1 4691 0
 8565 005e 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 8566              	.LVL1197:
 8567 0060 0136     		adds	r6, r6, #1
 8568              	.LVL1198:
 8569              	.L714:
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 8570              		.loc 1 4689 0
 8571 0062 A1F13003 		sub	r3, r1, #48
 8572 0066 DBB2     		uxtb	r3, r3
 8573 0068 092B     		cmp	r3, #9
 8574 006a F3D9     		bls	.L715
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 8575              		.loc 1 4693 0
 8576 006c 6C29     		cmp	r1, #108
 8577 006e 01D0     		beq	.L716
 8578              		.loc 1 4693 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cclwbenu.s 			page 251


 8579 0070 4C29     		cmp	r1, #76
 8580 0072 03D1     		bne	.L717
 8581              	.L716:
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 8582              		.loc 1 4694 0 is_stmt 1
 8583 0074 47F00407 		orr	r7, r7, #4
 8584              	.LVL1199:
 8585 0078 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 8586              	.LVL1200:
 8587 007a 0136     		adds	r6, r6, #1
 8588              	.LVL1201:
 8589              	.L717:
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 8590              		.loc 1 4696 0
 8591 007c 0029     		cmp	r1, #0
 8592 007e 00F0D280 		beq	.L709
 8593              	.LVL1202:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 8594              		.loc 1 4698 0
 8595 0082 A1F16103 		sub	r3, r1, #97
 8596 0086 DBB2     		uxtb	r3, r3
 8597 0088 192B     		cmp	r3, #25
 8598 008a 03D8     		bhi	.L755
 8599              		.loc 1 4698 0 is_stmt 0 discriminator 1
 8600 008c A1F12003 		sub	r3, r1, #32
 8601 0090 DBB2     		uxtb	r3, r3
 8602              	.LVL1203:
 8603 0092 00E0     		b	.L718
 8604              	.LVL1204:
 8605              	.L755:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 8606              		.loc 1 4697 0 is_stmt 1
 8607 0094 0B46     		mov	r3, r1
 8608              	.LVL1205:
 8609              	.L718:
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 8610              		.loc 1 4699 0
 8611 0096 A3F14202 		sub	r2, r3, #66
 8612 009a 162A     		cmp	r2, #22
 8613 009c 48D8     		bhi	.L719
 8614 009e DFE802F0 		tbb	[pc, r2]
 8615              	.L721:
 8616 00a2 4B       		.byte	(.L720-.L721)/2
 8617 00a3 39       		.byte	(.L722-.L721)/2
 8618 00a4 41       		.byte	(.L723-.L721)/2
 8619 00a5 47       		.byte	(.L719-.L721)/2
 8620 00a6 47       		.byte	(.L719-.L721)/2
 8621 00a7 47       		.byte	(.L719-.L721)/2
 8622 00a8 47       		.byte	(.L719-.L721)/2
 8623 00a9 47       		.byte	(.L719-.L721)/2
 8624 00aa 47       		.byte	(.L719-.L721)/2
 8625 00ab 47       		.byte	(.L719-.L721)/2
 8626 00ac 47       		.byte	(.L719-.L721)/2
 8627 00ad 47       		.byte	(.L719-.L721)/2
 8628 00ae 47       		.byte	(.L719-.L721)/2
ARM GAS  /tmp/cclwbenu.s 			page 252


 8629 00af 4E       		.byte	(.L756-.L721)/2
 8630 00b0 47       		.byte	(.L719-.L721)/2
 8631 00b1 47       		.byte	(.L719-.L721)/2
 8632 00b2 47       		.byte	(.L719-.L721)/2
 8633 00b3 0C       		.byte	(.L725-.L721)/2
 8634 00b4 47       		.byte	(.L719-.L721)/2
 8635 00b5 41       		.byte	(.L723-.L721)/2
 8636 00b6 47       		.byte	(.L719-.L721)/2
 8637 00b7 47       		.byte	(.L719-.L721)/2
 8638 00b8 44       		.byte	(.L726-.L721)/2
 8639 00b9 00       		.p2align 1
 8640              	.L725:
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 8641              		.loc 1 4701 0
 8642 00ba 199B     		ldr	r3, [sp, #100]
 8643              	.LVL1206:
 8644 00bc 1A1D     		adds	r2, r3, #4
 8645 00be 1992     		str	r2, [sp, #100]
 8646 00c0 D3F80080 		ldr	r8, [r3]
 8647              	.LVL1207:
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 8648              		.loc 1 4702 0
 8649 00c4 0025     		movs	r5, #0
 8650 00c6 00E0     		b	.L727
 8651              	.LVL1208:
 8652              	.L728:
 8653              		.loc 1 4702 0 is_stmt 0 discriminator 3
 8654 00c8 0135     		adds	r5, r5, #1
 8655              	.LVL1209:
 8656              	.L727:
 8657              		.loc 1 4702 0 discriminator 1
 8658 00ca 18F80530 		ldrb	r3, [r8, r5]	@ zero_extendqisi2
 8659 00ce 002B     		cmp	r3, #0
 8660 00d0 FAD1     		bne	.L728
4703:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 8661              		.loc 1 4703 0 is_stmt 1
 8662 00d2 17F0020F 		tst	r7, #2
 8663 00d6 0FD1     		bne	.L732
 8664              		.loc 1 4703 0 is_stmt 0 discriminator 1
 8665 00d8 2B46     		mov	r3, r5
 8666 00da 04E0     		b	.L730
 8667              	.LVL1210:
 8668              	.L731:
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 8669              		.loc 1 4704 0 is_stmt 1 discriminator 2
 8670 00dc 01A8     		add	r0, sp, #4
 8671 00de 2021     		movs	r1, #32
 8672 00e0 FFF7FEFF 		bl	putc_bfd
 8673              	.LVL1211:
 8674 00e4 2B46     		mov	r3, r5
 8675              	.LVL1212:
 8676              	.L730:
 8677              		.loc 1 4704 0 is_stmt 0 discriminator 1
 8678 00e6 5D1C     		adds	r5, r3, #1
 8679              	.LVL1213:
 8680 00e8 A342     		cmp	r3, r4
ARM GAS  /tmp/cclwbenu.s 			page 253


 8681 00ea F7D3     		bcc	.L731
 8682 00ec 04E0     		b	.L732
 8683              	.L733:
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 8684              		.loc 1 4706 0 is_stmt 1 discriminator 2
 8685 00ee 08F10108 		add	r8, r8, #1
 8686              	.LVL1214:
 8687 00f2 01A8     		add	r0, sp, #4
 8688 00f4 FFF7FEFF 		bl	putc_bfd
 8689              	.LVL1215:
 8690              	.L732:
 8691              		.loc 1 4706 0 is_stmt 0 discriminator 1
 8692 00f8 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
 8693 00fc 0029     		cmp	r1, #0
 8694 00fe F6D1     		bne	.L733
 8695 0100 04E0     		b	.L734
 8696              	.LVL1216:
 8697              	.L735:
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 8698              		.loc 1 4707 0 is_stmt 1 discriminator 2
 8699 0102 01A8     		add	r0, sp, #4
 8700 0104 2021     		movs	r1, #32
 8701 0106 FFF7FEFF 		bl	putc_bfd
 8702              	.LVL1217:
 8703 010a 3D46     		mov	r5, r7
 8704              	.LVL1218:
 8705              	.L734:
 8706              		.loc 1 4707 0 is_stmt 0 discriminator 1
 8707 010c 6F1C     		adds	r7, r5, #1
 8708              	.LVL1219:
 8709 010e A542     		cmp	r5, r4
 8710 0110 F7D3     		bcc	.L735
 8711 0112 81E7     		b	.L708
 8712              	.LVL1220:
 8713              	.L722:
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
4709:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 8714              		.loc 1 4710 0 is_stmt 1
 8715 0114 199B     		ldr	r3, [sp, #100]
 8716              	.LVL1221:
 8717 0116 1A1D     		adds	r2, r3, #4
 8718 0118 1992     		str	r2, [sp, #100]
 8719 011a 01A8     		add	r0, sp, #4
 8720 011c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8721              	.LVL1222:
 8722 011e FFF7FEFF 		bl	putc_bfd
 8723              	.LVL1223:
 8724 0122 79E7     		b	.L708
 8725              	.LVL1224:
 8726              	.L723:
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
4713:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
ARM GAS  /tmp/cclwbenu.s 			page 254


4716:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 8727              		.loc 1 4717 0
 8728 0124 4FF00A08 		mov	r8, #10
 8729 0128 0BE0     		b	.L724
 8730              	.LVL1225:
 8731              	.L726:
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 8732              		.loc 1 4719 0
 8733 012a 4FF01008 		mov	r8, #16
 8734 012e 08E0     		b	.L724
 8735              	.LVL1226:
 8736              	.L719:
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 8737              		.loc 1 4721 0
 8738 0130 01A8     		add	r0, sp, #4
 8739 0132 FFF7FEFF 		bl	putc_bfd
 8740              	.LVL1227:
 8741 0136 6FE7     		b	.L708
 8742              	.LVL1228:
 8743              	.L720:
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
 8744              		.loc 1 4712 0
 8745 0138 4FF00208 		mov	r8, #2
 8746 013c 01E0     		b	.L724
 8747              	.L756:
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
 8748              		.loc 1 4714 0
 8749 013e 4FF00808 		mov	r8, #8
 8750              	.L724:
 8751              	.LVL1229:
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 8752              		.loc 1 4725 0
 8753 0142 17F0040F 		tst	r7, #4
 8754 0146 05D0     		beq	.L736
 8755              		.loc 1 4725 0 is_stmt 0 discriminator 1
 8756 0148 199A     		ldr	r2, [sp, #100]
 8757 014a 101D     		adds	r0, r2, #4
 8758 014c 1990     		str	r0, [sp, #100]
 8759 014e D2F800C0 		ldr	ip, [r2]
 8760 0152 0CE0     		b	.L737
 8761              	.L736:
 8762              		.loc 1 4725 0 discriminator 2
 8763 0154 442B     		cmp	r3, #68
 8764 0156 05D1     		bne	.L738
 8765              		.loc 1 4725 0 discriminator 4
 8766 0158 199A     		ldr	r2, [sp, #100]
 8767 015a 101D     		adds	r0, r2, #4
 8768 015c 1990     		str	r0, [sp, #100]
 8769 015e D2F800C0 		ldr	ip, [r2]
 8770 0162 04E0     		b	.L737
 8771              	.L738:
ARM GAS  /tmp/cclwbenu.s 			page 255


 8772              		.loc 1 4725 0 discriminator 5
 8773 0164 199A     		ldr	r2, [sp, #100]
 8774 0166 101D     		adds	r0, r2, #4
 8775 0168 1990     		str	r0, [sp, #100]
 8776 016a D2F800C0 		ldr	ip, [r2]
 8777              	.L737:
 8778              	.LVL1230:
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 8779              		.loc 1 4726 0 is_stmt 1 discriminator 8
 8780 016e 442B     		cmp	r3, #68
 8781 0170 06D1     		bne	.L740
 8782              		.loc 1 4726 0 is_stmt 0 discriminator 1
 8783 0172 BCF1000F 		cmp	ip, #0
 8784 0176 03DA     		bge	.L740
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 8785              		.loc 1 4727 0 is_stmt 1
 8786 0178 CCF1000C 		rsb	ip, ip, #0
 8787              	.LVL1231:
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
 8788              		.loc 1 4728 0
 8789 017c 47F00807 		orr	r7, r7, #8
 8790              	.LVL1232:
 8791              	.L740:
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 8792              		.loc 1 4730 0
 8793 0180 0020     		movs	r0, #0
 8794 0182 00E0     		b	.L744
 8795              	.LVL1233:
 8796              	.L758:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 8797              		.loc 1 4734 0
 8798 0184 2846     		mov	r0, r5
 8799              	.LVL1234:
 8800              	.L744:
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 8801              		.loc 1 4732 0
 8802 0186 BCFBF8FE 		udiv	lr, ip, r8
 8803 018a 08FB1EC3 		mls	r3, r8, lr, ip
 8804 018e DBB2     		uxtb	r3, r3
 8805              	.LVL1235:
 8806 0190 F446     		mov	ip, lr
 8807              	.LVL1236:
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 8808              		.loc 1 4733 0
 8809 0192 092B     		cmp	r3, #9
 8810 0194 06D9     		bls	.L741
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 8811              		.loc 1 4733 0 is_stmt 0 discriminator 1
 8812 0196 7829     		cmp	r1, #120
 8813 0198 01D1     		bne	.L757
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 8814              		.loc 1 4733 0
 8815 019a 2722     		movs	r2, #39
ARM GAS  /tmp/cclwbenu.s 			page 256


 8816 019c 00E0     		b	.L742
 8817              	.L757:
 8818 019e 0722     		movs	r2, #7
 8819              	.L742:
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 8820              		.loc 1 4733 0 discriminator 5
 8821 01a0 1A44     		add	r2, r2, r3
 8822 01a2 D3B2     		uxtb	r3, r2
 8823              	.LVL1237:
 8824              	.L741:
 8825              		.loc 1 4734 0 is_stmt 1
 8826 01a4 451C     		adds	r5, r0, #1
 8827              	.LVL1238:
 8828 01a6 1AAA     		add	r2, sp, #104
 8829 01a8 1044     		add	r0, r0, r2
 8830 01aa 3033     		adds	r3, r3, #48
 8831              	.LVL1239:
 8832 01ac 00F8183C 		strb	r3, [r0, #-24]
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof s / sizeof s[0]);
 8833              		.loc 1 4735 0
 8834 01b0 BEF1000F 		cmp	lr, #0
 8835 01b4 01D0     		beq	.L743
 8836              		.loc 1 4735 0 is_stmt 0 discriminator 1
 8837 01b6 0F2D     		cmp	r5, #15
 8838 01b8 E4D9     		bls	.L758
 8839              	.L743:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) s[i++] = '-';
 8840              		.loc 1 4736 0 is_stmt 1
 8841 01ba 17F0080F 		tst	r7, #8
 8842 01be 06D0     		beq	.L745
 8843              		.loc 1 4736 0 is_stmt 0 discriminator 1
 8844 01c0 2B46     		mov	r3, r5
 8845              	.LVL1240:
 8846 01c2 1AAA     		add	r2, sp, #104
 8847 01c4 1344     		add	r3, r3, r2
 8848              	.LVL1241:
 8849 01c6 0135     		adds	r5, r5, #1
 8850              	.LVL1242:
 8851 01c8 2D22     		movs	r2, #45
 8852 01ca 03F8182C 		strb	r2, [r3, #-24]
 8853              	.LVL1243:
 8854              	.L745:
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 8855              		.loc 1 4737 0 is_stmt 1
 8856 01ce 17F0010F 		tst	r7, #1
 8857 01d2 02D0     		beq	.L759
 8858 01d4 4FF0300A 		mov	r10, #48
 8859 01d8 01E0     		b	.L746
 8860              	.L759:
 8861 01da 4FF0200A 		mov	r10, #32
 8862              	.L746:
 8863              	.LVL1244:
 8864              		.loc 1 4737 0 is_stmt 0 discriminator 4
 8865 01de A846     		mov	r8, r5
 8866              	.LVL1245:
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 8867              		.loc 1 4738 0 is_stmt 1 discriminator 4
ARM GAS  /tmp/cclwbenu.s 			page 257


 8868 01e0 04E0     		b	.L747
 8869              	.LVL1246:
 8870              	.L749:
 8871              		.loc 1 4738 0 is_stmt 0 discriminator 3
 8872 01e2 01A8     		add	r0, sp, #4
 8873 01e4 5146     		mov	r1, r10
 8874 01e6 FFF7FEFF 		bl	putc_bfd
 8875              	.LVL1247:
 8876 01ea C846     		mov	r8, r9
 8877              	.LVL1248:
 8878              	.L747:
 8879              		.loc 1 4738 0 discriminator 1
 8880 01ec 17F0020F 		tst	r7, #2
 8881 01f0 04D1     		bne	.L750
 8882              		.loc 1 4738 0 discriminator 2
 8883 01f2 08F10109 		add	r9, r8, #1
 8884              	.LVL1249:
 8885 01f6 A045     		cmp	r8, r4
 8886 01f8 F3D3     		bcc	.L749
 8887              		.loc 1 4738 0
 8888 01fa C846     		mov	r8, r9
 8889              	.LVL1250:
 8890              	.L750:
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 		do putc_bfd(&pb, s[--i]); while (i);
 8891              		.loc 1 4739 0 is_stmt 1 discriminator 1
 8892 01fc 013D     		subs	r5, r5, #1
 8893              	.LVL1251:
 8894 01fe 1AAB     		add	r3, sp, #104
 8895 0200 2B44     		add	r3, r3, r5
 8896 0202 01A8     		add	r0, sp, #4
 8897 0204 13F8181C 		ldrb	r1, [r3, #-24]	@ zero_extendqisi2
 8898 0208 FFF7FEFF 		bl	putc_bfd
 8899              	.LVL1252:
 8900 020c 002D     		cmp	r5, #0
 8901 020e F5D1     		bne	.L750
 8902 0210 04E0     		b	.L751
 8903              	.LVL1253:
 8904              	.L752:
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 8905              		.loc 1 4740 0 discriminator 2
 8906 0212 01A8     		add	r0, sp, #4
 8907 0214 5146     		mov	r1, r10
 8908 0216 FFF7FEFF 		bl	putc_bfd
 8909              	.LVL1254:
 8910 021a A846     		mov	r8, r5
 8911              	.LVL1255:
 8912              	.L751:
 8913              		.loc 1 4740 0 is_stmt 0 discriminator 1
 8914 021c 08F10105 		add	r5, r8, #1
 8915              	.LVL1256:
 8916 0220 A045     		cmp	r8, r4
 8917 0222 F6D3     		bcc	.L752
 8918 0224 F8E6     		b	.L708
 8919              	.LVL1257:
 8920              	.L709:
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cclwbenu.s 			page 258


4743:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0		/* Flush buffered characters to the file */
 8921              		.loc 1 4745 0 is_stmt 1
 8922 0226 029A     		ldr	r2, [sp, #8]
 8923 0228 002A     		cmp	r2, #0
 8924 022a 0BDB     		blt	.L760
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 8925              		.loc 1 4746 0
 8926 022c 0198     		ldr	r0, [sp, #4]
 8927 022e 04A9     		add	r1, sp, #16
 8928              	.LVL1258:
 8929 0230 18AB     		add	r3, sp, #96
 8930 0232 FFF7FEFF 		bl	f_write
 8931              	.LVL1259:
 8932 0236 40B9     		cbnz	r0, .L761
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 8933              		.loc 1 4747 0
 8934 0238 189B     		ldr	r3, [sp, #96]
 8935 023a 029A     		ldr	r2, [sp, #8]
 8936 023c 9A42     		cmp	r2, r3
 8937 023e 07D1     		bne	.L762
 8938              		.loc 1 4747 0 is_stmt 0 discriminator 1
 8939 0240 0398     		ldr	r0, [sp, #12]
 8940 0242 07E0     		b	.L753
 8941              	.LVL1260:
 8942              	.L760:
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 8943              		.loc 1 4748 0 is_stmt 1
 8944 0244 4FF0FF30 		mov	r0, #-1
 8945 0248 04E0     		b	.L753
 8946              	.LVL1261:
 8947              	.L761:
 8948 024a 4FF0FF30 		mov	r0, #-1
 8949 024e 01E0     		b	.L753
 8950              	.L762:
 8951 0250 4FF0FF30 		mov	r0, #-1
 8952              	.L753:
4749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8953              		.loc 1 4749 0
 8954 0254 1BB0     		add	sp, sp, #108
 8955              	.LCFI99:
 8956              		.cfi_def_cfa_offset 44
 8957              		@ sp needed
 8958 0256 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 8959              	.LCFI100:
 8960              		.cfi_restore 14
 8961              		.cfi_restore 10
 8962              		.cfi_restore 9
 8963              		.cfi_restore 8
 8964              		.cfi_restore 7
 8965              		.cfi_restore 6
 8966              		.cfi_restore 5
 8967              		.cfi_restore 4
 8968              		.cfi_def_cfa_offset 12
 8969 025a 03B0     		add	sp, sp, #12
 8970              	.LCFI101:
ARM GAS  /tmp/cclwbenu.s 			page 259


 8971              		.cfi_restore 3
 8972              		.cfi_restore 2
 8973              		.cfi_restore 1
 8974              		.cfi_def_cfa_offset 0
 8975 025c 7047     		bx	lr
 8976              		.cfi_endproc
 8977              	.LFE120:
 8979 025e 00BF     		.section	.rodata.cst.7980,"a",%progbits
 8980              		.align	2
 8981              		.set	.LANCHOR5,. + 0
 8984              	cst.7980:
 8985 0000 0080     		.short	-32768
 8986 0002 0040     		.short	16384
 8987 0004 0020     		.short	8192
 8988 0006 0010     		.short	4096
 8989 0008 0008     		.short	2048
 8990 000a 0040     		.short	16384
 8991 000c 0020     		.short	8192
 8992 000e 0010     		.short	4096
 8993 0010 0008     		.short	2048
 8994 0012 0004     		.short	1024
 8995 0014 0002     		.short	512
 8996              		.section	.rodata.vst.7979,"a",%progbits
 8997              		.align	2
 8998              		.set	.LANCHOR4,. + 0
 9001              	vst.7979:
 9002 0000 0004     		.short	1024
 9003 0002 0002     		.short	512
 9004 0004 0001     		.short	256
 9005 0006 8000     		.short	128
 9006 0008 4000     		.short	64
 9007 000a 2000     		.short	32
 9008 000c 1000     		.short	16
 9009 000e 0800     		.short	8
 9010 0010 0400     		.short	4
 9011 0012 0200     		.short	2
 9012 0014 0000     		.short	0
 9013              		.section	.rodata.ExCvt,"a",%progbits
 9014              		.align	2
 9015              		.set	.LANCHOR1,. + 0
 9018              	ExCvt:
 9019 0000 80       		.byte	-128
 9020 0001 9A       		.byte	-102
 9021 0002 90       		.byte	-112
 9022 0003 B6       		.byte	-74
 9023 0004 8E       		.byte	-114
 9024 0005 B7       		.byte	-73
 9025 0006 8F       		.byte	-113
 9026 0007 80       		.byte	-128
 9027 0008 D2       		.byte	-46
 9028 0009 D3       		.byte	-45
 9029 000a D4       		.byte	-44
 9030 000b D8       		.byte	-40
 9031 000c D7       		.byte	-41
 9032 000d DE       		.byte	-34
 9033 000e 8E       		.byte	-114
 9034 000f 8F       		.byte	-113
ARM GAS  /tmp/cclwbenu.s 			page 260


 9035 0010 90       		.byte	-112
 9036 0011 92       		.byte	-110
 9037 0012 92       		.byte	-110
 9038 0013 E2       		.byte	-30
 9039 0014 99       		.byte	-103
 9040 0015 E3       		.byte	-29
 9041 0016 EA       		.byte	-22
 9042 0017 EB       		.byte	-21
 9043 0018 59       		.byte	89
 9044 0019 99       		.byte	-103
 9045 001a 9A       		.byte	-102
 9046 001b 9D       		.byte	-99
 9047 001c 9C       		.byte	-100
 9048 001d 9D       		.byte	-99
 9049 001e 9E       		.byte	-98
 9050 001f 9F       		.byte	-97
 9051 0020 B5       		.byte	-75
 9052 0021 D6       		.byte	-42
 9053 0022 E0       		.byte	-32
 9054 0023 E9       		.byte	-23
 9055 0024 A5       		.byte	-91
 9056 0025 A5       		.byte	-91
 9057 0026 A6       		.byte	-90
 9058 0027 A7       		.byte	-89
 9059 0028 A8       		.byte	-88
 9060 0029 A9       		.byte	-87
 9061 002a AA       		.byte	-86
 9062 002b AB       		.byte	-85
 9063 002c AC       		.byte	-84
 9064 002d 21       		.byte	33
 9065 002e AE       		.byte	-82
 9066 002f AF       		.byte	-81
 9067 0030 B0       		.byte	-80
 9068 0031 B1       		.byte	-79
 9069 0032 B2       		.byte	-78
 9070 0033 B3       		.byte	-77
 9071 0034 B4       		.byte	-76
 9072 0035 B5       		.byte	-75
 9073 0036 B6       		.byte	-74
 9074 0037 B7       		.byte	-73
 9075 0038 B8       		.byte	-72
 9076 0039 B9       		.byte	-71
 9077 003a BA       		.byte	-70
 9078 003b BB       		.byte	-69
 9079 003c BC       		.byte	-68
 9080 003d BD       		.byte	-67
 9081 003e BE       		.byte	-66
 9082 003f BF       		.byte	-65
 9083 0040 C0       		.byte	-64
 9084 0041 C1       		.byte	-63
 9085 0042 C2       		.byte	-62
 9086 0043 C3       		.byte	-61
 9087 0044 C4       		.byte	-60
 9088 0045 C5       		.byte	-59
 9089 0046 C7       		.byte	-57
 9090 0047 C7       		.byte	-57
 9091 0048 C8       		.byte	-56
ARM GAS  /tmp/cclwbenu.s 			page 261


 9092 0049 C9       		.byte	-55
 9093 004a CA       		.byte	-54
 9094 004b CB       		.byte	-53
 9095 004c CC       		.byte	-52
 9096 004d CD       		.byte	-51
 9097 004e CE       		.byte	-50
 9098 004f CF       		.byte	-49
 9099 0050 D0       		.byte	-48
 9100 0051 D1       		.byte	-47
 9101 0052 D2       		.byte	-46
 9102 0053 D3       		.byte	-45
 9103 0054 D4       		.byte	-44
 9104 0055 D5       		.byte	-43
 9105 0056 D6       		.byte	-42
 9106 0057 D7       		.byte	-41
 9107 0058 D8       		.byte	-40
 9108 0059 D9       		.byte	-39
 9109 005a DA       		.byte	-38
 9110 005b DB       		.byte	-37
 9111 005c DC       		.byte	-36
 9112 005d DD       		.byte	-35
 9113 005e DE       		.byte	-34
 9114 005f DF       		.byte	-33
 9115 0060 E0       		.byte	-32
 9116 0061 E1       		.byte	-31
 9117 0062 E2       		.byte	-30
 9118 0063 E3       		.byte	-29
 9119 0064 E5       		.byte	-27
 9120 0065 E5       		.byte	-27
 9121 0066 E6       		.byte	-26
 9122 0067 E7       		.byte	-25
 9123 0068 E7       		.byte	-25
 9124 0069 E9       		.byte	-23
 9125 006a EA       		.byte	-22
 9126 006b EB       		.byte	-21
 9127 006c ED       		.byte	-19
 9128 006d ED       		.byte	-19
 9129 006e EE       		.byte	-18
 9130 006f EF       		.byte	-17
 9131 0070 F0       		.byte	-16
 9132 0071 F1       		.byte	-15
 9133 0072 F2       		.byte	-14
 9134 0073 F3       		.byte	-13
 9135 0074 F4       		.byte	-12
 9136 0075 F5       		.byte	-11
 9137 0076 F6       		.byte	-10
 9138 0077 F7       		.byte	-9
 9139 0078 F8       		.byte	-8
 9140 0079 F9       		.byte	-7
 9141 007a FA       		.byte	-6
 9142 007b FB       		.byte	-5
 9143 007c FC       		.byte	-4
 9144 007d FD       		.byte	-3
 9145 007e FE       		.byte	-2
 9146 007f FF       		.byte	-1
 9147              		.section	.rodata.str1.4,"aMS",%progbits,1
 9148              		.align	2
ARM GAS  /tmp/cclwbenu.s 			page 262


 9149              	.LC0:
 9150 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 9150      3A3B3C3D 
 9150      3E3F5B5D 
 9150      7C7F00
 9151 000f 00       		.space	1
 9152              	.LC1:
 9153 0010 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 9153      53444F53 
 9153      352E3000 
 9154              	.LC2:
 9155 001c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 9155      414D4520 
 9155      20202046 
 9155      41543332 
 9155      20202000 
 9156              	.LC3:
 9157 0030 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 9157      414D4520 
 9157      20202046 
 9157      41542020 
 9157      20202000 
 9158              		.section	.bss.Files,"aw",%nobits
 9159              		.align	2
 9160              		.set	.LANCHOR0,. + 0
 9163              	Files:
 9164 0000 00000000 		.space	24
 9164      00000000 
 9164      00000000 
 9164      00000000 
 9164      00000000 
 9165              		.section	.bss.Fsid,"aw",%nobits
 9166              		.align	1
 9167              		.set	.LANCHOR3,. + 0
 9170              	Fsid:
 9171 0000 0000     		.space	2
 9172              		.section	.bss.FatFs,"aw",%nobits
 9173              		.align	2
 9174              		.set	.LANCHOR2,. + 0
 9177              	FatFs:
 9178 0000 00000000 		.space	4
 9179              		.text
 9180              	.Letext0:
 9181              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 9182              		.file 3 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_types.h"
 9183              		.file 4 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 9184              		.file 5 "/opt/gcc-arm-none-eabi-4_9-2015q3/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h"
 9185              		.file 6 "Middlewares/Third_Party/FatFs/src/ff.h"
 9186              		.file 7 "Middlewares/Third_Party/FatFs/src/diskio.h"
 9187              		.file 8 "<built-in>"
 9188              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/cclwbenu.s 			page 263


DEFINED SYMBOLS
                            *ABS*:00000000 ff.c
     /tmp/cclwbenu.s:19     .text.mem_cpy:00000000 $t
     /tmp/cclwbenu.s:23     .text.mem_cpy:00000000 mem_cpy
     /tmp/cclwbenu.s:58     .text.mem_set:00000000 $t
     /tmp/cclwbenu.s:62     .text.mem_set:00000000 mem_set
     /tmp/cclwbenu.s:93     .text.mem_cmp:00000000 $t
     /tmp/cclwbenu.s:97     .text.mem_cmp:00000000 mem_cmp
     /tmp/cclwbenu.s:155    .text.chk_chr:00000000 $t
     /tmp/cclwbenu.s:159    .text.chk_chr:00000000 chk_chr
     /tmp/cclwbenu.s:189    .text.chk_lock:00000000 $t
     /tmp/cclwbenu.s:193    .text.chk_lock:00000000 chk_lock
     /tmp/cclwbenu.s:317    .text.chk_lock:00000088 $d
     /tmp/cclwbenu.s:323    .text.enq_lock:00000000 $t
     /tmp/cclwbenu.s:327    .text.enq_lock:00000000 enq_lock
     /tmp/cclwbenu.s:365    .text.enq_lock:00000020 $d
     /tmp/cclwbenu.s:370    .text.inc_lock:00000000 $t
     /tmp/cclwbenu.s:374    .text.inc_lock:00000000 inc_lock
     /tmp/cclwbenu.s:536    .text.inc_lock:000000cc $d
     /tmp/cclwbenu.s:542    .text.dec_lock:00000000 $t
     /tmp/cclwbenu.s:546    .text.dec_lock:00000000 dec_lock
     /tmp/cclwbenu.s:610    .text.dec_lock:00000040 $d
     /tmp/cclwbenu.s:616    .text.clear_lock:00000000 $t
     /tmp/cclwbenu.s:620    .text.clear_lock:00000000 clear_lock
     /tmp/cclwbenu.s:667    .text.clear_lock:0000002c $d
     /tmp/cclwbenu.s:672    .text.clmt_clust:00000000 $t
     /tmp/cclwbenu.s:676    .text.clmt_clust:00000000 clmt_clust
     /tmp/cclwbenu.s:727    .text.ld_clust:00000000 $t
     /tmp/cclwbenu.s:731    .text.ld_clust:00000000 ld_clust
     /tmp/cclwbenu.s:763    .text.st_clust:00000000 $t
     /tmp/cclwbenu.s:767    .text.st_clust:00000000 st_clust
     /tmp/cclwbenu.s:790    .text.get_fileinfo:00000000 $t
     /tmp/cclwbenu.s:794    .text.get_fileinfo:00000000 get_fileinfo
     /tmp/cclwbenu.s:898    .text.create_name:00000000 $t
     /tmp/cclwbenu.s:902    .text.create_name:00000000 create_name
     /tmp/cclwbenu.s:1128   .text.create_name:00000110 $d
     /tmp/cclwbenu.s:1134   .text.get_ldnumber:00000000 $t
     /tmp/cclwbenu.s:1138   .text.get_ldnumber:00000000 get_ldnumber
     /tmp/cclwbenu.s:1247   .text.sync_window:00000000 $t
     /tmp/cclwbenu.s:1251   .text.sync_window:00000000 sync_window
     /tmp/cclwbenu.s:1341   .text.move_window:00000000 $t
     /tmp/cclwbenu.s:1345   .text.move_window:00000000 move_window
     /tmp/cclwbenu.s:1403   .text.check_fs:00000000 $t
     /tmp/cclwbenu.s:1407   .text.check_fs:00000000 check_fs
     /tmp/cclwbenu.s:1489   .text.check_fs:0000008c $d
     /tmp/cclwbenu.s:1495   .text.validate:00000000 $t
     /tmp/cclwbenu.s:1499   .text.validate:00000000 validate
     /tmp/cclwbenu.s:1574   .text.find_volume:00000000 $t
     /tmp/cclwbenu.s:1578   .text.find_volume:00000000 find_volume
     /tmp/cclwbenu.s:2109   .text.find_volume:00000354 $d
     /tmp/cclwbenu.s:2117   .text.find_volume:00000368 $t
     /tmp/cclwbenu.s:2160   .text.sync_fs:00000000 $t
     /tmp/cclwbenu.s:2164   .text.sync_fs:00000000 sync_fs
     /tmp/cclwbenu.s:2270   .text.clust2sect:00000000 $t
     /tmp/cclwbenu.s:2275   .text.clust2sect:00000000 clust2sect
     /tmp/cclwbenu.s:2308   .text.get_fat:00000000 $t
     /tmp/cclwbenu.s:2313   .text.get_fat:00000000 get_fat
ARM GAS  /tmp/cclwbenu.s 			page 264


     /tmp/cclwbenu.s:2501   .text.dir_sdi:00000000 $t
     /tmp/cclwbenu.s:2505   .text.dir_sdi:00000000 dir_sdi
     /tmp/cclwbenu.s:2659   .text.dir_remove:00000000 $t
     /tmp/cclwbenu.s:2663   .text.dir_remove:00000000 dir_remove
     /tmp/cclwbenu.s:2718   .text.put_fat:00000000 $t
     /tmp/cclwbenu.s:2723   .text.put_fat:00000000 put_fat
     /tmp/cclwbenu.s:2918   .text.create_chain:00000000 $t
     /tmp/cclwbenu.s:2922   .text.create_chain:00000000 create_chain
     /tmp/cclwbenu.s:3104   .text.dir_next:00000000 $t
     /tmp/cclwbenu.s:3108   .text.dir_next:00000000 dir_next
     /tmp/cclwbenu.s:3338   .text.dir_find:00000000 $t
     /tmp/cclwbenu.s:3342   .text.dir_find:00000000 dir_find
     /tmp/cclwbenu.s:3420   .text.follow_path:00000000 $t
     /tmp/cclwbenu.s:3424   .text.follow_path:00000000 follow_path
     /tmp/cclwbenu.s:3545   .text.dir_alloc:00000000 $t
     /tmp/cclwbenu.s:3549   .text.dir_alloc:00000000 dir_alloc
     /tmp/cclwbenu.s:3629   .text.dir_register:00000000 $t
     /tmp/cclwbenu.s:3633   .text.dir_register:00000000 dir_register
     /tmp/cclwbenu.s:3690   .text.dir_read:00000000 $t
     /tmp/cclwbenu.s:3694   .text.dir_read:00000000 dir_read
     /tmp/cclwbenu.s:3791   .text.remove_chain:00000000 $t
     /tmp/cclwbenu.s:3795   .text.remove_chain:00000000 remove_chain
     /tmp/cclwbenu.s:3897   .text.f_mount:00000000 $t
     /tmp/cclwbenu.s:3902   .text.f_mount:00000000 f_mount
     /tmp/cclwbenu.s:3997   .text.f_mount:0000005c $d
     /tmp/cclwbenu.s:4002   .text.f_open:00000000 $t
     /tmp/cclwbenu.s:4007   .text.f_open:00000000 f_open
     /tmp/cclwbenu.s:4319   .text.f_read:00000000 $t
     /tmp/cclwbenu.s:4324   .text.f_read:00000000 f_read
     /tmp/cclwbenu.s:4609   .text.f_write:00000000 $t
     /tmp/cclwbenu.s:4614   .text.f_write:00000000 f_write
     /tmp/cclwbenu.s:4934   .text.putc_bfd:00000000 $t
     /tmp/cclwbenu.s:4938   .text.putc_bfd:00000000 putc_bfd
     /tmp/cclwbenu.s:5017   .text.f_sync:00000000 $t
     /tmp/cclwbenu.s:5022   .text.f_sync:00000000 f_sync
     /tmp/cclwbenu.s:5142   .text.f_close:00000000 $t
     /tmp/cclwbenu.s:5147   .text.f_close:00000000 f_close
     /tmp/cclwbenu.s:5194   .text.f_lseek:00000000 $t
     /tmp/cclwbenu.s:5199   .text.f_lseek:00000000 f_lseek
     /tmp/cclwbenu.s:5708   .text.f_opendir:00000000 $t
     /tmp/cclwbenu.s:5713   .text.f_opendir:00000000 f_opendir
     /tmp/cclwbenu.s:5850   .text.f_closedir:00000000 $t
     /tmp/cclwbenu.s:5855   .text.f_closedir:00000000 f_closedir
     /tmp/cclwbenu.s:5898   .text.f_readdir:00000000 $t
     /tmp/cclwbenu.s:5903   .text.f_readdir:00000000 f_readdir
     /tmp/cclwbenu.s:6004   .text.f_stat:00000000 $t
     /tmp/cclwbenu.s:6009   .text.f_stat:00000000 f_stat
     /tmp/cclwbenu.s:6079   .text.f_getfree:00000000 $t
     /tmp/cclwbenu.s:6084   .text.f_getfree:00000000 f_getfree
     /tmp/cclwbenu.s:6282   .text.f_truncate:00000000 $t
     /tmp/cclwbenu.s:6287   .text.f_truncate:00000000 f_truncate
     /tmp/cclwbenu.s:6434   .text.f_unlink:00000000 $t
     /tmp/cclwbenu.s:6439   .text.f_unlink:00000000 f_unlink
     /tmp/cclwbenu.s:6609   .text.f_mkdir:00000000 $t
     /tmp/cclwbenu.s:6614   .text.f_mkdir:00000000 f_mkdir
     /tmp/cclwbenu.s:6883   .text.f_chmod:00000000 $t
     /tmp/cclwbenu.s:6888   .text.f_chmod:00000000 f_chmod
ARM GAS  /tmp/cclwbenu.s 			page 265


     /tmp/cclwbenu.s:6976   .text.f_rename:00000000 $t
     /tmp/cclwbenu.s:6981   .text.f_rename:00000000 f_rename
     /tmp/cclwbenu.s:7196   .text.f_utime:00000000 $t
     /tmp/cclwbenu.s:7201   .text.f_utime:00000000 f_utime
     /tmp/cclwbenu.s:7287   .text.f_mkfs:00000000 $t
     /tmp/cclwbenu.s:7292   .text.f_mkfs:00000000 f_mkfs
     /tmp/cclwbenu.s:7755   .text.f_mkfs:000002c4 $d
     /tmp/cclwbenu.s:7761   .text.f_mkfs:000002d4 $t
     /tmp/cclwbenu.s:8193   .text.f_mkfs:000005c4 $d
     /tmp/cclwbenu.s:8200   .text.f_gets:00000000 $t
     /tmp/cclwbenu.s:8205   .text.f_gets:00000000 f_gets
     /tmp/cclwbenu.s:8298   .text.f_putc:00000000 $t
     /tmp/cclwbenu.s:8303   .text.f_putc:00000000 f_putc
     /tmp/cclwbenu.s:8370   .text.f_puts:00000000 $t
     /tmp/cclwbenu.s:8375   .text.f_puts:00000000 f_puts
     /tmp/cclwbenu.s:8451   .text.f_printf:00000000 $t
     /tmp/cclwbenu.s:8456   .text.f_printf:00000000 f_printf
     /tmp/cclwbenu.s:8616   .text.f_printf:000000a2 $d
     /tmp/cclwbenu.s:8980   .rodata.cst.7980:00000000 $d
     /tmp/cclwbenu.s:8984   .rodata.cst.7980:00000000 cst.7980
     /tmp/cclwbenu.s:8997   .rodata.vst.7979:00000000 $d
     /tmp/cclwbenu.s:9001   .rodata.vst.7979:00000000 vst.7979
     /tmp/cclwbenu.s:9014   .rodata.ExCvt:00000000 $d
     /tmp/cclwbenu.s:9018   .rodata.ExCvt:00000000 ExCvt
     /tmp/cclwbenu.s:9148   .rodata.str1.4:00000000 $d
     /tmp/cclwbenu.s:9159   .bss.Files:00000000 $d
     /tmp/cclwbenu.s:9163   .bss.Files:00000000 Files
     /tmp/cclwbenu.s:9166   .bss.Fsid:00000000 $d
     /tmp/cclwbenu.s:9170   .bss.Fsid:00000000 Fsid
     /tmp/cclwbenu.s:9173   .bss.FatFs:00000000 $d
     /tmp/cclwbenu.s:9177   .bss.FatFs:00000000 FatFs
                     .debug_frame:00000010 $d
     /tmp/cclwbenu.s:8639   .text.f_printf:000000b9 $d
     /tmp/cclwbenu.s:8639   .text.f_printf:000000ba $t

UNDEFINED SYMBOLS
disk_write
disk_read
disk_status
disk_initialize
disk_ioctl
get_fattime
