ARM GAS  /tmp/cclEipnc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"user_diskio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USER_initialize,"ax",%progbits
  19              		.align	2
  20              		.global	USER_initialize
  21              		.thumb
  22              		.thumb_func
  24              	USER_initialize:
  25              	.LFB63:
  26              		.file 1 "FATFS/Target/user_diskio.c"
   1:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN Header */
   2:FATFS/Target/user_diskio.c **** /**
   3:FATFS/Target/user_diskio.c ****  ******************************************************************************
   4:FATFS/Target/user_diskio.c ****   * @file    user_diskio.c
   5:FATFS/Target/user_diskio.c ****   * @brief   This file includes a diskio driver skeleton to be completed by the user.
   6:FATFS/Target/user_diskio.c ****   ******************************************************************************
   7:FATFS/Target/user_diskio.c ****   * This notice applies to any and all portions of this file
   8:FATFS/Target/user_diskio.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:FATFS/Target/user_diskio.c ****   * USER CODE END. Other portions of this file, whether 
  10:FATFS/Target/user_diskio.c ****   * inserted by the user or by software development tools
  11:FATFS/Target/user_diskio.c ****   * are owned by their respective copyright owners.
  12:FATFS/Target/user_diskio.c ****   *
  13:FATFS/Target/user_diskio.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:FATFS/Target/user_diskio.c ****   * All rights reserved.
  15:FATFS/Target/user_diskio.c ****   *
  16:FATFS/Target/user_diskio.c ****   * Redistribution and use in source and binary forms, with or without 
  17:FATFS/Target/user_diskio.c ****   * modification, are permitted, provided that the following conditions are met:
  18:FATFS/Target/user_diskio.c ****   *
  19:FATFS/Target/user_diskio.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:FATFS/Target/user_diskio.c ****   *    this list of conditions and the following disclaimer.
  21:FATFS/Target/user_diskio.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:FATFS/Target/user_diskio.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:FATFS/Target/user_diskio.c ****   *    and/or other materials provided with the distribution.
  24:FATFS/Target/user_diskio.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:FATFS/Target/user_diskio.c ****   *    contributors to this software may be used to endorse or promote products 
  26:FATFS/Target/user_diskio.c ****   *    derived from this software without specific written permission.
  27:FATFS/Target/user_diskio.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:FATFS/Target/user_diskio.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:FATFS/Target/user_diskio.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:FATFS/Target/user_diskio.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:FATFS/Target/user_diskio.c ****   *    this license is void and will automatically terminate your rights under 
  32:FATFS/Target/user_diskio.c ****   *    this license. 
ARM GAS  /tmp/cclEipnc.s 			page 2


  33:FATFS/Target/user_diskio.c ****   *
  34:FATFS/Target/user_diskio.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:FATFS/Target/user_diskio.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:FATFS/Target/user_diskio.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:FATFS/Target/user_diskio.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:FATFS/Target/user_diskio.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:FATFS/Target/user_diskio.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:FATFS/Target/user_diskio.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:FATFS/Target/user_diskio.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:FATFS/Target/user_diskio.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:FATFS/Target/user_diskio.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:FATFS/Target/user_diskio.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:FATFS/Target/user_diskio.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:FATFS/Target/user_diskio.c ****   *
  47:FATFS/Target/user_diskio.c ****   ******************************************************************************
  48:FATFS/Target/user_diskio.c ****   */
  49:FATFS/Target/user_diskio.c ****  /* USER CODE END Header */
  50:FATFS/Target/user_diskio.c **** 
  51:FATFS/Target/user_diskio.c **** #ifdef USE_OBSOLETE_USER_CODE_SECTION_0
  52:FATFS/Target/user_diskio.c **** /* 
  53:FATFS/Target/user_diskio.c ****  * Warning: the user section 0 is no more in use (starting from CubeMx version 4.16.0)
  54:FATFS/Target/user_diskio.c ****  * To be suppressed in the future. 
  55:FATFS/Target/user_diskio.c ****  * Kept to ensure backward compatibility with previous CubeMx versions when 
  56:FATFS/Target/user_diskio.c ****  * migrating projects. 
  57:FATFS/Target/user_diskio.c ****  * User code previously added there should be copied in the new user sections before 
  58:FATFS/Target/user_diskio.c ****  * the section contents can be deleted.
  59:FATFS/Target/user_diskio.c ****  */
  60:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN 0 */
  61:FATFS/Target/user_diskio.c **** /* USER CODE END 0 */
  62:FATFS/Target/user_diskio.c **** #endif
  63:FATFS/Target/user_diskio.c **** 
  64:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN DECL */
  65:FATFS/Target/user_diskio.c **** 
  66:FATFS/Target/user_diskio.c **** /* Includes ------------------------------------------------------------------*/
  67:FATFS/Target/user_diskio.c **** #include <string.h>
  68:FATFS/Target/user_diskio.c **** #include "ff_gen_drv.h"
  69:FATFS/Target/user_diskio.c **** 
  70:FATFS/Target/user_diskio.c **** /* Private typedef -----------------------------------------------------------*/
  71:FATFS/Target/user_diskio.c **** /* Private define ------------------------------------------------------------*/
  72:FATFS/Target/user_diskio.c **** 
  73:FATFS/Target/user_diskio.c **** /* Private variables ---------------------------------------------------------*/
  74:FATFS/Target/user_diskio.c **** /* Disk status */
  75:FATFS/Target/user_diskio.c **** static volatile DSTATUS Stat = STA_NOINIT;
  76:FATFS/Target/user_diskio.c **** 
  77:FATFS/Target/user_diskio.c **** /* USER CODE END DECL */
  78:FATFS/Target/user_diskio.c **** 
  79:FATFS/Target/user_diskio.c **** /* Private function prototypes -----------------------------------------------*/
  80:FATFS/Target/user_diskio.c **** DSTATUS USER_initialize (BYTE pdrv);
  81:FATFS/Target/user_diskio.c **** DSTATUS USER_status (BYTE pdrv);
  82:FATFS/Target/user_diskio.c **** DRESULT USER_read (BYTE pdrv, BYTE *buff, DWORD sector, UINT count);
  83:FATFS/Target/user_diskio.c **** #if _USE_WRITE == 1
  84:FATFS/Target/user_diskio.c ****   DRESULT USER_write (BYTE pdrv, const BYTE *buff, DWORD sector, UINT count);  
  85:FATFS/Target/user_diskio.c **** #endif /* _USE_WRITE == 1 */
  86:FATFS/Target/user_diskio.c **** #if _USE_IOCTL == 1
  87:FATFS/Target/user_diskio.c ****   DRESULT USER_ioctl (BYTE pdrv, BYTE cmd, void *buff);
  88:FATFS/Target/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
  89:FATFS/Target/user_diskio.c **** 
ARM GAS  /tmp/cclEipnc.s 			page 3


  90:FATFS/Target/user_diskio.c **** Diskio_drvTypeDef  USER_Driver =
  91:FATFS/Target/user_diskio.c **** {
  92:FATFS/Target/user_diskio.c ****   USER_initialize,
  93:FATFS/Target/user_diskio.c ****   USER_status,
  94:FATFS/Target/user_diskio.c ****   USER_read, 
  95:FATFS/Target/user_diskio.c **** #if  _USE_WRITE
  96:FATFS/Target/user_diskio.c ****   USER_write,
  97:FATFS/Target/user_diskio.c **** #endif  /* _USE_WRITE == 1 */  
  98:FATFS/Target/user_diskio.c **** #if  _USE_IOCTL == 1
  99:FATFS/Target/user_diskio.c ****   USER_ioctl,
 100:FATFS/Target/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
 101:FATFS/Target/user_diskio.c **** };
 102:FATFS/Target/user_diskio.c **** 
 103:FATFS/Target/user_diskio.c **** /* Private functions ---------------------------------------------------------*/
 104:FATFS/Target/user_diskio.c **** 
 105:FATFS/Target/user_diskio.c **** /**
 106:FATFS/Target/user_diskio.c ****   * @brief  Initializes a Drive
 107:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 108:FATFS/Target/user_diskio.c ****   * @retval DSTATUS: Operation status
 109:FATFS/Target/user_diskio.c ****   */
 110:FATFS/Target/user_diskio.c **** DSTATUS USER_initialize (
 111:FATFS/Target/user_diskio.c **** 	BYTE pdrv           /* Physical drive nmuber to identify the drive */
 112:FATFS/Target/user_diskio.c **** )
 113:FATFS/Target/user_diskio.c **** {
  27              		.loc 1 113 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 114:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN INIT */
 115:FATFS/Target/user_diskio.c ****     Stat = STA_NOINIT;
  33              		.loc 1 115 0
  34 0000 024B     		ldr	r3, .L2
  35 0002 0122     		movs	r2, #1
  36 0004 1A70     		strb	r2, [r3]
 116:FATFS/Target/user_diskio.c ****     return Stat;
  37              		.loc 1 116 0
  38 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  39              	.LVL1:
 117:FATFS/Target/user_diskio.c ****   /* USER CODE END INIT */
 118:FATFS/Target/user_diskio.c **** }
  40              		.loc 1 118 0
  41 0008 7047     		bx	lr
  42              	.L3:
  43 000a 00BF     		.align	2
  44              	.L2:
  45 000c 00000000 		.word	.LANCHOR0
  46              		.cfi_endproc
  47              	.LFE63:
  49              		.section	.text.USER_status,"ax",%progbits
  50              		.align	2
  51              		.global	USER_status
  52              		.thumb
  53              		.thumb_func
  55              	USER_status:
  56              	.LFB64:
ARM GAS  /tmp/cclEipnc.s 			page 4


 119:FATFS/Target/user_diskio.c ****  
 120:FATFS/Target/user_diskio.c **** /**
 121:FATFS/Target/user_diskio.c ****   * @brief  Gets Disk Status 
 122:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 123:FATFS/Target/user_diskio.c ****   * @retval DSTATUS: Operation status
 124:FATFS/Target/user_diskio.c ****   */
 125:FATFS/Target/user_diskio.c **** DSTATUS USER_status (
 126:FATFS/Target/user_diskio.c **** 	BYTE pdrv       /* Physical drive number to identify the drive */
 127:FATFS/Target/user_diskio.c **** )
 128:FATFS/Target/user_diskio.c **** {
  57              		.loc 1 128 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62              	.LVL2:
 129:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN STATUS */
 130:FATFS/Target/user_diskio.c ****     Stat = STA_NOINIT;
  63              		.loc 1 130 0
  64 0000 024B     		ldr	r3, .L5
  65 0002 0122     		movs	r2, #1
  66 0004 1A70     		strb	r2, [r3]
 131:FATFS/Target/user_diskio.c ****     return Stat;
  67              		.loc 1 131 0
  68 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  69              	.LVL3:
 132:FATFS/Target/user_diskio.c ****   /* USER CODE END STATUS */
 133:FATFS/Target/user_diskio.c **** }
  70              		.loc 1 133 0
  71 0008 7047     		bx	lr
  72              	.L6:
  73 000a 00BF     		.align	2
  74              	.L5:
  75 000c 00000000 		.word	.LANCHOR0
  76              		.cfi_endproc
  77              	.LFE64:
  79              		.section	.text.USER_read,"ax",%progbits
  80              		.align	2
  81              		.global	USER_read
  82              		.thumb
  83              		.thumb_func
  85              	USER_read:
  86              	.LFB65:
 134:FATFS/Target/user_diskio.c **** 
 135:FATFS/Target/user_diskio.c **** /**
 136:FATFS/Target/user_diskio.c ****   * @brief  Reads Sector(s) 
 137:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 138:FATFS/Target/user_diskio.c ****   * @param  *buff: Data buffer to store read data
 139:FATFS/Target/user_diskio.c ****   * @param  sector: Sector address (LBA)
 140:FATFS/Target/user_diskio.c ****   * @param  count: Number of sectors to read (1..128)
 141:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 142:FATFS/Target/user_diskio.c ****   */
 143:FATFS/Target/user_diskio.c **** DRESULT USER_read (
 144:FATFS/Target/user_diskio.c **** 	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
 145:FATFS/Target/user_diskio.c **** 	BYTE *buff,     /* Data buffer to store read data */
 146:FATFS/Target/user_diskio.c **** 	DWORD sector,   /* Sector address in LBA */
 147:FATFS/Target/user_diskio.c **** 	UINT count      /* Number of sectors to read */
ARM GAS  /tmp/cclEipnc.s 			page 5


 148:FATFS/Target/user_diskio.c **** )
 149:FATFS/Target/user_diskio.c **** {
  87              		.loc 1 149 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL4:
 150:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN READ */
 151:FATFS/Target/user_diskio.c ****     return RES_OK;
 152:FATFS/Target/user_diskio.c ****   /* USER CODE END READ */
 153:FATFS/Target/user_diskio.c **** }
  93              		.loc 1 153 0
  94 0000 0020     		movs	r0, #0
  95              	.LVL5:
  96 0002 7047     		bx	lr
  97              		.cfi_endproc
  98              	.LFE65:
 100              		.section	.text.USER_write,"ax",%progbits
 101              		.align	2
 102              		.global	USER_write
 103              		.thumb
 104              		.thumb_func
 106              	USER_write:
 107              	.LFB66:
 154:FATFS/Target/user_diskio.c **** 
 155:FATFS/Target/user_diskio.c **** /**
 156:FATFS/Target/user_diskio.c ****   * @brief  Writes Sector(s)  
 157:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 158:FATFS/Target/user_diskio.c ****   * @param  *buff: Data to be written
 159:FATFS/Target/user_diskio.c ****   * @param  sector: Sector address (LBA)
 160:FATFS/Target/user_diskio.c ****   * @param  count: Number of sectors to write (1..128)
 161:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 162:FATFS/Target/user_diskio.c ****   */
 163:FATFS/Target/user_diskio.c **** #if _USE_WRITE == 1
 164:FATFS/Target/user_diskio.c **** DRESULT USER_write (
 165:FATFS/Target/user_diskio.c **** 	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
 166:FATFS/Target/user_diskio.c **** 	const BYTE *buff,   /* Data to be written */
 167:FATFS/Target/user_diskio.c **** 	DWORD sector,       /* Sector address in LBA */
 168:FATFS/Target/user_diskio.c **** 	UINT count          /* Number of sectors to write */
 169:FATFS/Target/user_diskio.c **** )
 170:FATFS/Target/user_diskio.c **** { 
 108              		.loc 1 170 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113              	.LVL6:
 171:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN WRITE */
 172:FATFS/Target/user_diskio.c ****   /* USER CODE HERE */
 173:FATFS/Target/user_diskio.c ****     return RES_OK;
 174:FATFS/Target/user_diskio.c ****   /* USER CODE END WRITE */
 175:FATFS/Target/user_diskio.c **** }
 114              		.loc 1 175 0
 115 0000 0020     		movs	r0, #0
 116              	.LVL7:
 117 0002 7047     		bx	lr
ARM GAS  /tmp/cclEipnc.s 			page 6


 118              		.cfi_endproc
 119              	.LFE66:
 121              		.section	.text.USER_ioctl,"ax",%progbits
 122              		.align	2
 123              		.global	USER_ioctl
 124              		.thumb
 125              		.thumb_func
 127              	USER_ioctl:
 128              	.LFB67:
 176:FATFS/Target/user_diskio.c **** #endif /* _USE_WRITE == 1 */
 177:FATFS/Target/user_diskio.c **** 
 178:FATFS/Target/user_diskio.c **** /**
 179:FATFS/Target/user_diskio.c ****   * @brief  I/O control operation  
 180:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 181:FATFS/Target/user_diskio.c ****   * @param  cmd: Control code
 182:FATFS/Target/user_diskio.c ****   * @param  *buff: Buffer to send/receive control data
 183:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 184:FATFS/Target/user_diskio.c ****   */
 185:FATFS/Target/user_diskio.c **** #if _USE_IOCTL == 1
 186:FATFS/Target/user_diskio.c **** DRESULT USER_ioctl (
 187:FATFS/Target/user_diskio.c **** 	BYTE pdrv,      /* Physical drive nmuber (0..) */
 188:FATFS/Target/user_diskio.c **** 	BYTE cmd,       /* Control code */
 189:FATFS/Target/user_diskio.c **** 	void *buff      /* Buffer to send/receive control data */
 190:FATFS/Target/user_diskio.c **** )
 191:FATFS/Target/user_diskio.c **** {
 129              		.loc 1 191 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL8:
 192:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN IOCTL */
 193:FATFS/Target/user_diskio.c ****     DRESULT res = RES_ERROR;
 194:FATFS/Target/user_diskio.c ****     return res;
 195:FATFS/Target/user_diskio.c ****   /* USER CODE END IOCTL */
 196:FATFS/Target/user_diskio.c **** }
 135              		.loc 1 196 0
 136 0000 0120     		movs	r0, #1
 137              	.LVL9:
 138 0002 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE67:
 142              		.global	USER_Driver
 143              		.section	.data.USER_Driver,"aw",%progbits
 144              		.align	2
 147              	USER_Driver:
 148 0000 00000000 		.word	USER_initialize
 149 0004 00000000 		.word	USER_status
 150 0008 00000000 		.word	USER_read
 151 000c 00000000 		.word	USER_write
 152 0010 00000000 		.word	USER_ioctl
 153              		.section	.data.Stat,"aw",%progbits
 154              		.set	.LANCHOR0,. + 0
 157              	Stat:
 158 0000 01       		.byte	1
 159              		.text
 160              	.Letext0:
ARM GAS  /tmp/cclEipnc.s 			page 7


 161              		.file 2 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_types.h"
 162              		.file 3 "Middlewares/Third_Party/FatFs/src/integer.h"
 163              		.file 4 "Middlewares/Third_Party/FatFs/src/diskio.h"
 164              		.file 5 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 165              		.file 6 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 166              		.file 7 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/cclEipnc.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 user_diskio.c
     /tmp/cclEipnc.s:19     .text.USER_initialize:00000000 $t
     /tmp/cclEipnc.s:24     .text.USER_initialize:00000000 USER_initialize
     /tmp/cclEipnc.s:45     .text.USER_initialize:0000000c $d
     /tmp/cclEipnc.s:50     .text.USER_status:00000000 $t
     /tmp/cclEipnc.s:55     .text.USER_status:00000000 USER_status
     /tmp/cclEipnc.s:75     .text.USER_status:0000000c $d
     /tmp/cclEipnc.s:80     .text.USER_read:00000000 $t
     /tmp/cclEipnc.s:85     .text.USER_read:00000000 USER_read
     /tmp/cclEipnc.s:101    .text.USER_write:00000000 $t
     /tmp/cclEipnc.s:106    .text.USER_write:00000000 USER_write
     /tmp/cclEipnc.s:122    .text.USER_ioctl:00000000 $t
     /tmp/cclEipnc.s:127    .text.USER_ioctl:00000000 USER_ioctl
     /tmp/cclEipnc.s:147    .data.USER_Driver:00000000 USER_Driver
     /tmp/cclEipnc.s:144    .data.USER_Driver:00000000 $d
     /tmp/cclEipnc.s:157    .data.Stat:00000000 Stat
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
