ARM GAS  /tmp/ccvIbNuD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_timebase_TIM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_InitTick,"ax",%progbits
  19              		.align	2
  20              		.global	HAL_InitTick
  21              		.thumb
  22              		.thumb_func
  24              	HAL_InitTick:
  25              	.LFB63:
  26              		.file 1 "Core/Src/stm32f1xx_hal_timebase_TIM.c"
   1:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /**
   2:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   ******************************************************************************
   3:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @file    stm32f1xx_hal_timebase_TIM.c 
   4:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief   HAL time base based on the hardware TIM.
   5:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   ******************************************************************************
   6:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * This notice applies to any and all portions of this file
   7:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * USER CODE END. Other portions of this file, whether 
   9:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * inserted by the user or by software development tools
  10:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * are owned by their respective copyright owners.
  11:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *
  12:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * All rights reserved.
  14:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *
  15:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *
  18:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer.
  20:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *    and/or other materials provided with the distribution.
  23:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *    derived from this software without specific written permission.
  26:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *    this license is void and will automatically terminate your rights under 
  31:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *    this license. 
  32:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *
ARM GAS  /tmp/ccvIbNuD.s 			page 2


  33:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *
  46:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   ******************************************************************************
  47:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   */
  48:Core/Src/stm32f1xx_hal_timebase_TIM.c **** 
  49:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /* Includes ------------------------------------------------------------------*/
  50:Core/Src/stm32f1xx_hal_timebase_TIM.c **** #include "stm32f1xx_hal.h"
  51:Core/Src/stm32f1xx_hal_timebase_TIM.c **** #include "stm32f1xx_hal_tim.h"
  52:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /** @addtogroup STM32F7xx_HAL_Examples
  53:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @{
  54:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   */
  55:Core/Src/stm32f1xx_hal_timebase_TIM.c **** 
  56:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /** @addtogroup HAL_TimeBase
  57:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @{
  58:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   */ 
  59:Core/Src/stm32f1xx_hal_timebase_TIM.c **** 
  60:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /* Private typedef -----------------------------------------------------------*/
  61:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /* Private define ------------------------------------------------------------*/
  62:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /* Private macro -------------------------------------------------------------*/
  63:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /* Private variables ---------------------------------------------------------*/
  64:Core/Src/stm32f1xx_hal_timebase_TIM.c **** TIM_HandleTypeDef        htim1; 
  65:Core/Src/stm32f1xx_hal_timebase_TIM.c **** uint32_t                 uwIncrementState = 0;
  66:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /* Private function prototypes -----------------------------------------------*/
  67:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /* Private functions ---------------------------------------------------------*/
  68:Core/Src/stm32f1xx_hal_timebase_TIM.c **** 
  69:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /**
  70:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief  This function configures the TIM1 as a time base source. 
  71:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  72:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *         Tick interrupt priority. 
  73:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @note   This function is called  automatically at the beginning of program after
  74:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  75:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @param  TickPriority: Tick interrupt priorty.
  76:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @retval HAL status
  77:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   */
  78:Core/Src/stm32f1xx_hal_timebase_TIM.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  79:Core/Src/stm32f1xx_hal_timebase_TIM.c **** {
  27              		.loc 1 79 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/ccvIbNuD.s 			page 3


  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
  39 0004 0146     		mov	r1, r0
  40              	.LVL1:
  80:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   RCC_ClkInitTypeDef    clkconfig;
  81:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   uint32_t              uwTimclock = 0;
  82:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   uint32_t              uwPrescalerValue = 0;
  83:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   uint32_t              pFLatency;
  84:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   
  85:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /*Configure the TIM1 IRQ priority */
  86:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   HAL_NVIC_SetPriority(TIM1_UP_IRQn, TickPriority ,0); 
  41              		.loc 1 86 0
  42 0006 1920     		movs	r0, #25
  43              	.LVL2:
  44 0008 0022     		movs	r2, #0
  45 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  46              	.LVL3:
  87:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   
  88:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Enable the TIM1 global Interrupt */
  89:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   HAL_NVIC_EnableIRQ(TIM1_UP_IRQn); 
  47              		.loc 1 89 0
  48 000e 1920     		movs	r0, #25
  49 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  50              	.LVL4:
  51              	.LBB2:
  90:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   
  91:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Enable TIM1 clock */
  92:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  52              		.loc 1 92 0
  53 0014 144B     		ldr	r3, .L5
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F40062 		orr	r2, r2, #2048
  56 001c 9A61     		str	r2, [r3, #24]
  57 001e 9B69     		ldr	r3, [r3, #24]
  58 0020 03F40063 		and	r3, r3, #2048
  59 0024 0193     		str	r3, [sp, #4]
  60 0026 019B     		ldr	r3, [sp, #4]
  61              	.LBE2:
  93:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   
  94:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Get clock configuration */
  95:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  62              		.loc 1 95 0
  63 0028 03A8     		add	r0, sp, #12
  64 002a 02A9     		add	r1, sp, #8
  65 002c FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  66              	.LVL5:
  96:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   
  97:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Compute TIM1 clock */
  98:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   uwTimclock = HAL_RCC_GetPCLK2Freq();
  67              		.loc 1 98 0
  68 0030 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  69              	.LVL6:
  99:Core/Src/stm32f1xx_hal_timebase_TIM.c ****    
 100:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
 101:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  70              		.loc 1 101 0
  71 0034 0D4B     		ldr	r3, .L5+4
ARM GAS  /tmp/ccvIbNuD.s 			page 4


  72 0036 A3FB0023 		umull	r2, r3, r3, r0
  73 003a 9B0C     		lsrs	r3, r3, #18
  74 003c 013B     		subs	r3, r3, #1
  75              	.LVL7:
 102:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   
 103:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Initialize TIM1 */
 104:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Instance = TIM1;
  76              		.loc 1 104 0
  77 003e 0C48     		ldr	r0, .L5+8
  78              	.LVL8:
  79 0040 0C4A     		ldr	r2, .L5+12
  80 0042 0260     		str	r2, [r0]
 105:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   
 106:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Initialize TIMx peripheral as follow:
 107:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
 108:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
 109:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   + ClockDivision = 0
 110:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   + Counter direction = Up
 111:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   */
 112:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.Period = (1000000 / 1000) - 1;
  81              		.loc 1 112 0
  82 0044 40F2E732 		movw	r2, #999
  83 0048 C260     		str	r2, [r0, #12]
 113:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.Prescaler = uwPrescalerValue;
  84              		.loc 1 113 0
  85 004a 4360     		str	r3, [r0, #4]
 114:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.ClockDivision = 0;
  86              		.loc 1 114 0
  87 004c 0023     		movs	r3, #0
  88              	.LVL9:
  89 004e 0361     		str	r3, [r0, #16]
 115:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  90              		.loc 1 115 0
  91 0050 8360     		str	r3, [r0, #8]
 116:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
  92              		.loc 1 116 0
  93 0052 FFF7FEFF 		bl	HAL_TIM_Base_Init
  94              	.LVL10:
  95 0056 18B9     		cbnz	r0, .L3
 117:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   {
 118:Core/Src/stm32f1xx_hal_timebase_TIM.c ****     /* Start the TIM time Base generation in interrupt mode */
 119:Core/Src/stm32f1xx_hal_timebase_TIM.c ****     return HAL_TIM_Base_Start_IT(&htim1);
  96              		.loc 1 119 0
  97 0058 0548     		ldr	r0, .L5+8
  98 005a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  99              	.LVL11:
 100 005e 00E0     		b	.L2
 101              	.L3:
 120:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   }
 121:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   
 122:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Return function status */
 123:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   return HAL_ERROR;
 102              		.loc 1 123 0
 103 0060 0120     		movs	r0, #1
 104              	.L2:
 124:Core/Src/stm32f1xx_hal_timebase_TIM.c **** }
 105              		.loc 1 124 0
ARM GAS  /tmp/ccvIbNuD.s 			page 5


 106 0062 09B0     		add	sp, sp, #36
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 4
 109              		@ sp needed
 110 0064 5DF804FB 		ldr	pc, [sp], #4
 111              	.L6:
 112              		.align	2
 113              	.L5:
 114 0068 00100240 		.word	1073876992
 115 006c 83DE1B43 		.word	1125899907
 116 0070 00000000 		.word	htim1
 117 0074 002C0140 		.word	1073818624
 118              		.cfi_endproc
 119              	.LFE63:
 121              		.section	.text.HAL_SuspendTick,"ax",%progbits
 122              		.align	2
 123              		.global	HAL_SuspendTick
 124              		.thumb
 125              		.thumb_func
 127              	HAL_SuspendTick:
 128              	.LFB64:
 125:Core/Src/stm32f1xx_hal_timebase_TIM.c **** 
 126:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /**
 127:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief  Suspend Tick increment.
 128:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
 129:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @param  None
 130:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @retval None
 131:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   */
 132:Core/Src/stm32f1xx_hal_timebase_TIM.c **** void HAL_SuspendTick(void)
 133:Core/Src/stm32f1xx_hal_timebase_TIM.c **** {
 129              		.loc 1 133 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Disable TIM1 update Interrupt */
 135:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);                                                  
 134              		.loc 1 135 0
 135 0000 034B     		ldr	r3, .L8
 136 0002 1A68     		ldr	r2, [r3]
 137 0004 D368     		ldr	r3, [r2, #12]
 138 0006 23F00103 		bic	r3, r3, #1
 139 000a D360     		str	r3, [r2, #12]
 140 000c 7047     		bx	lr
 141              	.L9:
 142 000e 00BF     		.align	2
 143              	.L8:
 144 0010 00000000 		.word	htim1
 145              		.cfi_endproc
 146              	.LFE64:
 148              		.section	.text.HAL_ResumeTick,"ax",%progbits
 149              		.align	2
 150              		.global	HAL_ResumeTick
 151              		.thumb
 152              		.thumb_func
 154              	HAL_ResumeTick:
 155              	.LFB65:
ARM GAS  /tmp/ccvIbNuD.s 			page 6


 136:Core/Src/stm32f1xx_hal_timebase_TIM.c **** }
 137:Core/Src/stm32f1xx_hal_timebase_TIM.c **** 
 138:Core/Src/stm32f1xx_hal_timebase_TIM.c **** /**
 139:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief  Resume Tick increment.
 140:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
 141:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @param  None
 142:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   * @retval None
 143:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   */
 144:Core/Src/stm32f1xx_hal_timebase_TIM.c **** void HAL_ResumeTick(void)
 145:Core/Src/stm32f1xx_hal_timebase_TIM.c **** {
 156              		.loc 1 145 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 146:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   /* Enable TIM1 Update interrupt */
 147:Core/Src/stm32f1xx_hal_timebase_TIM.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 161              		.loc 1 147 0
 162 0000 034B     		ldr	r3, .L11
 163 0002 1A68     		ldr	r2, [r3]
 164 0004 D368     		ldr	r3, [r2, #12]
 165 0006 43F00103 		orr	r3, r3, #1
 166 000a D360     		str	r3, [r2, #12]
 167 000c 7047     		bx	lr
 168              	.L12:
 169 000e 00BF     		.align	2
 170              	.L11:
 171 0010 00000000 		.word	htim1
 172              		.cfi_endproc
 173              	.LFE65:
 175              		.global	uwIncrementState
 176              		.comm	htim1,64,4
 177              		.section	.bss.uwIncrementState,"aw",%nobits
 178              		.align	2
 181              	uwIncrementState:
 182 0000 00000000 		.space	4
 183              		.text
 184              	.Letext0:
 185              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 186              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 187              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 188              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 189              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 190              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 191              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 192              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 193              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccvIbNuD.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_timebase_TIM.c
     /tmp/ccvIbNuD.s:19     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccvIbNuD.s:24     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccvIbNuD.s:114    .text.HAL_InitTick:0000000000000068 $d
                            *COM*:0000000000000040 htim1
     /tmp/ccvIbNuD.s:122    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccvIbNuD.s:127    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccvIbNuD.s:144    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/ccvIbNuD.s:149    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccvIbNuD.s:154    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccvIbNuD.s:171    .text.HAL_ResumeTick:0000000000000010 $d
     /tmp/ccvIbNuD.s:181    .bss.uwIncrementState:0000000000000000 uwIncrementState
     /tmp/ccvIbNuD.s:178    .bss.uwIncrementState:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
