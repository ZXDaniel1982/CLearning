; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\User\fonts -I..\..\fatfs\src -D__MICROLIB -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.FirmwareUpdate||, CODE, READONLY, ALIGN=2

                  FirmwareUpdate PROC
;;;62     
;;;63     void FirmwareUpdate(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;64     {
;;;65     	FLASH_Status iap_status = FLASH_COMPLETE;
000004  f04f0809          MOV      r8,#9
;;;66     	u32 addrx,endaddr;
;;;67     	u32 iap_offset;
;;;68     	u32 *pBuffer;
;;;69     	
;;;70     	//LED_GPIO_Config();
;;;71     	if(SD_Init() != 0)
000008  f7fffffe          BL       SD_Init
00000c  b108              CBZ      r0,|L1.18|
                  |L1.14|
;;;72     		return;
;;;73     	if(f_mount(&Fs,"0:",1) == 0)
;;;74     	{
;;;75     		res = f_open(&UpdateFiles,"output.bin",FA_OPEN_EXISTING|FA_READ);		//打开文件
;;;76     		
;;;77     		if(FR_OK != res)
;;;78     		{
;;;79     			JumpAddress = *(__IO uint32_t*) (APPLICATION_ADDRESS + 4);
;;;80     			/* 用户应用地址 */
;;;81     			Jump_To_Application = (pFunction) JumpAddress;
;;;82     			/* 初始化MSP */
;;;83     			__set_MSP(*(__IO uint32_t*) APPLICATION_ADDRESS);
;;;84     			printf("\n\rJump_To_Application~\n\r");
;;;85     			Jump_To_Application();
;;;86     			printf("\n\rJump is OK!..............~\n\r");			
;;;87     			return;
;;;88     		}
;;;89     		
;;;90     		
;;;91     		printf("\n\rOpen flie is Ok.\n\r");
;;;92     		FLASH_Unlock();															//解锁
;;;93     		FLASH_DataCacheCmd(DISABLE);
;;;94     		printf("\n\rUnlock flie is Ok.\n\r");
;;;95     		
;;;96     		addrx = APP_START_ADDR;//标志设为起始地址
;;;97     		endaddr = addrx + UpdateFiles.fsize;//结束的地址为起始地址加文件大小
;;;98     		iap_status=STM32F4FLASH_CheckEmpty(addrx,endaddr);//检查要写入的范围是否为空
;;;99     		if(iap_status == FLASH_COMPLETE)//如果检查完毕后发现已经擦除完了就可以进行IAP了
;;;100    		{
;;;101    			while(1)
;;;102    			{
;;;103    				res = f_read(&UpdateFiles,iap_buffer,IAP_PAGE_SIZE,&BytesRead);//读取2048个字节
;;;104    				if(res || BytesRead==0)//如果读取失败或者读取到的大小为0 则返回
;;;105    					break;
;;;106    				pBuffer=(u32*)iap_buffer;//32位指针指向读取的2K缓冲区
;;;107    				//将结果循环写入缓冲区 当遇到已经读取的大小或者总体的2K大小后 退出
;;;108    				for(iap_offset=0;iap_offset<IAP_PAGE_SIZE || iap_offset<BytesRead;iap_offset+=4)
;;;109    				{
;;;110    					if(FLASH_ProgramWord(addrx,*pBuffer) != FLASH_COMPLETE)//写入四个字节
;;;111    					{
;;;112    						break;
;;;113    					}
;;;114    					addrx+=4;//起始地址加4
;;;115    					pBuffer++;//指针加1
;;;116    				}
;;;117    				//LED1^=1;
;;;118    				if(addrx>=endaddr)
;;;119    					break;
;;;120    			}
;;;121    			f_close(&UpdateFiles);
;;;122    		}
;;;123    		f_mount(&Fs,"0:",0);
;;;124    		
;;;125    		
;;;126    		printf("\n\rCopy flie is Ok.\n\r");
;;;127    		FLASH_DataCacheCmd(ENABLE);
;;;128    		FLASH_Lock();
;;;129    		printf("\n\rLock flie is Ok!\n\r");
;;;130    	}
;;;131    }
00000e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.18|
000012  2201              MOVS     r2,#1                 ;73
000014  a13f              ADR      r1,|L1.276|
000016  4840              LDR      r0,|L1.280|
000018  f7fffffe          BL       f_mount
00001c  2800              CMP      r0,#0                 ;73
00001e  d177              BNE      |L1.272|
000020  2201              MOVS     r2,#1                 ;75
000022  a13e              ADR      r1,|L1.284|
000024  4840              LDR      r0,|L1.296|
000026  f7fffffe          BL       f_open
00002a  4940              LDR      r1,|L1.300|
00002c  7008              STRB     r0,[r1,#0]            ;75
00002e  4608              MOV      r0,r1                 ;77
000030  7800              LDRB     r0,[r0,#0]            ;77  ; res
000032  b1b0              CBZ      r0,|L1.98|
000034  483e              LDR      r0,|L1.304|
000036  6840              LDR      r0,[r0,#4]            ;79
000038  493e              LDR      r1,|L1.308|
00003a  6008              STR      r0,[r1,#0]            ;79  ; JumpAddress
00003c  4608              MOV      r0,r1                 ;81
00003e  6800              LDR      r0,[r0,#0]            ;81  ; JumpAddress
000040  493d              LDR      r1,|L1.312|
000042  6008              STR      r0,[r1,#0]            ;81  ; Jump_To_Application
000044  493a              LDR      r1,|L1.304|
000046  6808              LDR      r0,[r1,#0]            ;83
000048  f3808808          MSR      MSP,r0                ;83
00004c  bf00              NOP                            ;83
00004e  a03b              ADR      r0,|L1.316|
000050  f7fffffe          BL       __2printf
000054  4838              LDR      r0,|L1.312|
000056  6800              LDR      r0,[r0,#0]            ;85  ; Jump_To_Application
000058  4780              BLX      r0                    ;85
00005a  a03f              ADR      r0,|L1.344|
00005c  f7fffffe          BL       __2printf
000060  e7d5              B        |L1.14|
                  |L1.98|
000062  a045              ADR      r0,|L1.376|
000064  f7fffffe          BL       __2printf
000068  f7fffffe          BL       FLASH_Unlock
00006c  2000              MOVS     r0,#0                 ;93
00006e  f7fffffe          BL       FLASH_DataCacheCmd
000072  a047              ADR      r0,|L1.400|
000074  f7fffffe          BL       __2printf
000078  4c2d              LDR      r4,|L1.304|
00007a  482b              LDR      r0,|L1.296|
00007c  68c0              LDR      r0,[r0,#0xc]          ;97  ; UpdateFiles
00007e  1905              ADDS     r5,r0,r4              ;97
000080  4629              MOV      r1,r5                 ;98
000082  4620              MOV      r0,r4                 ;98
000084  f7fffffe          BL       STM32F4FLASH_CheckEmpty
000088  4680              MOV      r8,r0                 ;98
00008a  f1b80f09          CMP      r8,#9                 ;99
00008e  d12d              BNE      |L1.236|
000090  e027              B        |L1.226|
                  |L1.146|
000092  4b45              LDR      r3,|L1.424|
000094  f44f6200          MOV      r2,#0x800             ;103
000098  4944              LDR      r1,|L1.428|
00009a  4823              LDR      r0,|L1.296|
00009c  f7fffffe          BL       f_read
0000a0  4922              LDR      r1,|L1.300|
0000a2  7008              STRB     r0,[r1,#0]            ;103
0000a4  4608              MOV      r0,r1                 ;104
0000a6  7800              LDRB     r0,[r0,#0]            ;104  ; res
0000a8  b910              CBNZ     r0,|L1.176|
0000aa  483f              LDR      r0,|L1.424|
0000ac  6800              LDR      r0,[r0,#0]            ;104  ; BytesRead
0000ae  b900              CBNZ     r0,|L1.178|
                  |L1.176|
0000b0  e018              B        |L1.228|
                  |L1.178|
0000b2  4f3e              LDR      r7,|L1.428|
0000b4  2600              MOVS     r6,#0                 ;108
0000b6  e009              B        |L1.204|
                  |L1.184|
0000b8  4620              MOV      r0,r4                 ;110
0000ba  6839              LDR      r1,[r7,#0]            ;110
0000bc  f7fffffe          BL       FLASH_ProgramWord
0000c0  2809              CMP      r0,#9                 ;110
0000c2  d000              BEQ      |L1.198|
0000c4  e009              B        |L1.218|
                  |L1.198|
0000c6  1d24              ADDS     r4,r4,#4              ;114
0000c8  1d3f              ADDS     r7,r7,#4              ;115
0000ca  1d36              ADDS     r6,r6,#4              ;108
                  |L1.204|
0000cc  f5b66f00          CMP      r6,#0x800             ;108
0000d0  d3f2              BCC      |L1.184|
0000d2  4835              LDR      r0,|L1.424|
0000d4  6800              LDR      r0,[r0,#0]            ;108  ; BytesRead
0000d6  4286              CMP      r6,r0                 ;108
0000d8  d3ee              BCC      |L1.184|
                  |L1.218|
0000da  bf00              NOP                            ;112
0000dc  42ac              CMP      r4,r5                 ;118
0000de  d300              BCC      |L1.226|
0000e0  e000              B        |L1.228|
                  |L1.226|
0000e2  e7d6              B        |L1.146|
                  |L1.228|
0000e4  bf00              NOP                            ;105
0000e6  4810              LDR      r0,|L1.296|
0000e8  f7fffffe          BL       f_close
                  |L1.236|
0000ec  2200              MOVS     r2,#0                 ;123
0000ee  a109              ADR      r1,|L1.276|
0000f0  4809              LDR      r0,|L1.280|
0000f2  f7fffffe          BL       f_mount
0000f6  a02e              ADR      r0,|L1.432|
0000f8  f7fffffe          BL       __2printf
0000fc  2001              MOVS     r0,#1                 ;127
0000fe  f7fffffe          BL       FLASH_DataCacheCmd
000102  f7fffffe          BL       FLASH_Lock
000106  e000              B        |L1.266|
000108  e002              B        |L1.272|
                  |L1.266|
00010a  a02f              ADR      r0,|L1.456|
00010c  f7fffffe          BL       __2printf
                  |L1.272|
000110  bf00              NOP      
000112  e77c              B        |L1.14|
;;;132    
                          ENDP

                  |L1.276|
000114  303a00            DCB      "0:",0
000117  00                DCB      0
                  |L1.280|
                          DCD      ||Fs||
                  |L1.284|
00011c  6f757470          DCB      "output.bin",0
000120  75742e62
000124  696e00  
000127  00                DCB      0
                  |L1.296|
                          DCD      UpdateFiles
                  |L1.300|
                          DCD      ||res||
                  |L1.304|
                          DCD      0x08010000
                  |L1.308|
                          DCD      JumpAddress
                  |L1.312|
                          DCD      Jump_To_Application
                  |L1.316|
00013c  0a0d4a75          DCB      "\n\rJump_To_Application~\n\r",0
000140  6d705f54
000144  6f5f4170
000148  706c6963
00014c  6174696f
000150  6e7e0a0d
000154  00      
000155  00                DCB      0
000156  00                DCB      0
000157  00                DCB      0
                  |L1.344|
000158  0a0d4a75          DCB      "\n\rJump is OK!..............~\n\r",0
00015c  6d702069
000160  73204f4b
000164  212e2e2e
000168  2e2e2e2e
00016c  2e2e2e2e
000170  2e2e2e7e
000174  0a0d00  
000177  00                DCB      0
                  |L1.376|
000178  0a0d4f70          DCB      "\n\rOpen flie is Ok.\n\r",0
00017c  656e2066
000180  6c696520
000184  6973204f
000188  6b2e0a0d
00018c  00      
00018d  00                DCB      0
00018e  00                DCB      0
00018f  00                DCB      0
                  |L1.400|
000190  0a0d556e          DCB      "\n\rUnlock flie is Ok.\n\r",0
000194  6c6f636b
000198  20666c69
00019c  65206973
0001a0  204f6b2e
0001a4  0a0d00  
0001a7  00                DCB      0
                  |L1.424|
                          DCD      BytesRead
                  |L1.428|
                          DCD      iap_buffer
                  |L1.432|
0001b0  0a0d436f          DCB      "\n\rCopy flie is Ok.\n\r",0
0001b4  70792066
0001b8  6c696520
0001bc  6973204f
0001c0  6b2e0a0d
0001c4  00      
0001c5  00                DCB      0
0001c6  00                DCB      0
0001c7  00                DCB      0
                  |L1.456|
0001c8  0a0d4c6f          DCB      "\n\rLock flie is Ok!\n\r",0
0001cc  636b2066
0001d0  6c696520
0001d4  6973204f
0001d8  6b210a0d
0001dc  00      
0001dd  00                DCB      0
0001de  00                DCB      0
0001df  00                DCB      0

                          AREA ||i.PrintfLogo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  PrintfLogo PROC
;;;240    */
;;;241    static void PrintfLogo(void)
000000  b570              PUSH     {r4-r6,lr}
;;;242    {
;;;243    	/* 检测CPU ID */
;;;244    	{
;;;245    		/* 参考手册：
;;;246    			32.6.1 MCU device ID code
;;;247    			33.1 Unique device ID register (96 bits)
;;;248    		*/
;;;249    		uint32_t CPU_Sn0, CPU_Sn1, CPU_Sn2;
;;;250    
;;;251    		CPU_Sn0 = *(__IO uint32_t*)(0x1FFF7A10);
000002  4820              LDR      r0,|L2.132|
000004  6804              LDR      r4,[r0,#0]
;;;252    		CPU_Sn1 = *(__IO uint32_t*)(0x1FFF7A10 + 4);
000006  1d00              ADDS     r0,r0,#4
000008  6805              LDR      r5,[r0,#0]
;;;253    		CPU_Sn2 = *(__IO uint32_t*)(0x1FFF7A10 + 8);
00000a  1d00              ADDS     r0,r0,#4
00000c  6806              LDR      r6,[r0,#0]
;;;254    
;;;255    		printf("\r\nCPU : STM32F407IGT6, LQFP176, UID = %08X %08X %08X\n\r"
00000e  4623              MOV      r3,r4
000010  462a              MOV      r2,r5
000012  4631              MOV      r1,r6
000014  a01c              ADR      r0,|L2.136|
000016  f7fffffe          BL       __2printf
;;;256    			, CPU_Sn2, CPU_Sn1, CPU_Sn0);
;;;257    	}
;;;258    
;;;259    	printf("\n\r");
00001a  a028              ADR      r0,|L2.188|
00001c  f7fffffe          BL       __2printf
;;;260    	printf("*************************************************************\n\r");
000020  a027              ADR      r0,|L2.192|
000022  f7fffffe          BL       __2printf
;;;261    	printf("* 例程名称   : %s\r\n", EXAMPLE_NAME);	/* 打印例程名称 */
000026  a136              ADR      r1,|L2.256|
000028  a039              ADR      r0,|L2.272|
00002a  f7fffffe          BL       __2printf
;;;262    	printf("* 例程版本   : %s\r\n", DEMO_VER);		/* 打印例程版本 */
00002e  a13d              ADR      r1,|L2.292|
000030  a03e              ADR      r0,|L2.300|
000032  f7fffffe          BL       __2printf
;;;263    	printf("* 发布日期   : %s\r\n", EXAMPLE_DATE);	/* 打印例程日期 */
000036  a142              ADR      r1,|L2.320|
000038  a044              ADR      r0,|L2.332|
00003a  f7fffffe          BL       __2printf
;;;264    
;;;265    	/* 打印ST固件库版本，这3个定义宏在stm32f10x.h文件中 */
;;;266    	printf("* 固件库版本 : V%d.%d.%d (STM32F4xx_StdPeriph_Driver)\r\n", __STM32F4XX_STDPERIPH_VERSION_MAIN,
00003e  2300              MOVS     r3,#0
000040  2203              MOVS     r2,#3
000042  2101              MOVS     r1,#1
000044  a046              ADR      r0,|L2.352|
000046  f7fffffe          BL       __2printf
;;;267    			__STM32F4XX_STDPERIPH_VERSION_SUB1,__STM32F4XX_STDPERIPH_VERSION_SUB2);
;;;268    	printf("* \r\n");	/* 打印一行空格 */
00004a  a053              ADR      r0,|L2.408|
00004c  f7fffffe          BL       __2printf
;;;269    	printf("* QQ    : 1295744630 \r\n");
000050  a053              ADR      r0,|L2.416|
000052  f7fffffe          BL       __2printf
;;;270    	printf("* 旺旺  : armfly\r\n");
000056  a058              ADR      r0,|L2.440|
000058  f7fffffe          BL       __2printf
;;;271    	printf("* Email : armfly@qq.com \r\n");
00005c  a05b              ADR      r0,|L2.460|
00005e  f7fffffe          BL       __2printf
;;;272    	printf("* 淘宝店: armfly.taobao.com\r\n");
000062  a061              ADR      r0,|L2.488|
000064  f7fffffe          BL       __2printf
;;;273    	printf("* Copyright www.armfly.com 安富莱电子\r\n");
000068  a067              ADR      r0,|L2.520|
00006a  f7fffffe          BL       __2printf
;;;274    	printf("*************************************************************\n\r");
00006e  a014              ADR      r0,|L2.192|
000070  f7fffffe          BL       __2printf
;;;275    	printf("1. 电脑键盘按下数字1进行新程序的bin文件下载\n\r");
000074  a06e              ADR      r0,|L2.560|
000076  f7fffffe          BL       __2printf
;;;276    	printf("2. 电脑键盘按下数字2跳转到新的程序执行\n\r");
00007a  a079              ADR      r0,|L2.608|
00007c  f7fffffe          BL       __2printf
;;;277    }
000080  bd70              POP      {r4-r6,pc}
;;;278    
                          ENDP

000082  0000              DCW      0x0000
                  |L2.132|
                          DCD      0x1fff7a10
                  |L2.136|
000088  0d0a4350          DCB      "\r\nCPU : STM32F407IGT6, LQFP176, UID = %08X %08X %08X"
00008c  55203a20
000090  53544d33
000094  32463430
000098  37494754
00009c  362c204c
0000a0  51465031
0000a4  37362c20
0000a8  55494420
0000ac  3d202530
0000b0  38582025
0000b4  30385820
0000b8  25303858
                  |L2.188|
0000bc  0a0d00            DCB      "\n\r",0
0000bf  00                DCB      0
                  |L2.192|
0000c0  2a2a2a2a          DCB      "*******************************************************"
0000c4  2a2a2a2a
0000c8  2a2a2a2a
0000cc  2a2a2a2a
0000d0  2a2a2a2a
0000d4  2a2a2a2a
0000d8  2a2a2a2a
0000dc  2a2a2a2a
0000e0  2a2a2a2a
0000e4  2a2a2a2a
0000e8  2a2a2a2a
0000ec  2a2a2a2a
0000f0  2a2a2a2a
0000f4  2a2a2a  
0000f7  2a2a2a2a          DCB      "******\n\r",0
0000fb  2a2a0a0d
0000ff  00      
                  |L2.256|
000100  56352d31          DCB      "V5-136_",180,174,191,218,"IAP",0
000104  33365fb4
000108  aebfda49
00010c  415000  
00010f  00                DCB      0
                  |L2.272|
000110  2a20c0fd          DCB      "* ",192,253,179,204,195,251,179,198,"   : %s\r\n",0
000114  b3ccc3fb
000118  b3c62020
00011c  203a2025
000120  730d0a00
                  |L2.292|
000124  56312e32          DCB      "V1.2",0
000128  00      
000129  00                DCB      0
00012a  00                DCB      0
00012b  00                DCB      0
                  |L2.300|
00012c  2a20c0fd          DCB      "* ",192,253,179,204,176,230,177,190,"   : %s\r\n",0
000130  b3ccb0e6
000134  b1be2020
000138  203a2025
00013c  730d0a00
                  |L2.320|
000140  32303135          DCB      "2015-03-05",0
000144  2d30332d
000148  303500  
00014b  00                DCB      0
                  |L2.332|
00014c  2a20b7a2          DCB      "* ",183,162,178,188,200,213,198,218,"   : %s\r\n",0
000150  b2bcc8d5
000154  c6da2020
000158  203a2025
00015c  730d0a00
                  |L2.352|
000160  2a20b9cc          DCB      "* ",185,204,188,254,191,226,176,230,177,190," : V%d.%d."
000164  bcfebfe2
000168  b0e6b1be
00016c  203a2056
000170  25642e25
000174  642e    
000176  25642028          DCB      "%d (STM32F4xx_StdPeriph_Driver)\r\n",0
00017a  53544d33
00017e  32463478
000182  785f5374
000186  64506572
00018a  6970685f
00018e  44726976
000192  6572290d
000196  0a00    
                  |L2.408|
000198  2a200d0a          DCB      "* \r\n",0
00019c  00      
00019d  00                DCB      0
00019e  00                DCB      0
00019f  00                DCB      0
                  |L2.416|
0001a0  2a205151          DCB      "* QQ    : 1295744630 \r\n",0
0001a4  20202020
0001a8  3a203132
0001ac  39353734
0001b0  34363330
0001b4  200d0a00
                  |L2.440|
0001b8  2a20cdfa          DCB      "* ",205,250,205,250,"  : armfly\r\n",0
0001bc  cdfa2020
0001c0  3a206172
0001c4  6d666c79
0001c8  0d0a00  
0001cb  00                DCB      0
                  |L2.460|
0001cc  2a20456d          DCB      "* Email : armfly@qq.com \r\n",0
0001d0  61696c20
0001d4  3a206172
0001d8  6d666c79
0001dc  4071712e
0001e0  636f6d20
0001e4  0d0a00  
0001e7  00                DCB      0
                  |L2.488|
0001e8  2a20ccd4          DCB      "* ",204,212,177,166,181,234,": armfly.taobao.com\r\n",0
0001ec  b1a6b5ea
0001f0  3a206172
0001f4  6d666c79
0001f8  2e74616f
0001fc  62616f2e
000200  636f6d0d
000204  0a00    
000206  00                DCB      0
000207  00                DCB      0
                  |L2.520|
000208  2a20436f          DCB      "* Copyright www.armfly.com ",176,178,184,187,192,179,181
00020c  70797269
000210  67687420
000214  7777772e
000218  61726d66
00021c  6c792e63
000220  6f6d20b0
000224  b2b8bbc0
000228  b3b5    
00022a  e7d7d30d          DCB      231,215,211,"\r\n",0
00022e  0a00    
                  |L2.560|
000230  312e20b5          DCB      "1. ",181,231,196,212,188,252,197,204,176,180,207,194,202
000234  e7c4d4bc
000238  fcc5ccb0
00023c  b4cfc2ca
000240  fdd7d631          DCB      253,215,214,"1",189,248,208,208,208,194,179,204,208,242,181
000244  bdf8d0d0
000248  d0c2b3cc
00024c  d0f2b5  
00024f  c462696e          DCB      196,"bin",206,196,188,254,207,194,212,216,"\n\r",0
000253  cec4bcfe
000257  cfc2d4d8
00025b  0a0d00  
00025e  00                DCB      0
00025f  00                DCB      0
                  |L2.608|
000260  322e20b5          DCB      "2. ",181,231,196,212,188,252,197,204,176,180,207,194,202
000264  e7c4d4bc
000268  fcc5ccb0
00026c  b4cfc2ca
000270  fdd7d632          DCB      253,215,214,"2",204,248,215,170,181,189,208,194,181,196,179
000274  ccf8d7aa
000278  b5bdd0c2
00027c  b5c4b3  
00027f  ccd0f2d6          DCB      204,208,242,214,180,208,208,"\n\r",0
000283  b4d0d00a
000287  0d00    
000289  00                DCB      0
00028a  00                DCB      0
00028b  00                DCB      0

                          AREA ||i.SerialDownload||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  SerialDownload PROC
;;;204    */
;;;205    static void SerialDownload(void)
000000  b510              PUSH     {r4,lr}
;;;206    {
;;;207    	int32_t Size = 0;
000002  2400              MOVS     r4,#0
;;;208    
;;;209    	printf("等待发送文件..................按键盘上的字母a终止发送\n\r");
000004  a012              ADR      r0,|L3.80|
000006  f7fffffe          BL       __2printf
;;;210    	Size = Ymodem_Receive(&tab_1024[0]);
00000a  481f              LDR      r0,|L3.136|
00000c  f7fffffe          BL       Ymodem_Receive
000010  4604              MOV      r4,r0
;;;211    	if (Size > 0)
000012  2c00              CMP      r4,#0
000014  dd05              BLE      |L3.34|
;;;212    	{
;;;213    		printf("\n\r编程成功，文件名：%s，大小：%d字节\n\r", FileName, Size);
000016  4622              MOV      r2,r4
000018  491c              LDR      r1,|L3.140|
00001a  a01d              ADR      r0,|L3.144|
00001c  f7fffffe          BL       __2printf
000020  e014              B        |L3.76|
                  |L3.34|
;;;214    	}
;;;215    	else if (Size == -1)
000022  1c60              ADDS     r0,r4,#1
000024  b918              CBNZ     r0,|L3.46|
;;;216    	{
;;;217    		printf("\n\r下载的文件大小超出了用户区flash大小\n\r");
000026  a024              ADR      r0,|L3.184|
000028  f7fffffe          BL       __2printf
00002c  e00e              B        |L3.76|
                  |L3.46|
;;;218    	}
;;;219    	else if (Size == -2)
00002e  1ca0              ADDS     r0,r4,#2
000030  b918              CBNZ     r0,|L3.58|
;;;220    	{
;;;221    		printf("\n\r校验失败\n\r");
000032  a02b              ADR      r0,|L3.224|
000034  f7fffffe          BL       __2printf
000038  e008              B        |L3.76|
                  |L3.58|
;;;222    	}
;;;223    	else if (Size == -3)
00003a  1ce0              ADDS     r0,r4,#3
00003c  b918              CBNZ     r0,|L3.70|
;;;224    	{
;;;225    		printf("\n\r用户终止发送\n\r");
00003e  a02c              ADR      r0,|L3.240|
000040  f7fffffe          BL       __2printf
000044  e002              B        |L3.76|
                  |L3.70|
;;;226    	}
;;;227    	else
;;;228    	{
;;;229    		printf("\n\r文件接收失败\n\r");
000046  a02f              ADR      r0,|L3.260|
000048  f7fffffe          BL       __2printf
                  |L3.76|
;;;230    	}
;;;231    }
00004c  bd10              POP      {r4,pc}
;;;232    
                          ENDP

00004e  0000              DCW      0x0000
                  |L3.80|
000050  b5c8b4fd          DCB      181,200,180,253,183,162,203,205,206,196,188,254,"......."
000054  b7a2cbcd
000058  cec4bcfe
00005c  2e2e2e2e
000060  2e2e2e  
000063  2e2e2e2e          DCB      "...........",176,180,188,252,197,204,201,207,181,196,215
000067  2e2e2e2e
00006b  2e2e2eb0
00006f  b4bcfcc5
000073  ccc9cfb5
000077  c4d7    
000079  d6c4b861          DCB      214,196,184,"a",214,213,214,185,183,162,203,205,"\n\r",0
00007d  d6d5d6b9
000081  b7a2cbcd
000085  0a0d00  
                  |L3.136|
                          DCD      tab_1024
                  |L3.140|
                          DCD      FileName
                  |L3.144|
000090  0a0db1e0          DCB      "\n\r",177,224,179,204,179,201,185,166,163,172,206,196,188
000094  b3ccb3c9
000098  b9a6a3ac
00009c  cec4bc  
00009f  fec3fba3          DCB      254,195,251,163,186,"%s",163,172,180,243,208,161,163,186
0000a3  ba2573a3
0000a7  acb4f3d0
0000ab  a1a3ba  
0000ae  2564d7d6          DCB      "%d",215,214,189,218,"\n\r",0
0000b2  bdda0a0d
0000b6  00      
0000b7  00                DCB      0
                  |L3.184|
0000b8  0a0dcfc2          DCB      "\n\r",207,194,212,216,181,196,206,196,188,254,180,243,208
0000bc  d4d8b5c4
0000c0  cec4bcfe
0000c4  b4f3d0  
0000c7  a1b3acb3          DCB      161,179,172,179,246,193,203,211,195,187,167,199,248,"fla"
0000cb  f6c1cbd3
0000cf  c3bba7c7
0000d3  f8666c61
0000d7  7368b4f3          DCB      "sh",180,243,208,161,"\n\r",0
0000db  d0a10a0d
0000df  00      
                  |L3.224|
0000e0  0a0dd0a3          DCB      "\n\r",208,163,209,233,202,167,176,220,"\n\r",0
0000e4  d1e9caa7
0000e8  b0dc0a0d
0000ec  00      
0000ed  00                DCB      0
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L3.240|
0000f0  0a0dd3c3          DCB      "\n\r",211,195,187,167,214,213,214,185,183,162,203,205,"\n"
0000f4  bba7d6d5
0000f8  d6b9b7a2
0000fc  cbcd0a  
0000ff  0d00              DCB      "\r",0
000101  00                DCB      0
000102  00                DCB      0
000103  00                DCB      0
                  |L3.260|
000104  0a0dcec4          DCB      "\n\r",206,196,188,254,189,211,202,213,202,167,176,220,"\n"
000108  bcfebdd3
00010c  cad5caa7
000110  b0dc0a  
000113  0d00              DCB      "\r",0
000115  00                DCB      0
000116  00                DCB      0
000117  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;141    */
;;;142    int main(void)
000000  bf00              NOP      
;;;143    {
;;;144    	uint8_t key = 0;
;;;145    
;;;146    	bsp_Init();		/* 硬件初始化 */
000002  f7fffffe          BL       bsp_Init
;;;147    	PrintfLogo();	/* 打印例程信息到串口1 */
000006  f7fffffe          BL       PrintfLogo
;;;148    	FLASH_If_Init(); /* 初始化flash操作 */
00000a  f7fffffe          BL       FLASH_If_Init
;;;149    	
;;;150    //	printf("Update ing...");
;;;151    //	FirmwareUpdate();
;;;152    	
;;;153    	/* 如果用户区flash有写保护 */
;;;154    	if (FLASH_If_GetWriteProtectionStatus() == 0)   
00000e  f7fffffe          BL       FLASH_If_GetWriteProtectionStatus
000012  b950              CBNZ     r0,|L4.42|
;;;155    	{
;;;156    		/* 解保护 */
;;;157    		if(FLASH_If_DisableWriteProtection() == 1)
000014  f7fffffe          BL       FLASH_If_DisableWriteProtection
000018  2801              CMP      r0,#1
00001a  d103              BNE      |L4.36|
;;;158    		{
;;;159    			/* 解保护成功 */
;;;160    			printf("\n\r解保护成功\n\r");
00001c  a014              ADR      r0,|L4.112|
00001e  f7fffffe          BL       __2printf
000022  e002              B        |L4.42|
                  |L4.36|
;;;161    		}
;;;162    		else
;;;163    		{
;;;164    			/* 解保护失败 */
;;;165    			SerialPutString("解保护失败\r\n");
000024  a016              ADR      r0,|L4.128|
000026  f7fffffe          BL       Serial_PutString
                  |L4.42|
;;;166    		}
;;;167    	}
;;;168    
;;;169    	while (1)
00002a  e01f              B        |L4.108|
                  |L4.44|
;;;170    	{
;;;171    		/* 等待接收字符（通过电脑键盘输入） */
;;;172    		key = GetKey();
00002c  f7fffffe          BL       GetKey
;;;173    
;;;174    //		if (key == 0x31)
;;;175    //		{
;;;176    			/* 下载新的用户代码到flash里面  */
;;;177    			//SerialDownload();
;;;178    			printf("\n\rIAP is Working...\n\r");
000030  a017              ADR      r0,|L4.144|
000032  f7fffffe          BL       __2printf
;;;179    			FirmwareUpdate();
000036  f7fffffe          BL       FirmwareUpdate
;;;180    			printf("\n\rIAP is OK!\n\r");
00003a  a01b              ADR      r0,|L4.168|
00003c  f7fffffe          BL       __2printf
;;;181    //		}
;;;182    //		else if (key == 0x32) 
;;;183    //		{
;;;184    			JumpAddress = *(__IO uint32_t*) (APPLICATION_ADDRESS + 4);
000040  481d              LDR      r0,|L4.184|
000042  6840              LDR      r0,[r0,#4]
000044  491d              LDR      r1,|L4.188|
000046  6008              STR      r0,[r1,#0]  ; JumpAddress
;;;185    			/* 用户应用地址 */
;;;186    			Jump_To_Application = (pFunction) JumpAddress;
000048  4608              MOV      r0,r1
00004a  6800              LDR      r0,[r0,#0]  ; JumpAddress
00004c  491c              LDR      r1,|L4.192|
00004e  6008              STR      r0,[r1,#0]  ; Jump_To_Application
;;;187    			/* 初始化MSP */
;;;188    			__set_MSP(*(__IO uint32_t*) APPLICATION_ADDRESS);
000050  4919              LDR      r1,|L4.184|
000052  6808              LDR      r0,[r1,#0]
000054  f3808808          MSR      MSP,r0
000058  bf00              NOP      
;;;189    			printf("\n\rJump_To_Application~\n\r");
00005a  a01a              ADR      r0,|L4.196|
00005c  f7fffffe          BL       __2printf
;;;190    			Jump_To_Application();
000060  4817              LDR      r0,|L4.192|
000062  6800              LDR      r0,[r0,#0]  ; Jump_To_Application
000064  4780              BLX      r0
;;;191    			printf("\n\rJump is OK!..............~\n\r");
000066  a01e              ADR      r0,|L4.224|
000068  f7fffffe          BL       __2printf
                  |L4.108|
00006c  e7de              B        |L4.44|
;;;192    //		}
;;;193    	}
;;;194    	
;;;195    }
;;;196    
                          ENDP

00006e  0000              DCW      0x0000
                  |L4.112|
000070  0a0dbde2          DCB      "\n\r",189,226,177,163,187,164,179,201,185,166,"\n\r",0
000074  b1a3bba4
000078  b3c9b9a6
00007c  0a0d00  
00007f  00                DCB      0
                  |L4.128|
000080  bde2b1a3          DCB      189,226,177,163,187,164,202,167,176,220,"\r\n",0
000084  bba4caa7
000088  b0dc0d0a
00008c  00      
00008d  00                DCB      0
00008e  00                DCB      0
00008f  00                DCB      0
                  |L4.144|
000090  0a0d4941          DCB      "\n\rIAP is Working...\n\r",0
000094  50206973
000098  20576f72
00009c  6b696e67
0000a0  2e2e2e0a
0000a4  0d00    
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L4.168|
0000a8  0a0d4941          DCB      "\n\rIAP is OK!\n\r",0
0000ac  50206973
0000b0  204f4b21
0000b4  0a0d00  
0000b7  00                DCB      0
                  |L4.184|
                          DCD      0x08010000
                  |L4.188|
                          DCD      JumpAddress
                  |L4.192|
                          DCD      Jump_To_Application
                  |L4.196|
0000c4  0a0d4a75          DCB      "\n\rJump_To_Application~\n\r",0
0000c8  6d705f54
0000cc  6f5f4170
0000d0  706c6963
0000d4  6174696f
0000d8  6e7e0a0d
0000dc  00      
0000dd  00                DCB      0
0000de  00                DCB      0
0000df  00                DCB      0
                  |L4.224|
0000e0  0a0d4a75          DCB      "\n\rJump is OK!..............~\n\r",0
0000e4  6d702069
0000e8  73204f4b
0000ec  212e2e2e
0000f0  2e2e2e2e
0000f4  2e2e2e2e
0000f8  2e2e2e7e
0000fc  0a0d00  
0000ff  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  tab_1024
                          %        1024
                  FileName
                          %        256
                  ||Fs||
                          %        560
                  UpdateFiles
                          %        548
                  iap_buffer
                          %        2048

                          AREA ||.data||, DATA, ALIGN=2

                  Jump_To_Application
                          DCD      0x00000000
                  JumpAddress
                          DCD      0x00000000
                  FlashProtection
                          DCD      0x00000000
                  ||res||
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  BytesRead
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_e86ed1dd____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_e86ed1dd____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_e86ed1dd____REVSH|
#line 144
|__asm___6_main_c_e86ed1dd____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
